{"path":"sem1/EProg/extra/slides/EProg_s09_methoden++.pdf","text":"252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 0 Ei n f a c h e Ja v a Pr o g r a m m e Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ü r i c h 1 252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 6 Me t h o d e n , Te i l 2 Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ü r i c h 2 Üb e r s i c h t § 2. 6 Me t h o d e n , T e i l 2 § 2. 6. 1 Me t h od e n mi t Pa r a m e t e r n § 2. 6. 2 Rü c k g a b e w e r t e § 2. 6. 3 Na m e n s r ä u m e § 2. 7 S t r i n g s § 2. 8 Noc h m a l s Sc h l e i f e n 3 2 .6 .3 Si c h t b ark e i t vo n Va r i a b l e n n a m e n § Na m e s r ä u m e (« S c op e » ): Ber ei c h in d e m ei n Na m e si c h t b ar is t § Da n n ka n n di e V a r i a bl e ge l e s e n / mod i f i z i e r t we r d e n § Da n n ka n n ei n e Me t h od e au f g eru f en we r d e n ( sp ä t e r ) § 1. A p p r o x i m a t i o n für da s In n e n le b e n vo n Me t h o d e n § We i t e r e As p e k t e in sp ä t e r e n Vo r l e s u n g e n 4 Sc o p e ( Si c h t b ark e i t s b e r e i c h ) sc o p e : D e r Te i l ei n es Pr o gr a m m in de m ei n e Va r i a b l e si c h t b ar is t . § Va r i a b l e mü s s e n de k l a r i e r t se i n be v o r si e si c h tb a r si n d § De k l a r a t i o n e n mü s s e n ei n d eu t i g se i n § Si c h tb a r vo n De k l a r a t i o n bi s zu m Ende de s Bl o c k s fü r de n di e V a r i a bl e de k l a r i e r t is t Bl o c k : dur c h { u n d } be gr e nz t 6 { und } st r u k t u r i e r e n ein Pr o g r amm public static void fct ( int j ) { int i ; int k; } 7 i si c h t b a r k si c h t b a r j si c h t b a r { und } st r u k t u r i e r e n ein Pr o g r amm if ( ...) { int i; } else { } ... 8 i si c h t b a r { und } st r u k t u r i e r e n ein Pr o g r amm for ( int i = 0; ...; ...) { } ... for ( int i = 1; ...; ...) { } ... 9 i si c h t b a r ( ande r e s ) i si c h t b a r Sc o p e ( Si c h t b ark e i t s b e r e i c h ) sc o p e : D e r T e i l ei n es Pr o gr a m m in d e m ei n e Va r i a b l e si c h t b ar is t § Va r i a b l e mü s s e n de k l a r i e r t se i n be v o r si e si c h tb a r si n d § De k l a r a t i o n e n mü s s e n ei n d eu t i g se i n § Si c h tb a r vo n De k l a r a t i o n bi s zu m Ende de s Bl o c k s ( de r dur c h { und } an g eg eb en wi r d ) § Ei ne V a r i a bl e di e i n ei n er «f o r » - Sc h l e i f e de k l a r i e r t wu r d e ka n n nur im Ru m p f de r Sc h l e i f e ve r w e n d e t we r d e n . § Ei ne Va r i a b l e d i e i n ei n er Me t h od e de k l a r i e r t wu r d e ex i s t i e r t nur in d e r Me t h od e . 11 Bl ö c k e kö n n e n ge s c h a c h t e l t sein § Lo o p s i n Me t h o d e n § Lo o p s i n Lo o p s -- ge s c h a c h t e l t e Sc h l e i f e n (« n e s t e d l oop s » ) § (J a v a : Met h o d e n kö n n e n ni c h t in ande r e n Met h o d e n ge s c h a c ht e l t se i n . ) 12 Sc o p e ( Si c h t b ark e i t s b e r e i c h ) public static void example() { int x = 3; x = x * x; for (int i = 1; i <= 10; i = i+1 ) { System.out.println ( x+i ); } // i no longer exists here System.out.println (x); } // x ceases to exist here 13 x' s s c o p ei'sscope Sc o p e ( Si c h t b ark e i t s b e r e i c h ) public static void example( int x ) { for ( int i = 1; i <= 10; i =i+1 ) { for ( int j = i ; j <=10; j =j+1 ) { System.out.print ( x + i + j + \" \"); } // j no longer exists here System.out.println ( i ); } // i no longer exists here System.out.println ( x ); } // x no longer exists here 14 Fo l g e n de r Si c h t b ark e i t s r e g e l n § Va r i a b l e oh n e übe r l a ppe nde n Si c h tb ar k e i tsb e r e i c h kö n n e n de n se l b e n Na m e n ha be n . for (int i = 1; i <= 100; i =i+1 ) { System.out.print (\"/\"); } for ( int i = 1 ; i <= 100; i =i+1) { // OK System.out.print (\" \\ \\ \"); } int i = 5; // OK: outside of loop's scope 15 Fo l g e n de r Si c h t b ark e i t s r e g e l n § Ei n e V a r i a b l e ka n n in ei n em Si c h tb ar k e i tsb e r e i c h nur ei n m al de k l a r i e r t we r d e n . for (int i = 1; i <= 100 * line; i =i+1) { int i = 2; // ERROR: overlapping scope System.out.print (\"/\"); } i = 4; // ERROR: outside scope § Ei n e Va r i a b l e ka n n ni c h t au sse r h al b ih r e s Si c h tb ar k e i tsb e - re i c h e s ve r w e n d e t we r d e n 16 Fo l g e n de r Si c h t b ark e i t s r e g e l n § Ei n e Va r i a b l e ka n n in ei n em Si c h tb ar k e i tsb e r e i c h ni c h t me h r ma l s de k l a r i e r t we r d e n . for (int i = 1; i <= 100 * line; i =i+1) { for ( int i = 2; i < line; i =i+1 ) { // ERROR: overlapping scope // variable i is already defined in method … System.out.print (\"/\"); } } 18 Si c h t b ark e i t s r e g e l n fü r Pa r a m e t e r V a r i a b l e § Di e se l b e n Re g e l n ge l t e n au c h für Pa r a m e t e r V a r i a b l e 19 Sc o p e ( Si c h t b ark e i t s b e r e i c h ) public static void function( int k) { int x = 3; int y = k+x ; System.out.println (y); } // k ceases to exist here 20 k' s s c o p ey's scope Sc o p e ( Si c h t b ark e i t s b e r e i c h ) public static void function( int k ) { int x = 3; int y = anotherFct ( k + x ); System.out.println ( y ); } // k ceases to exist here public static void otherFct ( int x ) { int y = 5; System.out.println ( x + y ); } 21 x 's s c o p ey's scope x 's s c o p ey's scope Sc o p e ( Si c h t b ark e i t s b e r e i c h ) public static void function( int k) { int x = 3; int y = anotherFct ( k+x ); System.out.println (y); } // k ceases to exist here public static void otherFct ( int k) { int y = 5; System.out.println ( k+y ); } // k ceases to exist here 22 k' s s c o p e k' s s c o p e Ve r s c h i e d e n e k ! public static void f(int x) { int i = 3; // A for (int j = 0; j < x; j =j+1 ) { // B if (j == x - 1) { int k = 0; // C k = i ; } else { int m = 1; // D } // E } //F } // G Wo s i n d i , j , k , m , x si c h t b ar ? Po l l 23 Is t … . am P u n k t … . s i ch tb ar ? 24 A B C D E F G i j k m x Wa r u m die s e Re g e l n § Le s b a r k e i t de r Pr o gr a m m e § Ve r e i n f a c h u n g de r Ve r w a l t u n g de s Sp e i c h e r s § Pl a t z fü r ei n e Va r i a b l e ei n es Ba s i s t y p e s mu s s nur in de m Bl o c k or g a n i s i e r t we r d e n , i n de m di e V a r i a bl e de k l a r i e r t is t § We r t e (d ie in ei n er Va r i a b l e ei n es Ba s i s t y p e s ) ge s p e i c h e r t we r d e n ve r s c h w i n d e n am Ende de s Bl o c k e s 26 Üb e r s i c h t § 2. 7 S t r i n g s § Nu r d a s wi c h t i g s t e ... 27 2 .7 S t r i n g s 28 St ri n g s § Str i n g : E i n e Fo l g e vo n Bu c h s t a b en / Ze i c h e n § Ja v a Ty p String de f i ni e r t in S t a n d a r d Bi b l i o t h e k § String Va r i a b l e de f i ni e r t wi e al l e an d er en Va r i a b l e n String na me ; § In i t i a l i s i e r u n g dur c h Str i n g L i t e r a l § Fo l g e zw i s c h e n \" und \" oh n e Ze i l e n e n d e , gg f . mi t Er s a t z d a r s t e l l u n g e n String na me = \"Here \"; od e r Te x t b l o c k String na me = \"\"\" Here we go\"\"\"; 29 3 x \" 3 x \" En d e d e r Z e i l e Le e rz e i c h e n ig n o r ie r t ! St ri n g s § Str i n g : E i n e Fo l g e vo n Bu c h s t a b en / Ze i c h e n § Ja v a Ty p String de f i ni e r t in S t a n d a r d Bi b l i o t h e k § String Va r i a b l e de f i ni e r t wi e al l e an d er en Va r i a b l e n String na me ; § In i t i a l i s i e r u n g dur c h Str i n g L i t e r a l § Fo l g e zw i s c h e n \" und \" oh n e Ze i l e n e n d e , gg f . mi t Er s a t z d a r s t e l l u n g e n String na me = \"Here \"; od e r Te x t b l o c k String na me = \"\"\" Here we go\"\"\"; System.out.println(name); 30 St ri n g s § + er z wi n g t Ko n v e r s i o n vo n an d e r e n Ty p e n ( zu String ) int x = 3; String point = \"(\" + x + \", \" + 5 + \")\"; § Ko n v e r s i o n vo n an d e r e n Ty p e n ( z. B . int ) zu String String s = \"\" + x; § \"\" is t 𝛆 , d e r le e r e Str i n g 32 St ri n g s § We i l S t r i n g s wi c h t i g si n d we r d e n si e vo m Co mp i l e/ La u f z e i t - sy s t e m be s o nde r s be ha nde l t § Wi e be i int und double zw i n g e n pr a k t i s c he Üb e r l e g u n g e n di e Pr o g r a m m i e r s p r a c h e da z u , D e t ai l s i n d e r Pr o g r a m m i e r u n g zu er w ar t en § St an d ar d Bi b l i o t h ek en t h ä l t vi e l e Me t h o d e n um S tr i ngs zu be a r be i t e n § Im m e r vo r h a n d e n , oh n e import java.util .*; § Al l e Me t h od e n la s s e n Str i n g s un v e r ä nde r t § Str i n g s si n d un v e r ä nde r ba r (« im m u t a b le » ) 33 St ri n g s § Str i n g s si n d Ob j e k t e – Me t h o d e n mi t «d o t » N o t a t i o n § Be i s p i e l e : toUpperCase () , toLowerCase () , ... § Kö n n e n für je d e n Str i n g se i n e Lä n g e ( An z a h l Ze i c h e n ) he r a us fi nde n § String str = \"Hello\"; § System.out.println (\" Laenge : \" + str.length () ); § Str i n g s er l a u b en Zu g r i f f au f d i e Bu c h s t a b en di e de n T e x t au sm ac h e n . 34 Ou t p u t : Laenge : 5 Te i l e ein es St ri n g s § Au f Te i l e ei n es Str i n g s wi r d mi t ei n em In d e x zu g e g r i f f e n § Ba s i s 0 String name = \"B. Dylan\"; § In d e x d e s er s t en Bu c h s t a b e n s : 0 § In d e x d e s le t z t e n Bu c h s t a b e n s : 1 we n i g e r al s di e Lä ng e de s S t r i ng s § name.length () == 8 § Str i n g s si n d ke i n e Ar r a y s ! § Ar r a y s we r d e n in T e il 3 be ha nde l t ( Fr a g e n bi t t e zu r ü c k h a l t e n ) in d e x 0 1 2 3 4 5 6 7 Ze i c h e n B . D y l a n 35 St ri n g s § Zu g r i f f au f El e m e n t e ei n es Str i n g s er f o l g t mi t ( vo r d e f i n i e r t e n ) Me t h o d e n § Au f r u f di e s e r Me t h od e n in Pu n k t n o t a t i o n (« d o t n o t a t io n » ) String s = \"hello\"; s. method ( parameterValues ); § Fü h r e Me t h od e method fü r s au s , « we n d e method au f s an » , « ru f e method fü r s au f » § Ke i n e Än d e r u n g vo n s ! § Er g e b n i s ka n n se i n String , int , boolean od e r ei n Ze i c h e n ( Bu c h s t a b e ) 36 String Me th od en die String lie f er n § «w h i t e s p a c e » -- Le e r z e i c he n (b la n k , s p a c e ), Ta b u l a t o r z e i c h e n , Li ne F e e d / Ca r r i a g e R e t u r n /R e t u rn /E n t e r/ Ze i l e n u m b r u c h … Me t ho d na m e De s c r i p t i o n substring( ind e x1 , ind e x2 ) or substring( ind e x1 ) th e c h a r a c te r s i n th i s s tr i n g f r o m in d e x 1 (i n c l u s i v e ) t o in d e x 2 ( ex c l u si v e ); if in d e x 2 is o m i t t e d , g r a b s t i l l e n d o f s t r in g toLowerCase () a n e w s t r i n g w i t h al l l ow e r c as e l e t t e r s toUpperCase () a n e w s t r i n g w i t h al l u p p e r c as e l e t t e r s stripLeading () a n e w s t r i n g w h os e v al u e i s t h i s s t r i n g , w i t h al l le a d in g wh i t e s p a c e re m o v e d . stripTrailing () a n e w s t r i n g w h os e v al u e i s t h i s s t r i n g , w i t h al l tr a i l i n g wh i t e s p a c e re m o v e d . 37 String Me th od en die String lie f er n § Bei s p i el String writer = \"S. Beckett\"; // Laenge : 10 System.out.println ( writer.substring (8)); // tt System.out.println ( writer.substring (0,1)); // S System.out.println ( writer.substring (3,7)); // Beck String w = writer.substring (1,2); // wie w = \".\" Me t ho d na m e De s c r i p t i o n substring( ind e x1 , ind e x2 ) or substring( ind e x1 ) th e c h a r a c te r s i n th i s s tr i n g f r o m in d e x 1 (i n c l u s i v e ) to in d e x 2 ( ex c l u si v e ); if in d e x 2 is o m i t t e d , g r a b s t i l l e n d o f s t r in g 38 in d e x 0 1 2 3 4 5 6 7 8 9 Ze i c h e n S . B e c k e t t String Me th od en die int lie f er n § Bei s p i el String writer = \"S. Beckett\"; // Laenge : 10 System.out.println ( writer.indexOf (\"Beck\")); // 3 System.out.println ( writer.indexOf (\"e\")); // 4 System.out.println ( writer.indexOf (\"e\",5)); // 7 Me t ho d na m e De s c r i p t i o n indexOf ( st r ) in d e x w h e r e t h e s t a r t o f t h e g iv e n s t r in g ap p e ar s i n t h i s s t r i n g ( - 1 i f n o t f o u n d ) length() num b e r o f c ha r a c t e r s i n t hi s s t r i ng indexOf ( st r , fr o m I nd e x ) in d e x w i t h in t h is s t r in g o f t h e fir s t o c c u r r e n c e of t h e s p e c i f i e d s u b s t r i n g , s t ar t i n g at t h e spec i f i ed i n dex ( - 1 i f n o t f o u n d ) 40 in d e x 0 1 2 3 4 5 6 7 8 9 Ze i c h e n S . B e c k e t t String we i t e r e Be i s p i e l e // index 0123456789012 String s1 = \"Alice Munro\"; String s2 = \"Doris Lessing\"; System.out.println (s1.length()); // 11 System.out.println (s1.indexOf(\"e\")); // 4 System.out.println (s2.substring(6, 9)); // Les String s3 = s2.substring(1, 7); System.out.println (s3.toLowerCase()); // oris l § Mi t di e s e m Str i n g // index 012345678901234567890123456789012 String vorlesung = \" Einfuehrung in die Programmierung \"; Wi e wü r d e n Si e d a s W o r t \" die\" ex t r a h i e r e n ? 41 0123456789 1 123456789 2 123456789 3 12 String we i t e r e Be i s p i e l e // index 0123456789012 String s1 = \"Alice Munro\"; String s2 = \"Doris Lessing\"; System.out.println (s1.length()); // 11 System.out.println (s1.indexOf(\"e\")); // 4 System.out.println (s2.substring(6, 9)); // Les String s3 = s2.substring(1, 7); System.out.println (s3.toLowerCase()); // oris l § Mi t di e s e m Str i n g // index 012345678901234567890123456789012 String vorlesung = \" Einfuehrung in die Programmierung \"; Wi e wü r d e n Si e d a s W o r t \" die\" ex t r a h i e r e n ? vorlesung.indexOf (\"die\"); // 15 vorlesung.substring (15, 18); 42 0123456789 1 123456789 2 123456789 3 12 String we i t e r e Be i s p i e l e // index 0123456789012 String s1 = \"Alice Munro\"; String s2 = \"Doris Lessing\"; System.out.println (s1.length()); // 11 System.out.println (s1.indexOf(\"e\")); // 4 System.out.println (s2.substring(6, 9)); // Les String s3 = s2.substring(1, 7); System.out.println (s3.toLowerCase()); // oris l § Mi t di e s e m Str i n g // index 012345678901234567890123456789012 String vorlesung = \" Einfuehrung in die Programmierung \"; Wi e wü r d e n Si e d a s W o r t \" die\" ex t r a h i e r e n ? int loc = vorlesung.indexOf (\"die\"); // 15 vorlesung.substring (loc, loc+3); 43 0123456789 1 123456789 2 123456789 3 12 String Ve r g l e i c h e / Ab f r a g e n String s = \"Hello\"; String t = s.toUpperCase (); if ( s.equals (t)) { System.out.println (\"Equal\")); } else { System.out.println (\"Not equal\")); } //Not equal if (\" Hello\".equals (s)) { System.out.println (\"Equal\")); } else { System.out.println (\"Not equal\")); } //Equal Me th od De sc r i p t i o n equals( st r ) ob 2 S t r i n g s d i e sel ben Bu c h s t a b e n en t h a l t en equalsIgnoreCase ( st r ) ob 2 S t r i n g s d i e sel ben Bu c h s t a b e n en t h a l t en , oh n e Be r ü c k s ic h t ig u n g vo n G r o s s - und Kl ei n sc h r ei b u n g startsWith ( st r ) ob der S t r i n g mi t den Bu c h s t a b e n des an d e r e n ( st r ) an f än g t endsWith ( st r ) ob … en det contains( st r ) ob der S t r i n g st r ( ir g e n d w o ) au f t r i t t 44 El e m e n t e ein es St ri n g s § Di e ei n z el n en Bu c h s t a b en si n d We r t e de s ( Ba s i s t y p s ) char ( sp ä t e r me h r ) String name = \"B. Dylan\"; name.charAt (0) // B if ( name.charAt (1) == '.') { … } // Paar single quote ' ' char c = name.charAt (7); System.out.println ( name.indexOf ('.')); // 1 § Ve r w e n d e n Si e == nur für Ba s i s t y p en ( z. B . int od e r char ), ni c h t für String Va r i a b l e § Sp ä t e r se h e n wi r wa n n wi r == ve r w e n d e n kö n n e n in d e x 0 1 2 3 4 5 6 7 Ze i c h e n B . D y l a n 45 Zur E r inne r ung § Zu w e i su n g e n z u St r i n g V ar i ab l e n än d e r n n i c h t d e n St r i n g § Di e V a r i a b l e v e r w e i s t a u f e i n e n a n d e r e n S t r i n g 46 An i m a t i o n 48 Zur E r inne r ung § Zu w e i su n g e n z u St r i n g V ar i ab l e n än d e r n n i c h t d e n St r i n g § Di e V a r i a b l e v e r w e i s t a u f e i n e n a n d e r e n S t r i n g § Me t h o d e n ( z. B . substring) lie f e r n ne ue n Str i n g § Ke i n e Mod i f i k a t i on de s S t r i ng fü r de n si e au f g eru f en wu r d e n String s = \"Hello World\"; s.toUpperCase (); System.out.println (s); // Hello World § Er g e b n i s ka n n in V a r ia b le ge s p e i c h e r t we r d e n String s = \"Hello World\"; String t = s.toUpperCase (); System.out.println (t); // HELLO WORLD 49 Zur E r inne r ung § Zu w e i su n g e n z u St r i n g V ar i ab l e n än d e r n n i c h t d e n St r i n g § Di e V a r i a b l e v e r w e i s t a u f e i n e n a n d e r e n S t r i n g § Me t h o d e n ( z. B . substring) lie f e r n ne ue n Str i n g § Ke i n e Mod i f i k a t i on de s S t r i ng fü r de n si e au f g eru f en wu r d e n String s = \"Hello World\"; s.toUpperCase (); System.out.println (s); // Hello World § Er g e b n i s ka n n in V a r ia b le ge s p e i c h e r t we r d e n String s = \"Hello World\"; s = s.toUpperCase (); // kann selbe Variable sein System.out.println (s); // HELLO WORLD 50 St ri n g al s Pa r a m e t e r public class StringParameters { public static void main(String[] args ) { String friend = \"Mark\"; sayHello (friend); sayHello (\"Peter\"); } public static void sayHello ( String name ) { System.out.println (\"Welcome, \" + name); } } Out put : Welcome, Mark Welcome, Peter St ri n g al s Pa r a m e t e r public class StringParameters { public static void main(String[] args ) { String friend = \"Mark\"; sayHello (friend); sayHello ( friend ); } public static void sayHello ( String name ) { System.out.println (\"Welcome, \" + name); name = \"Incognito\" ; } } 53 Out put : Welcome, Mark Welcome, Mark Ze r l e g e n i n T e i l a u f g a b e n § Zi e l : . . . so d ass T e i l au f g ab e n T i wi ed er v er w en d e t we r d e n k ö n n e n § Ge n a u e r : d i e A n w e i s u n g e n f ü r T i kö n n e n w i e d e r v e r w e n d e t we r d e n § An w e i s u n g e n fü r T i : M e t h o d e M i § Ev t l . H i l f s m e t h o d e n M j 5454 Au f g a b e T 1 T 2 T n T 2 Pr o gr a m m M m M 1 M 2 Ze r l e g e n i n T e i l a u f g a b e n § An w e i s u n g e n fü r T i : M e t h o d e M i § Ev t l . H i l f s m e t h o d e n M j § Me t h o d e n k ö n n e n S c h l e i f e n e n t h a l t e n § Be l i e b i g e A n w e i s u n g e n § Me t h o d e n k ö n n e n i n S c h l e i f e n au f g e r u f e n w e r d e n 5555 Au f g a b e T 1 T 2 T n Pr o gr a m m M m M 1 M 2 Auf g a be § Sc h r e i b e n Si e e i n e M e th o d e oneCount(String) di e be r i c h t e t w i e o ft da s Z e i c he n 1 im E in g a b e - Str i n g au f tr i t t. § We n n S i e w o l l e n k ö n n e n S i e s i c h v o r s t e l l e n , d a s s d i e E i n g a b e - Str i n g s Za h l e n i n B i n ä r d a r s t e l l u n g s i n d § Bei s p i el e § oneCount(\"001\") à 1 § oneCount(\"1010\") à 2 56 Auf g a be § Sc h r e i b e n Si e e i n e M e th o d e oneCount(String) di e be r i c h t e t w i e o ft da s Z e i c he n 1 im E in g a b e - Str i n g au f tr i t t. § We n n S i e w o l l e n k ö n n e n S i e s i c h v o r s t e l l e n , d a s s d i e E i n g a b e - Str i n g s Za h l e n i n B i n ä r d a r s t e l l u n g s i n d § Fr a g e n § Ty p d e s R ü c k g a b e w e r t e s : int § So n d e r f ä l l e § oneCount(\"abc\") à 0 § oneCount(\"\") à 0 57 Auf g a be § Wa s f ü r e i n P a r a m e t e r ? String s § Wi e k a n n o n e C o u n t j e d e s Z e i c h e n a n a l y s i e r e n ? § Lo o p § Ei n Z e i c h e n ? substring(index, index+1) § Pr ü f e n o b Z e i c h e n e i n e 1 is t ? \"1\".equals(s.substring(..)) § Wi e w i r d E r g e b n i s b e r e c h n e t ? § int Va r i a b l e , u m 1 e r h ö h e n w e n n Z e i c h e n e i n e 1 is t 58 Lö sung 1 public static int oneCount (String s) { int result = 0; for (int i =0; i < s.length (); i = i + 1) { if (\"1\".equals( s.substring ( i , i+1))) { result = result + 1; } } return result; } 59 Ande r e r Ans a t z § Wa s f ü r A n w e i s u n g e n k ö n n e n i m R u m p f e i n e r M e t h o d e method() au f t r e t e n ? § Al l e . § Au c h Au f r u f e v o n M e t h o d e n . § Au c h Au f r u f e d e r M e t h o d e method() . § Wi e w i r d E r g e b n i s b e r e c h n e t ? § oneCount(s.substring(0,1)) + oneCount(s.substring(1)) § ( 0 od e r 1 ) + oneCount( Re s t _ d e s _ S t r i n g s ) 60 in d e x 0 1 2 Ze i c h e n 1 0 1 Ze r l e g e n e i n e r ( T e i l ) A u f g a b e ( M e t h o d e M i ) § Te i l a u f g a b e T 1 : f ü r I n p u t X s o f o rt l ö s b a r § Be i s p i e l : X e i n S t r i n g d e r Lä n g e 1 oneCount(X) à 1 we n n X S t r i n g \" 1 \" i s t , s o n s t 0 § Te i l a u f g a b e T 2 : § Ze r l e g e I n p u t i n z w e i T e i l e X 1 und X 2 § Er g e bni s k a nn ( l e i c h t ) a us M i (X 1 ) u n d M i (X 2 ) b e r e c h n e t we r d e n § Be s p i e l : X l ä n g e r a l s 1 Z e i c h e n oneCount( Er s t e s _ Z e i c h e n ) + oneCount( Re s t _ d e s _ S t r i n g s ) 6161 Au f g a b e T 1 T 2 T n Pr o gr a m m M m M 1 M 2 62 in d e x 0 1 2 Ze i c h e n 1 0 1 oneCount(s.substring(0,1)) + oneCount(s.substring(1)) in d e x 0 Ze i c h e n 1 in d e x 0 1 Ze i c h e n 0 1 oneCount(s.substring(0,1)) + oneCount(s.substring(1)) in d e x 0 Ze i c h e n 0 in d e x 0 Ze i c h e n 1 oneCount(s.substring(0,1)) + oneCount(\"\") in d e x 0 Ze i c h e n 1 in d e x Ze i c h e n Lö sung 2 public static int oneCount (String s) { int result = 0; if ( s.length ()==0) return 0; if ( s.substring (0,1).equals(\"1\")) { result = 1; } return result + oneCount ( s.substring (1)); } 63 Lö sung 2 a public static int oneCount (String s) { if ( s.length ()==0) return 0; if ( s.length ()==1 && \"1\".equals(s)) { return 1; } else if ( s.length ()==1 && !(\"1\".equals(s))) { return 0; } else { return oneCount ( s.substring (0,1)) + oneCount ( s.substring (1)); } } 64 Lö sung 3 public static int oneCount (String s) { if ( s.length ()==0) return 0; if ( s.length ()==1) { return (\"1\".equals(s) ? 1 : 0); } else { return oneCount ( s.substring (0,1)) + oneCount ( s.substring (1)); } } 65 Lö sung 4 public static int oneCount (String s) { if ( s.length ()==0) return 0; if ( s.length ()==1) { return (\"1\".equals(s) ? 1 : 0); } else { return oneCount ( s.substring (0, s.length()/2 )) + oneCount ( s.substring ( s.length ()/2+1 )); } } 67 Üb e r s i c h t § 2. 8 Noc h m a l s Sc h l e i f e n § 2. 8. 1 Ku r z fo r m e n ( fü r Ak t u a l i s i e r u n g ) § 2. 8. 2 Ku r z fo r m e n und be di ng t e (« s h o r t - ci r cu i t » ) Au s f ü h r u n g § 2. 8. 3 Te r m i n i e r u n g vo n Sc h l e i f e n § 2. 8. 4 I n p u t We r t e zu r Sc h l e i f e n k o n tr o l l e § 2. 8. 5 In v a r i a n t e n 68 2 .8 Noc h m a ls Sc h l e i f e n § Ku r z f o r m zu r Ak t u a l i s i e r u n g de s L o o p C o un t e r s ( Sc h l e i f e n z äh l e r s ) § Ti pp s für ko r r e k t e Te r m i n i e r u n g de r Sc h l e i f e n § Ho ar e Tr i p e l für Sc h l e i f e n 69 2 .8 .1 Ak t ua l i s i e r ung for ( int i = start ; i < bound; i = i + 1) { // Statement } Ak t u al i s i e r u n g : i wi r d um 1 er h ö h t for ( int i = start ; i > bound; i = i - 1) { // Statement } Ak t u al i s i e r u n g : i wi r d um 1 re d u z i e r t Au c h an d e r e Ak t u al i s i e r u n g e n si n d mö g l i c h ab e r di e s e hi e r tr et e n hä uf i g au f 70 Ku r z f o r m e n fü r Zuw e is ung e n § Zu w e i su n g e n de r F o r m j = j+1 tr e t t e n hä ufi g au f § Ma c h e n Pr o g r a m m unübe r s i c h t l i c h § Fr ü h e r : unnö t i g e Ex t r a - Ar b e i t fü r Comp i l e r u n d Comp u t e r § Ku r z f o r m e n er l a u b en In k r e m e n t (A d d i t i on v on 1) u n d De k r e m e n t ( Su b tr ak ti o n vo n 1 ) § «i n c r e m e n t » u n d «d e c r e m e n t » O p e r a t o r § Ve r ä n d e r u n g im m e r um 1 71 In k r e m e n t und De k r e m e n t Ku r z f o r m Äq u i v a l e n t e aus f ühr l i c he r e Ve r s i o n va r i a b l e ++; va r i a b l e = va r i a b l e + 1; //increment va r i a b l e -- ; va r i a b l e = va r i a b l e - 1; //decrement Be i s p i e l e int x = 2; x ++; // x = x + 1; // x now stores 3 double note = 4.5; note -- ; // note = note - 1; // note now stores 3.5 72 Ak t ua l i s i e r ung for ( int i = start ; i < bound; i ++) { // Statement } Ak t u al i s i e r u n g : i wi r d um 1 er h ö h t for ( int i = start ; i > bound; i -- ) { // Statement } Ak t u al i s i e r u n g : i wi r d um 1 re d u z i e r t ++ ( u n d -- ) o f t in Ak t u al i s i e r u n g e n de s Lo o p C o un t e r s 74 In k r e m e n t und De k r e m e n t Ku r z f o r m Äq u i v a l e n t e aus f ühr l i c he r e Ve r s i o n va r i a b l e ++; va r i a b l e = va r i a b l e + 1; va r i a b l e -- ; va r i a b l e = va r i a b l e - 1; Va r i a b l e wi r d ver wen d e t und da nn ver ä n d er t Di e s g i l t auc h in Au s d r ü c k e n und Zu w e i s u n g e n Be i s p i e l int x = 2; int y; y = x++; 75 In k r e m e n t und De k r e m e n t Ku r z f o r m Äq u i v a l e n t e aus f ühr l i c he r e Ve r s i o n va r i a b l e ++; va r i a b l e = va r i a b l e + 1; //increment va r i a b l e -- ; va r i a b l e = va r i a b l e - 1; //decrement Be i sp i e l e int x = 2; System.out.println (x++); // x = x + 1; x now stores 3 System.out.println (x++); // x = x + 1; x now stores 4 76 Ou t p u t : 2 3 In k r e m e n t und De k r e m e n t Ku r z f o r m Äq u i v a l e n t e aus f ühr l i c he r e Ve r s i o n va r i a b l e ++; va r i a b l e = va r i a b l e + 1; va r i a b l e -- ; va r i a b l e = va r i a b l e - 1; Va r i a b l e wi r d ver wen d e t und da nn ver ä n d er t Di e s g i l t auc h in Au s d r ü c k e n und Zu w e i s u n g e n Be i s p i e l int x = 2; int y; y = x++; 77 In k r e m e n t und De k r e m e n t Ku r z f o r m Äq u i v a l e n t e aus f ühr l i c he r e Ve r s i o n va r i a b l e ++; va r i a b l e = va r i a b l e + 1; va r i a b l e -- ; va r i a b l e = va r i a b l e - 1; Va r i a b l e wi r d ve r w e n d e t und da nn ve r ä n d e r t Di e s g i l t auc h in Au s d r ü c k e n und Zu w e i s u n g e n Be i s p i e l int x = 2; int y; y = x++; 78 int temp = x; x++; y = temp; //x: //y: In k r e m e n t und De k r e m e n t Ku r z f o r m Äq u i v a l e n t e aus f ühr l i c he r e Ve r s i o n va r i a b l e ++; va r i a b l e = va r i a b l e + 1; va r i a b l e -- ; va r i a b l e = va r i a b l e - 1; Va r i a b l e wi r d ve r w e n d e t und da nn ve r ä n d e r t Di e s g i l t auc h in Au s d r ü c k e n und Zu w e i s u n g e n Be i s p i e l int x = 2; int y; y = x++; 79 int temp = x; x = x + 1; y = temp; //x: //y: Zuw e is ung e n (A ssig nm en t S t a t em en t) 83 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s p e i c h e r t Be i s p i e l e LH S: int k int i = 3; int j = 7; RH S Re s u l t a t : 9 9 3+5 8 i+2 5 i ++ 3 // i : 4 j -- + j%4 9 // j: 6 Zuw e is ung e n (A ssig nm en t S t a t em en t) 84 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s p e i c h e r t Be i s p i e l int i = 3; int j = i ++; Ac h t u n g : Z w e i V a r i a b l e n we r d e n v e r ä n d e r t ! Zuw e is ung e n (A ssig nm en t S t a t em en t) 85 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s p e i c h e r t Be i s p i e l int i = 3; int j = i ++; Zuw e is ung e n (A ssig nm en t S t a t em en t) 86 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 1. RH S : 3 2. 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s p e i c h e r t Be i s p i e l int i = 3; int j = i ++; = 3; //update i !! Zuw e is ung e n (A ssig nm en t S t a t em en t) 87 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 1. RH S : 3 2. Ad d i e r e 1 zu Va r i a b l e i 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s p e i c h e r t Be i s p i e l int i = 3; int j = i ++; = 3; //update i !! // i+1 Zuw e is ung e n (A ssig nm en t S t a t em en t) 88 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 1. RH S : 3 2. Ad d i e r e 1 zu Va r i a b l e i 3. Sp e i c h e r e Va r i a b l e i 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s p e i c h e r t Be i s p i e l int i = 3; int j = i ++; = 3; //update i !! // i+1 // i = Zuw e is ung e n (A ssig nm en t S t a t em en t) 89 LH S = R H S ; LH S : Ei ne Ba s i s t y p Va r i a b l e ( z. B . int , long , od e r double ) RHS : E i n Au s d r u c k Ab l a u f : 1. Re c h t e Se i t e (R H S ) wi r d be r e c hne t 1. RH S : 3 2. Ad d i e r e 1 zu Va r i a b l e i 3. Sp e i c h e r e Va r i a b l e i 2. Re s u l t a t (W e r t ) wi r d in V a r ia b le (L H S ) ge s pe i c he r t Be i s p i e l int i = 3; int j = i ++; = 3; //update i !! // i+1 // i = j = In k r e m e n t und De k r e me n t Pu zzl e s 100 § Uns e r Zi e l is t es ve r s t ä nd l i c he Pr o gr a m m e zu sc h r e i b e n In k r e m e n t und De k r e me n t Pu zzl e s 101 § Uns e r Zi e l is t es ve r s t ä nd l i c he Pr o gr a m m e zu sc h r e i b e n § … u n d ni c h t Puz z l e s zu ko n s t r u i e r e n ! § Si e so l l t e n ++ und -- ( er ) ke n n e n § Au c h i n ko m p l e x e n Au s d r ü c k e n § Ih r e En t s c he i dung ob Si e e s ve r w e n d e n ( ab er we n n da nn ri ch t i g ) § Di e s e Op e r a t o r e n si n d ni c h t so ef f i z i e n t da s s wi r da für di e Kl ar h e i t ei n es Pr o gr a m m e s op f e r n wo l l e n . We i t e r e Ku r z f o r m e n § Er l a u b e n Ve r w e n d u n g de s We r t e s ei n er Va r i a b l e ge f o l g t vo n ei n er Mo d i f i k a t i o n ( Zu w e i su n g ) Ku r z fo r m Äq u i v a l e n t e au s f ü h rl i ch er e Ve r s i o n va r i a b l e += va l u e ; va r i a b l e = va r i a b l e + va l u e ; va r i a b l e - = va l u e ; va r i a b l e = va r i a b l e - va l u e ; va r i a b l e *= va l u e ; va r i a b l e = va r i a b l e * va l u e ; va r i a b l e /= va l u e ; va r i a b l e = va r i a b l e / va l u e ; va r i a b l e %= va l u e ; va r i a b l e = va r i a b l e % va l u e ; § Mo d i f i k a t i o n mi t be l i e bi g e n We r t e n ( ni c h t nur 1) 102 We i t e r e Ku r z f o r m e n Bei s p i el e x += 3; // x = x + 3; note - = 0.5; // note = note - 0.5; number *= 2; // number = number * 2; Wa r n u n g : x += 1; // x = x + 1; x =+ 1; // x = + 1; 103 We i t e r e Ku r z f o r m e n – ma n c h ma l nütz l i c h § x++ und j -- he is s e n Po s t - In c r e m e n t bz w . Po s t - De c r e m e n t O pe r a t o r , da die Ve r ä n d e r u n g (v o n x und j ) ge m a c ht wi r d na c hd e m de r W e r t ( v o n x od e r j ) ge l e s e n (« ge b r a u c ht ») wu r d e . § Es gi b t auc h Op e r a t o r e n , d ie d ie Ve r ä n d e r u n g (I n c r e m e n t od e r De c r e m e n t ) dur c h f ühr e n be v o r de r W e r t ge l e s e n wu r d e ; d i e s si n d de r Pr e - In c r e m e n t bz w . Pr e - De c r e m e n t O pe r a t o r : ++j od e r -- x . Be is p ie le int x = 2; System.out.println (++x); // x = x + 1; x now stores 3 System.out.println (++x); // x = x + 1; x now stores 4 104 Ou t p u t : 3 4 We i t e r e Ku r z f o r m e n – ma n c h ma l unnö ti g § x++ und j -- he is s e n Po s t - In c r e m e n t bz w . Po s t - De c r e m e n t O pe r a t o r , da die Ve r ä n d e r u n g (v o n x und j ) ge m a c ht wi r d na c hd e m de r W e r t ( v o n x od e r j ) ge l e s e n (« ge b r a u c ht ») wu r d e . § Es gi b t auc h Op e r a t o r e n , d ie d ie Ve r ä n d e r u n g (I n c r e m e n t od e r De c r e m e n t ) dur c h f ühr e n be v o r de r W e r t ge l e s e n wu r d e ; d i e s si n d de r Pr e - In c r e m e n t bz w . Pr e - De c r e m e n t O pe r a t o r : ++j od e r -- x . Be is p ie le int x = 2; System.out.println (++x); // x = x + 1; x now stores 3 System.out.println (++x); // x = x + 1; x now stores 4 105 Ou t p u t : 3 4 2 .8 .2 Be d i n g t e Aus w e r t ung und Ku r z f o r m e n § Fü r && und || mü s s e n ni c h t im m e r be i de Op e r a n d e n au sg e w e r t e t we r d e n , um da s Er g e b n i s zu er m i t t el n § Ja v a been de t di e Au s w e r t u n g ei n es bo o l e s c he n Au s d r u c k s so b al d da s Er g e b n i s fe s t st e h t . § && und || si n d lin k s - as s o z i a t i v § Au s d r ü c k e we r d e n vo n l i n k s na c h re c h t s , ge m ä s s Pr ä z e d e n z und As s o z i a t i v i t ä t au s g e w ert e t § && st o p p t so b a l d ei n Te i l ( au s d ru ck ) false is t § || st o p p t so b a l d ei n Te i l ( au s d ru ck ) true is t 106 Be d i n g t e Aus w e r t ung : Vo r s i c h t § Wa s is t de r W e r t v o n count am E n d e d e s Co d es eg men t s ? // look closely int count = 0; Scanner console = new Scanner( System.in ); for (int i = 0; i <4; i ++) { System.out.print (\" Eingabe Zahl : \"); int wert = console.nextInt (); if ((wert != 0) && (count++ < 9)) { System.out.println ( \"Hit\"); } } // count: Anzahl Werte ungleich 0, nicht Iterationen § Vo r s i c h t be i ++ / -- 107 Be d i n g t e Aus w e r t ung : Vo r s i c h t § Di e lo g is c h e n Op e r a t o r e n si n d ni c h t ko m m u t a t i v we n n di e Au s w e r t u n g de n Zu s t an d de s Pr o gr a m m s ve r ä n d e r n ka n n . § (expr1 && expr2) ni c h t im m e r gl e i c h (expr2 && expr1) § Vo r s i c h t be i Op e r a t o r e n mi t Ne b e n w i r k u n g e n (« s i d e e f f e c t s » ) § Of f e n s i c h t l i c h e Ne b e n w i r k u n g e n : z. B . int x,y ; x++ y -- o. ä . § Ni c h t so f o r t of f e n s i c h t l i c h : § Me t h o d e n od e r Fu n k t i o n e n , d i e Zu s t a n d de s Pr o g r a m m s än d e r n ( we r d e n wi r spä t e r ke n n e n l e r n e n ) § Op e r a t i o n e n di e Zu s t a n d de s S y s t e m s än d e r n ( wi e z. B . x /0 – Fe h l e r !) 108 Ku r z f o r m e n - Re c a p § Uns e r Z i e l i s t e s , v e r s t ä ndl i c he Pr o gr a m m e z u s c hr e i be n. § Vo r s i c h t b e i K u r z f o r m e n u n d b e d i n g t e r A u s w e r t u n g § Of t s i n n v o l l u m k o m p a k t L a u f z e i t f e h l e r z u v e r m e i d e n § Ge b r a u c h e r l a u b t , n i c h t e r z w u n g e n § Wa s w i r d g e d r u c k t ? int x = 2; System.out.println (++x + x++ + \" \" + x + ++x + x); 109 2 .8 .3 Te r m i n i e r u n g vo n Sc h l e i f e n 113 Ei n e tr iv ia le Auf g a be ... § Sc h r e i b e n Si e ei n e Me t h o d e printNumbers di e di e Za h le n vo n 1 bi s N dur c h Ko m m a ge t r e n n t au sg i b t . Bei s p i el : Obergrenze N eingeben : 5 so l l t e er g eb en : 1, 2, 3, 4, 5 114 Lö sung sa nsa tz public static void printNumbers () { Scanner console = new Scanner( System.in ); System.out.print (\" Obergrenze N eingeben : \"); int max = console.nextInt (); for ( int i = 1; i <= max; i ++) { System.out.print ( i + \", \"); } System.out.println (); // to end the line of output } 115 We l c h e Sc h l e i f e n lie f e r n ge w ü n s c h t e n Ou t p u t ? public static void printNumbers () { Scanner console = new Scanner( System.in ); System.out.print (\" Obergrenze N eingeben : \"); int max = console.nextInt (); // Option A for (int i = 1; i <= max; i ++) { System.out.print ( i + \", \"); } System.out.println (); // to end the line of output // Option B for (int i = 1; i <= max; i ++) { System.out.print (\", \" + i ); } System.out.println (); // to end the line of output } }// printNumbers Po l l 116 Ga r t e n z a u n Ana l o gi e § Wi r ge b e n n Za h le n au s ab e r br a uc he n nur n - 1 Ko m m a s . § Äh n l i c h de m Ba u ei n es We i d e z a u n e s mi t Pf o s t e n und Qu e r s t r e b e n § We n n wi r – wi e in d e r 1 . fe h l e r h a f t e n Lö s ung – Pf o s t e n und Str e b e n in s t a llie r e n da nn ha t de r le t z t e Pf o s t e n in d e r Luf t hä ng e nde Str e b e n . fo r ( Lä n g e de s Za u n s ) { Be t on i e r e Pf o s t e n . In s t a l l i e r e Qu e r s t r e b e n . } 121 Ga r t e n z a u n Ana l o gi e § Wi r ge b e n n Za h le n au s ab e r br a uc he n nur n - 1 Ko m m a s . § Äh n l i c h de m Ba u ei n es We i d e z a u n e s mi t Pf o s t e n und Qu e r s t r e b e n § We n n wi r – wi e in d e r 2 . fe h l e r h a f t e n Lö s ung – Str e b e n und Pf o s t e n in s t a llie r e n da nn ha t de r er s t e Pf o s t e n in d e r Luf t hä ng e nde Str e b e n . fo r ( Lä n g e de s Za u n s ) { In s t a l l i e r e Qu e r s t r e b e n . Be t on i e r e Pf o s t e n . } 122 Sc h l e i f e § Fü g e n Si e ei n e An w e i s u n g au sse r h al b de r Sc h l e i f e hi nz u um de n er s t en « Pf o s t e n » zu pl a z i e r e n Be t on i e r e Pf o s t e n . fo r ( Lä n g e de s Za u n s - 1) { In s t a l l i e r e Qu e r s t r e b e n . Be t on i e r e Pf o s t e n . } 123 Lö sung en ba s ie r e nd au f die s e r Id e e System.out.print (1); for ( int i = 2 ; i <= max; i ++) { System.out.print ( \", \" + i ); } System.out.println (); // to end the line Al t e r n a t i v e : 1 . od e r le t z t e r Du r c h l a u f dur c h di e Sc h l e i f e ka n n ve r ä n d e r t we r d e n : for ( int i = 1; i <= max - 1 ; i ++) { System.out.print ( i + \", \" ); } System.out.println (max); // to end the line 124 Lö sung ( ein e Mög lic h k eit ) public static void printNumbers () { Scanner console = new Scanner( System.in ); System.out.print (\" Obergrenze N eingeben : \"); int max = console.nextInt (); System.out.print (1); for ( int i = 2; i <= max; i ++) { System.out.print (\", \" + i ); } System.out.println (); // to end the line } 125 «o f f - by - on e» E r r or ( Um - Ei n s - Da n e b e n - Fe h l e r ) § Di e Sc h l e i f e wu r d e ei n m a l zu v i e l ( od e r ei n m a l zu w e n i g ) dur c hl a uf e n . § « Za u n p f a h lp r o b le m » – es gi b t so g ar ei n e D W i k i p e d i a Se i t e ( In h a lt oh n e Ge w ä hr ) 126 Te r m i n i e r u n g vo n L o o p s § Ve r w a n d e l n Si e d i e Me t h o d e printNumbers in ei n e ne ue Me t h o d e printPrimes di e a l l e Pr i m z a hl e n ( dur c h Ko m m a ge t r e n n t ) b i s zu r Ob e r g r e n z e ma x au sg i b t ( ma x ≥ 2 ) . § Be i s p i e l : printPrimes mi t Ei ng a be 50 er g i b t : 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 § Ei n e Pr i m z a hl p ka n n in ge n a u zw e i Fa k t o r e n ze r l e g t we r d e n : p und 1 127 import java.util .*; class PrintPrimes1 { public static void main (String[] args ) { Scanner console = new Scanner( System.in ); System.out.print (\"Input max: \"); int max = console.nextInt (); if (max >= 2) { printPrimes (max); } } public static void printPrimes ( int limit) // Prints all prime numbers up to limit, limit >= 2 System.out.print (\"2\"); for ( int candidate = 3; candidate <= limit; candidate++) { if ( /* isPrime (candidate) */ ) { System.out.print (\", \" + candidate); } } System.out.println (); // to end output } } 129 public static void printPrimes ( int limit) { // Prints all prime numbers from 2 up to the given limit // limit >= 2 System.out.print (\"2\"); for ( int candidate = 3; candidate <= limit; candidate++) { // Determine if candidate is prime // Count factors! 2: prime, >2 not prime int count = 0; for ( int j = 1; j<=candidate; j++ ) { if (candidate % j == 0) { count++; } } if (count == 2) { System.out.print (\", \" + candidate); } } System.out.println (); // to end output } 131 2 .8 .4 In p u t We r t e zu r Sc h l e i f e n Ko n t r o l l e § In t e r e s s a n t e s Bei s p i el ei n es unbe s ti m m t e n Lo o p s § Ka n d i d a t fü r wh i l e - Sc h l e i f e § We r t wi r d ni c h t ( nur ) zu r Ber ec h n u n g ve r w e n d e t so n d e r n ko n t r o l l i e r t au c h de n L o o p ( d. h. di e Te r m i n i e r u n g ) § We r t is t ( zu s ä t z l i c h ) Hi n w e i s 133 § Hi n w e i s z e i c h e n (S e n t i n e l ) (« s e n t i n e l » ): E i n W e r t d e r d a s En d e ei n e Re i h e an z e i g t § se n t in e l lo o p : Sc h l e i f e de r e n Ru m p f au s g e f ü h rt wi r d bi s ei n Se n ti n e l ge s e h e n wu r d e § Bei s p i el : Ei n Pr o gr a m m so l l Za h le n ei n l es en bi s de r Ben u t z er ei n e 0 ei n g i b t ; da nn so l l di e Su m m e al l e r ei n g eg eb en en Za h le n au sg e g e b e n we r d e n . § (I n di e s e m Be i s p i e l is t 0 d a s Hi n w e i s z e i c h e n /d e r S e n t i n e l . ) We r t e die Hin w eise sin d … 134 § Bei s p i el : Ei n Pr o gr a m m so l l Za h le n ei n l es en bi s de r Ben u t z er ei n e 0 ei n g i b t ; da nn so l l di e Su m m e al l e r ei n g eg eb en en Za h le n au sg e g e b e n we r d e n . § (I n di e s e m Be i s p i e l is t 0 d a s Hi n w e i s z e i c h e n /d e r S e n t i n e l ) Enter a number (0 to quit): 10 Enter a number (0 to quit): 20 Enter a number (0 to quit): 30 Enter a number (0 to quit): 0 The sum is 60 We r t e die Hin w eise sin d … 135 Fe h l e r h a f t e Lö sung § Wa s is t an di e s e m Pr o gr a m m sc h l e c h t ? Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but 0 while (number != 0) { System.out.print (\"Enter a number (0 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); 136 Ei n an d e r e s Hin w eis z eic hen … § Än d e r n Si e d as Pr o gr a m m so da s s - 1 d e r S e n t i n e l is t . Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but 0 while (number != - 1) { System.out.print (\"Enter a number (0 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); 137 Ei n an d e r e s Hin w eis z eic hen … § Än d e r n Si e d as Pr o gr a m m so da s s - 1 d e r S e n t i n e l is t . § Ex a m pl e l o g o f e x e c ut i o n: Enter a number ( - 1 to quit): 15 Enter a number ( - 1 to quit): 25 Enter a number ( - 1 to quit): 10 Enter a number ( - 1 to quit): 30 Enter a number ( - 1 to quit): - 1 The total is 79 138 Ei n an d e r e s Hin w eis z eic hen … § Se tz e n Si e de n S e n ti ne l a uf - 1: Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but - 1 while (number != - 1 ) { System.out.print (\"Enter a number ( - 1 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); § Je tz t is t da s R e s ul t fa l s c h . Wa r u m ? The total is 79 139 Fe h l e r h a f t e Lö sung – 0 à - 1 § Wa s is t an di e s e m Pr o gr a m m fa l s c h ? Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but 0 while (number != 0) { System.out.print (\"Enter a number ( 0 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); § Wa s is t an di e s e m Pr o gr a m m fa l s c h ? Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but - 1 while (number != - 1 ) { System.out.print (\"Enter a number ( - 1 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); 140 Da s P r o b l e m mi t die s e m Pr o g r amm § Uns e r Pr o gr a m m fo l g t di e s e m Mu s t e r : su m m e = 0 wh i l e ( i n p u t is t ni c h t de r s e n t i ne l ) { dr uc k e pr o m p t ; l e s e i nput ad d i er e in p u t zu su m m e } § Bei m le t z t e n Du r c h l a u f dur c h de n Rum p f wi r d de r S e n ti ne l - 1 zu r Su m m e ad d i e r t : 142 Da s P r o b l e m mi t die s e m Pr o g r amm § Bei m le t z t e n Du r c h l a u f dur c h de n Rum p f wi r d de r S e n ti ne l - 1 zu r Su m m e ad d i e r t : dr uc k e pr o m p t ; l e s e i nput ( - 1) ad d i er e in p u t ( - 1) zu su m m e § Bei s p i el in k o r r e k t e r Te r m i n i e r u n g (of f - by - on e e r r or , Za u n p f a h lp r o b le m ): § Mü s s e n N Za h l e n le s e n ab er nur di e er s t en N - 1 ad d i er en . 143 Lö sung su mme = 0 dr uc k e pr o m p t ; l e s e i nput // se t z e n ei n es pf o s t e n s wh i l e ( i n p u t is t ni c h t de r s e n t i ne l ) { addi e r e in p u t zu su mme // i n s t a l l a t i o n que r s t r e be dr uc k e pr o m p t ; l e s e i nput // se t z e n ei n es pf o s t e n s } § Sc h l e i f e n mi t ei n em Se n ti n e l fo l g e n of t di e s e m Mu s t e r . 144 Be i s p i e l mi t Se n t i n e l Scanner console = new Scanner( System.in ); int sum = 0; // pull one prompt/read (\"post\") out of the loop System.out.print (\"Enter a number ( - 1 to quit): \"); int number = console.nextInt (); while (number != - 1) { sum = sum + number; // moved to top of loop System.out.print (\"Enter a number ( - 1 to quit): \"); number = console.nextInt (); } System.out.println (\"The total is \" + sum); 146 do - while - Sc h l e i f e § do - wh i l e - Sc h l e i f e : Fü h r t te s t am Ende de s Sc h l e i f e n r u m p f e s aus um zu en t s c h ei d en , ob ei n we i t e r e r Dur c hl auf nö t ig is t § St e l l t si c h e r da s s de r Ru m p f { … } mi n d e s t e n s ei n m al au s g e f ü h rt wi r d . do { st at e m e nt ( s ) ; } while ( te s t ); // naechste Anweisung An w e i s u n g ( e n ) im Lo o p au s f ü h r e n Is t te s t wa h r ? An w e i s u n g na c h Lo o p au s f ü h r e n ja ne i n 147 do - while - Sc h l e i f e § Bei s p i el : // Example: prompt until correct PIN is typed int input; do { System.out.print (\"Type your PIN: \"); input = console.nextInt (); } while (input != userPinCode ); An w e i s u n g ( e n ) im Lo o p au s f ü h r e n Is t te s t wa h r ? An w e i s u n g na c h Lo o p au s f ü h r e n ja ne i n 148","libVersion":"0.3.1","langs":""}