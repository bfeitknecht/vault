{"path":"sem1/EProg/extra/slides/EProg_s06_hoare-trippel.pdf","text":"252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 0 Ei n f a c h e Ja v a Pr o g r a m m e Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h Üb e r s i c h t § 2. 3 Au s s a g e n übe r Pr o gr a m m (s e g m e n t )e § Vo r w ä r t s / Rü c k w ä r t s sc h l i e sse n § 2. 3. 1 P r e - und P o s t c o ndi t i o ns § 2. 3. 2 H o a r e - Tr i p e l fü r An w e i s u n g e n § 2. 4 Ve r z w e i g u n g e n 2 2. 3. 2 Ho a r e Tr i p e l ( od er 3 - Tu p e l ) 3 Ho a r e Tr i p e l ( od er 3 - Tu p e l ) § Ei n Ho a re Tr i p e l be s t e h t au s zw e i Au s s a g e n und ei n em Pr o gr a m m s e gm e n t : {P} S {Q} § P is t di e P r e c o ndi t i o n § S da s Pr o g r a m m s e g m e n t ( bz w St a t e m e n t ) § Q is t di e Po s t c o n d i t i o n 4 Ho a r e Tr i p e l ( od er 3 - Tu p e l ) § Ei n Ho a re Tr i p e l {P} S {Q} is t gü l t i g we n n (u n d nur we n n ): § Fü r jed en Zu s t a n d , fü r de n P gü l t i g is t , er g i b t di e Au s f ü h r u n g vo n S im m e r ei n en Zu s t a n d fü r de n Q gü l t i g is t . § In f o r m e l l : We n n P wa h r is t vo r de r Au s f ü h r u n g vo n S , da nn mu s s Q na c hhe r wa h r se i n . § Re l e v a n t nur we n n S oh n e La uf z e i t f e hl e r au s g e f ü h rt wu r d e § An d e r n f a l l s is t da s H o a r e Tr i p e l ung ül t i g . 5 § Fü r je d e s Ja v a St a t e m e n t gi b t es ge n a u e Re g e l n di e ei n e Pr e c o ndi t i o n und ei n e Po s t c o n d i t i o n i n Be z i eh u n g se t z e n § Re g e l fü r Zu w e i s u n g e n § Re g e l fü r zw e i au f ei n an d er fo l g e n d e An w e i s u n g e n § Re g e l fü r «i f » - St a t e m e n t s § [ sp ä t e r :] R e g e l fü r Sc h l e i f e n 7 2 . 3 . 2 . 1 E i n e Zu w e i s u n g 8 Zu w e i s u n g e n { P } x = e; { Q } § Bi l d en wi r Q’ in de m wi r in Q di e V a r i a bl e x dur c h e er s e t z en § Da s Tr i p e l is t gül t i g we n n : Fü r al l e Zu s t än d e de s Pr o gr a m m s is t Q’ wa h r we n n P wa h r is t § D. h . , au s P fo l gt Q’ , ge s c h r i e b e n P ⇒ Q’ 9 Ja v a A n w e i su n g Re v i e w ⇒ 12 U. Ma u r e r : Di s k r e t e Ma t h e m a t i k (S c r i p t ) E T H Zü r i c h , 2 0 2 0 13 A → B c a n b e u n d e r s t o o d a s a n a l t e r n a t i v e n o t a t i o n f o r ¬ A ∨ B, w hic h ha s the sa m e funct i on t abl e. 14 Be i s p i e l {z > 34} y = z+1; {y > 1} Q’ is t {z+1 > 1} Gi l t P ⇒ Q’ ? 16 Al s o (z>34) ⇒ (z+1) > 1 ? ✓ Be i s p i e l {z ≠ 1} y = z*z; {y ≠ z} Q’ is t {z*z ≠ z} Gi l t P ⇒ Q’ ? 18 Al s o (z ≠ 1) ⇒ (z*z) ≠ z ? ✘ (z ==0) Ho a r e T r i p e l : {P} S {Q} 20 {P} S {Q} (P r o g r a m m ) Zu s t a n d (v o r S) Zu s t a n d (n a c h S) Au s s a g e n ü b e r al l e Pr o gr a m m a us - führ ung e n Va r i a b l e We r t Ho a r e T r i p e l : {P} S {Q} 22 {??} x = y + 1 { x > 5 } x 0 y 8 x 9 y 8 Zu s t a n d (v o r S) Zu s t a n d (n a c h S) Ho a r e T r i p e l : {P} S {Q} 23 {y > 6} x = y + 1 { x > 5 } x 0 y 8 x 9 y 8 Zu s t a n d (v o r S) Zu s t a n d (n a c h S) Tr i p e l i s t g ü l t i g d a a u s y>6 fo l gt (y+1)>5 (d a s is t Q ' ) Ho a r e T r i p e l : {P} S {Q} 24 {P} x = 6 {Q} x 0 x 6 Zu s t a n d (v o r S) Zu s t a n d (n a c h S) Ho a r e T r i p e l : {P} S {Q} 26 {true} x = 6 { x > 5 } x 0 x 6 Zu s t a n d (v o r S) Zu s t a n d (n a c h S) Au s s ag e n ü b e r al l e Pr o g r a m m a u s - fü h r u n g e n Wi e d r ü c k e n w i r au s d ass Q i m m e r gi l t ? Be i s p i e l e Gül t i g od e r ungül t i g ? § Wi r ne hm e n an : al l es int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w 1. {x ≠ 0} y = x*x; {y > 0} 2. {z ≠ 0} y = z*z; {y ≠ z} 3. {x >= 0} y = 2*x; {y > x} 28 Po l l Be i s p i e l e Gül t i g od e r ungül t i g ? § Wi r ne hm e n an : al l es int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w 1. {x ≠ 0} y = x*x; {y > 0} 2. {z ≠ 0} y = z*z; {y ≠ z} 3. {x >= 0} y = 2*x; {y > x} 29 gü lt ig ung ül t i g ung ül t i g Po l l 30 2. 3. 2. 2 Fo l g e n vo n An w e is ung e n § Wi r kö n n e n au c h Ho ar e Tr i p e l für ei n e Fo l g e vo n An w e i s u n g e n de fi ni e r e n { Precondition } Statement 1 Statement 2 { Postcondition } § Au c h hi e r is t Vo r w ä r t s - und Rüc k w ä r ts - Sc h l i e sse n mö g l i c h 33 Fo l g e n vo n An w e is ung e n 34 § Ei n f a c h s t e Fo l g e : zw e i St a t e m e n ts {P} S1;S2 {Q} § Tr i p e l is t gül t i g we n n (u n d nur we n n ) es ei n e Au s s a g e R gi b t so da s s 1. {P} S1 {R} is t gü l t i g , und 2. {R} S2 {Q} is t gü l t i g . Be i s p i e l § Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {z >= 1} y = z+1; {y > 1} w = y*y; {w > y} 38 Se i R di e Au s s a g e {y > 1} 1. Wi r ze i g e n das s {z >= 1} y=z+1; {y > 1} gü l t i g is t . Re g e l fü r Zu w e i s u n g e n : z >= 1 im p liz ie r t z+1 > 1 2. Wi r ze i g e n das s {y > 1} w=y*y; {w > y} gü l t i g is t . Re g e l fü r Zu w e i s u n g e n : y > 1 im p liz ie r t y*y > y Be i s p i e l e Gü l ti g od e r ung ül t i g ? § Wi r ne hm e n an al l e s int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w 1. {true} x = y; z = x; { y == z} 2. { x == 7 ∧ y == 5} tmp = x; x = tmp ; y = x; {y == 7 ∧ x == 5} 40 Po l l Be i s p i e l e Gü l ti g od e r ung ül t i g ? § Wi r ne hm e n an al l e s int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w 1. {true} x = y; z = x; { y == z} gü lt ig 2. { x == 7 ∧ y == 5} tmp = x; x = tmp ; y = x; {y == 7 ∧ x == 5} ung ül t i g 41 Po l l 42 252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 4 Ve r z w e i g u n g e n Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h Üb e r s i c h t § 2. 4 Ve r z w e i g u n g e n § 2. 4. 1 « i f » - An w e i s u n g e n § Ve r g l e i c h s o p e r a t o r e n § 2. 4. 2 Ty p bo o l e a n § 2. 4. 3 Be d i n g t e (« s h o r t - ci r cu i t » ) Au s w e r t u n g § 2. 4. 4 P r e - und P o s t c o ndi t i o ns § 2. 4. 5 « S c h w ä c h s t e » V o r b e d i n g u n g 44 2. 4 Ve r z w e i g u n g e n (« if » - An w e is ung e n ) § Wo l l e n n u r m a n c h e A n w e i s u n g e n ( S t a t e m e n t s ) a u s f ü h r e n § Ei n e A n w e i su n g d i e d i e A u s f ü h r u n g d e r a n d e r e n k o n t r o l l i e r t : § if - An w e i s u n g § Ve r s c h i e d e n e V a r i a n t e n § Ma n c h m a l s p r i c h t m a n a u c h v o n « b e d i n g t e r A u s f ü h r u n g » § Ei ne Be di ng ung m us s e r f ül l t s e i n da m i t e i ne A n w e i s ung a us g e f ühr t wi r d 2. 4. 1 « i f » - An w e is ung e n «i f » - An w e is ung (« if - St a t e m e n t ») § Fü h r t ei n e An w e i s u n g ( od e r An w e i s u n g e n ) nur au s we n n te s t de n W e r t wa h r (« t r u e » ) er g i b t . if ( te s t ) { st a t e m e nt ( s ) ; ... } // fo l g e n d e An w e i s u n g § Bei s p i el : double punkte = console.nextDouble (); if ( punkte >= 50.0) { System.out.println (\" Pruefung bestanden .\"); } An w e i s u n g ( en ) au s f ü h re n Is t te s t wa h r ? Fo l ge n d e An w e i s u n g au s f ü h re n jane i n «i f - el se» - An w e is ung § Fü h r t ei n e Gr u p p e v on An w e i s u n g e n aus we n n te s t de n W e r t wa h r (« t ru e» ) er g i b t , so n s t ei n e ande r e Gr u p p e if ( te s t ) { st a t e m e nt ( s ) ; } else { st a t e m e nt ( s ) ; } // fo l g e n d e An w e i s u n g § Be is p ie l : «i f » An w e i s u n g ( en ) au s f ü h re n Is t te s t wa h r ? Fo l ge n d e An w e i s u n g au s f ü h re n ja ne i n «e l s e » An w e i s u n g ( en ) au s f ü h re n double punkte = console.nextDouble (); if ( punkte >= 50.0) { System.out.println (\" Pruefung bestanden .\"); } else { System.out.println (\" Pruefung nicht bestanden .\"); } Bo o l e s c h e Aus dr üc k e § Wa s f ü r T e s t s k ö n n e n w i r i n e i n e m i f - St a t e m e n t ( o d e r i f - el s e — S ta t e m e nt ) v e r w e n d e n ? § Fa l l 1 : V a r i a b l e u n d W e r t e e i n e s B a s i s t y p s § Bi s h e r k e n n e n w i r n u r int , long und double § Wa s w i r v o r s t e l l e n g i l t f ü r a l l e B a s i s t y p e n 53 Bo o l e s c h e Aus dr üc k e § if - An w e i s u n g e n und i f - el s e - An w e i s u n g e n ve r w e n d e n be i de bo o l e s c he Au s d r ü c k e if ( i > 0 ) { ... } if ( i > 10 ) { ... } else { ... } § Of t Ve r g l e i c h e od e r Ko m b i n a t i o n e n vo n Ve r g l e i c h e n § Di e s e Au s d r ü c k e we r d e n au s g e w ert e t --- Er g e bni s en t w ed er «t r u e » od e r «f a l s e » § true und false si n d Ko n s t a n t e n ( fü r Wa h r h e i t s w e r t e ) § Bo o l es c h e Au s d r ü c k e ve r w e n d e n Ve r g l e i c h s op e r a t or e n Ve r g l e i c h s o p e r a t o r e n § Vo r s i c h t : ni c h t al l e Ve r g l e i c h s o p e r a t o r e n kö n n e n für al l e Ty p e n ( si n n v o l l ) an g e w e n d e t we r d e n § Ve r g l e i c h s o p e r a t o r e n ha be n ti e f e n Ra ng § 1+1==2 so l l (1+1)==2 er g eb en : 1+false ma c h t ke i n e n Si n n Op e r a t o r Be d e u t u n g Be i s p i e l We r t == gl e i c h 1 + 1 == 2 true != ung l e i c h 3 != 2 true < we n i g e r al s 10 < 5 false > gr ö s s e r al s 10 > 5 true <= we n i g e r al s od e r gl e i c h 126 <= 100 false >= gr ö s s e r al s od e r gl e i c h 5 >= 5 true Ve r g l e i c h s o p e r a t o r e n § Ve r g l e i c h s o p e r a t o r e n habe n ei n e ti e f e r e Pr ä z e d e n z al s ar i t hm e t i s c he Op e r a t o r e n . 5 * 7 >= 8 + 4 * (7 - 1) 5 * 7 >= 8 + 4 * 6 35 >= 8 + 24 35 >= 32 true § Ve r g l e i c h s o p e r a t o r e n kö n n e n ni c h t ei n e « Ke t t e » bi l de n wi e in Ma t h e m a t i k 2 <= x <= 10 true <= 10 ( An n a h m e : x is t 15 ) error! Bo o l e s c h e Aus dr üc k e im if - St a t e m e n t § De r bo o l e s c he Au s d r u c k st e h t im if - St a t e m e n t i n Kl am m e r n § Au s s a g e n si n d bo o l e s c he Au s d r ü c k e § Au s s a g e n kö n n e n mi t && (U ND ) od e r || (O D E R ) ko m b i n i e r t we r d e n 2 <= x && x <= 10 ( An n a h m e : x is t 15 ) True && False False § Ve r w e n d e n Si e Kl am m e r n um Kl ar h e i t zu sc h a f f e n ( 2 <= x) && (x <= 10) Bo o l e s c h e Op er a t o r en § Au s d r ü c k e mi t Ve r g l e i c h s o p e r a t o r e n kö n n e n dur c h bo o l e s c h e Op e r a t o r e n ve r k n ü p f t we r d e n § « Wa h r h e i t s t a b e l l e » fü r di e s e Op e r a t o r e n , fü r Au s s a g e n p und q : Op e r a t o r Be d e u t u n g Be i s p i e l We r t && an d (2 == 3) && ( - 1 < 5) false || or (2 == 3) || ( - 1 < 5) true ! no t !(2 == 3) true p q p & & q p | | q true true true true true false false true false true false true false false false false p !p true false false true Bo o l e s c h e Aus dr üc k e § Wa s is t da s Er g e b n i s für di e fo l g e n d e n Au s d r ü c k e ? int x = 42; int y = 17; int z = 25; 1. y < x && y <= z 2. x % 2 == y % 2 || x % 2 == z % 2 3. x <= y + z && x >= y + z 4. !(x < y && x < z) 5. (x + y) % 2 == 0 || !((z - y) % 2 == 0) Po l l § Wa s is t da s Er g e b n i s für di e fo l g e n d e n Au s d r ü c k e ? int x = 42; int y = 17; int z = 25; 1. y < x && y <= z à true 2. x % 2 == y % 2 || x % 2 == z % 2 à false 3. x <= y + z && x >= y + z à true 4. !(x < y && x < z) à true 5. (x + y) % 2 == 0 || !((z - y) % 2 == 0) à false Bo o l e s c h e Aus dr üc k e Po l l = und == in J a v a § = is t d e r Z u w e is u n g s o p e r a t o r ( a s s ig n m e n t o p e r a t o r ) int k = 4; // k hat nach diesem Statement den Wert 4 § Er g e bni s i s t de r W e r t 4 -- ke i n W a h r h e i t s w e r t § En t s pr e c he nde F e hl e r m e l dung § Ab e r m a n c h m a l i s t d i e F e h l e r m e l d u n g v e r w i r r e n d 67 if (k = 4) { .... } HW.java:10: error: incompatible types if (k = 4) { ^ required: boolean found: int = und == in J a v a § = is t d e r Z u w e is u n g s o p e r a t o r ( « a s s ig n m e n t o p e r a t o r » ) int k = 4; // k hat nach diesem Statement den Wert 4 § Er g e bni s i s t de r W e r t 4 -- ke i n W a h r h e i t s w e r t § == is t d e r V e r g le ic h s o p e r a t o r ( p r ü f t G le ic h h e it ) § Ka n n i n i f - St a t e m e n t v e r w e n d e t w e r d e n § if (k == 4) { 69 if (k = 4) { .... } HW.java:10: error: incompatible types if (k = 4) { ^ required: boolean found: int Be i s p i e l § We l c h e r bo o l e s c he Au s d r u c k er g i b t true we n n ei n Jah r jahr ei n Sc h al tj ah r is t ? § jahr is t Sc h a l t j a h r we n n jahr dur c h 4 te i l b a r is t ( oh n e Re s t ) , jahr ab er ni c h t dur c h 100 oh n e Re s t te i l b a r is t , es se i de nn da s s jahr oh n e Re s t dur c h 400 te i l b a r se i . § int jahr ; // aktuelles Jahr § jahr % 4 == 0 && jahr % 100 != 0 || jahr % 400 == 0 § Be s s e r mi t Kl a m m e r n : (( jahr % 4 == 0) && ( jahr % 100 != 0)) || ( jahr % 400 == 0) 72 Ge br a uc h vo n if Wa s fä l l t Ih n e n in di e s e m Co d e Bei s p i el au f ? int percent = ... // Prozent Punkte if (percent >= 90) { System.out.println (\" Ihre Note ist 6.0.\"); } if (percent >= 80) { System.out.println (\" Ihre Note ist 5.0.\"); } if (percent >= 70) { System.out.println (\" Ihre Note ist 4.0.\"); } if (percent >= 60) { System.out.println (\" Ihre Note ist 3.5.\"); } if (percent < 60) { System.out.println (\" Ihre Note ist 3.0.\"); } ... Ge br a uc h vo n if Wa s fä l l t Ih n e n in di e s e m Co d e Bei s p i el au f ? int percent = ... // Prozent Punkte if (percent >= 0 && percent <= 30) { System.out.println (\" Ihre Note ist 2.0.\"); } if (percent > 30 && percent <= 40) { System.out.println (\" Ihre Note ist 3.0.\"); } if (percent > 40 && percent <= 50) { System.out.println (\" Ihre Note ist 4.0.\"); } if (percent > 50 && percent <= 70) { System.out.println (\" Ihre Note ist 4.5.\"); } if (percent > 70 && percent <= 90) { System.out.println (\" Ihre Note ist 5.0.\"); } System.out.println (\" Ihre Note ist 6.0.\"); Fr om h ttp s : / / tw i tte r . c o m / P R0 G RA MME RHU M0 R/ s tatu s / 1 6 1 5 0 6 1 3 4 8 9 2 8 3 3 9 9 6 8 ? l an g =e n Ge br a uc h v o n if Co d e ( ? ) u m Pr o z e n t s a t z ( au f g e r u n d e t ) zu vi su al i si e r e n 75 Ve r s c h a c h t e l t e if - el se - An w e is ung e n Au s w a h l be s t i m m t dur c h meh r er e Te s t s if ( te s t 1 ) { st a t e m e n t ( s ) ; } else if ( te s t 2 ) { st a t e m e n t ( s ) ; } else { st a t e m e n t ( s ) ; } // folgende Anweisung Gr u p p e 1 An w e i - su n g e n au s f ü h re n Er g i b t te s t1 wa h r ? ja ne i n Gr u p p e 2 An w e i - su n g e n au s f ü h re n Er g i b t te s t2 wa h r ? Fo l ge n d e An w e i s u n g au s f ü h re n jane i n Gr u p p e 3 An w e i - su n g e n au s f ü h re n 80 Ve r s c h a c h t e l t e if - el se - An w e is ung e n Bei s p i el : if (x > 0) { System.out.println (\" Positiv \"); } else if (x < 0) { System.out.println (\" Negativ \"); } else { System.out.println (\"Null\"); } Gr u p p e 1 An w e i - su n g e n au s f ü h re n Er g i b t te s t1 wa h r ? ja ne i n Gr u p p e 2 An w e i - su n g e n au s f ü h re n Er g i b t te s t2 wa h r ? Fo l ge n d e An w e i s u n g au s f ü h re n jane i n Gr u p p e 3 An w e i - su n g e n au s f ü h re n Ve r s c h a c h t e l t e if - el se - if § Ende t mi t else : ge n a u ei n Pf a d mu s s au s g e f ü h rt we r d e n § Ende t mi t if : Ev e n t u e l l wi r d ke i n e An w e i s u n g au s g e f ü h rt . if ( te s t 1 ) { st a t e m e nt ( s ) ; //Gruppe 1 } else if ( te s t 2 ) { st a t e m e nt ( s ) ; //Gruppe 2 } else if ( te s t 3 ) { st a t e m e nt ( s ) ; //Gruppe 3 } Gr u p p e 1 An w e i - su n g e n au s f ü h re n Er g i b t te s t1 wa h r ? ja ne i n Gr u p p e 2 An w e i - su n g e n au s f ü h re n Er g i b t te s t2 wa h r ? jane i n Gr u p p e 3 An w e i - su n g e n au s f ü h re n Er g i b t te s t3 wa h r ? jane i n Ve r s c h a c h t e l t e if - el se - if if (place == 1) { System.out.println (\"Gold!!\"); } else if (place == 2) { System.out.println (\"Silber!\"); } else if (place == 3) { System.out.println (\"Bronze.\"); } Gr u p p e 1 An w e i - su n g e n au s f ü h re n Er g i b t te s t wa h r ? ja ne i n Gr u p p e 2 An w e i - su n g e n au s f ü h re n Er g i b t te s t wa h r ? ja Gr u p p e 3 An w e i - su n g e n au s f ü h re n Er g i b t te s t wa h r ? jane i n Ve r s c h a c h t e l t e if - Ko n s t r u k t e • Gen a u ei n 1 Pf a d mi t An w e i s u n g ( en ) ( ge ge ns e i t i ge r Au s s c h l u s s ) if ( te s t ) { st a t e m e n t ( s ) ; } else if ( te s t ) { st a t e m e n t ( s ) ; } else { st a t e m e n t ( s ) ; } • 0 od e r 1 Pf a d mi t An w e i s u n g ( en ) ( ge ge ns e i t i ge r Au s s c h l u s s ) if ( te s t ) { st a t e m e n t ( s ) ; } else if ( te s t ) { st a t e m e n t ( s ) ; } else if ( te s t ) { st a t e m e n t ( s ) ; } • 0, 1, od e r vi e l e Pf a d e mi t An w e i s u n g ( en ) ( unabhängi g , ke i n ge ge ns e i t i ge r Au s s c h l u s s ) if ( te s t ) { st a t e m e n t ( s ) ; } if ( te s t ) { st a t e m e n t ( s ) ; } if ( te s t ) { st a t e m e n t ( s ) ; } ve r s c h a c h t e l t e if / e ls e ve r s c h a c h t e l t e if / e ls e / if au f e i n an d e r f o l g e n d e if / if / if We l c h e if / e ls e - Ko m b i n a t i o n ? (1 ) ve r s c h a c h t e l t e if / e ls e ( 2 ) ve r s c h a c h t e l t e if / e ls e / if ( 3 ) Fo l g e vo n if / if / if 1. Ob – ab h än g i g vo n fr ü h e r e n Re n n e n – jem a n d in d e r er s t en , zw e i t e n , od e r le t z t e n Gr u p p e st a r t e t . 2. Ob e s ei n e Me d a i l l e ( No t e n d u r s c h n i t t ≥ 5 . 9 ) od e r ei n e Ur k unde (5 . 7 5 – 5. 9) gi b t . 3. Ob ei n e Za h l dur c h 2, 3, u n d / od e r 5 te i l b a r is t . 4. No t e ( a u f 0 . 2 5 ge r u n d e t ) au f g ru n d de r Pu n k t e ( Pr o z e n t ) in d e r Pr ü f u n g . Po l l We l c h e if / e ls e - Ko m b i n a t i o n ? (1 ) ve r s c h a c h t e l t e if / e ls e ( 2 ) ve r s c h a c h t e l t e if / e ls e / if ( 3 ) Fo l g e vo n if / if / if § Ob – ab h än g i g vo n frü h e r e n Re n n e n – je m an d in d e r er s t en , zw e i t e n , od e r le tz t e n Gr u p p e st a r t e t . § (1 ) ve r s c h a c h t e l t e if / else if / else § Ob e s ei ne Me d a i l l e ( No t e n d u r s c h n i t t ≥ 5. 9) od e r ei ne Urk u n d e (5. 75 – 5. 9) gi b t . § (2 ) ve r s c h a c h t e l t e if / else if § Ob ei ne Za h l dur c h 2, 3, und/ od e r 5 te i l b a r is t . § (3 ) Fo l g e vo n if / if / if § No t e ( a u f 0 . 2 5 ge r u n d e t ) au f g r u n d der Pu n k t e ( Pr o z e n t ) i n der Pr ü f u n g . § (1 ) ve r s c h a c h t e l t e if / else if / else if / else if / else Po l l 2. 4. 2 Ty p boolean § Bo o l es c h e We r t e kö n n e n in Va r i a b l e n de s Ty p s boolean ge s p e i c h e r t we r d e n . § De r Ty p boolean ke n n t nur zw e i We r t e : wa h r ( true ) u n d fa l s c h ( false ). § Ei n Ve r g l e i c h (« te s t » ) is t ei n bo o l e s c he r Au s d r u c k ( ei n Au s d r u c k de r ei n boolean Er g e bni s ha t ) . § Bo o l e s c h e Au s d r ü c k e kö n n e n mi t de n bo o l e s c he n Op e r a t o r e n ko m b i n i e r t we r d e n . § boolean quadrant1; od e r boolean quadrant1 = true; de k l a r i e r e n bo o l e s c he Va r i a b l e . Ge br a uc h vo n boolean § Ka n n Er g e b n i s ei n es ko m p l i z i e r t e n Au s d r u c k s sp e i c h e r n und sp ä t e r wi ed er v er w en d en § Vo r a u s g e s e t z t di e Ko m p o n e n t e n än d e r n si c h ni c h t … § Ma c h t Pr o gr a m m le s b a r e r Be i s p i e l – we r k a n n A n t r a g s t e l l e n ? 92 Be i s p i e l ( K e i n e R e c h t s a u s k u n f t ) int jahreCH_CB; int jahrCH_F; int jahreCHletzte5; int jahreKvor18; int jahreCH = (jahreCH_F/2 +jahreCH_CB); boolean bundJ10 = jahreCH >= 10; boolean bund1 = bundJ10 && (jahreCHletzte5 >= 3); boolean bund2 = (jahreCH>=6) && (jahreKvor18 + jahreGvor18)*2 >= 10; boolean antragErlaubt = bund1 || bund2; 93 int jahreKnach18; int jahreGvor18; int jahreGnach18; Hi n w ei se § Ma n c h m a l si e h t ma n so l ch e n Co d e ( t e s t ob ei n e Va r i a b l e d e n W e r t true ha t ) : boolean isPrime = … ; if ( isPrime == true ) { // schlecht ... } § Das is t ni c h t nö t i g und r e dunda n t . Be s s e r : if ( isPrime ) { // gut ... } Hi n w ei se § Au c h ni c h t be s s e r is t de r T e s t für false : if ( isPrime == false ) { // schlecht if ( ! isPrime ) { // gut 2. 4. 3 Be d i n g t e Aus w e r t ung § Fü r && und || mü s s en ni c h t im m e r be i de Op e r a n d e n au sg e w e r t e t we r d e n , um da s Er g e b n i s zu er mi t t el n § Ja v a been de t di e Au s w e r t u n g ei n es bo o l e s c he n Au s d r u c k s so b al d da s Er g e b n i s fe s t st e h t . § Di e s ne nne n wi r ei n e «s h o rt - ci r cu i t » Au s w e r t u n g od e r bedi n gt e Aus w e r t ung § Fo l ge n d e Te i l a u s d r ü c k e we r d e n ab h än g i g vo n zu e r s t au s g e w ert e t en Au s d r ü c k e n ( ni c h t ) ev a l u i e r t § Re g e l d e r Pr o g r a m m i e r s p r a c h e Be d i n g t e (« sho r t - ci r cu i t » ) Aus w e r t ung § Fü r && und || mü s s en ni c h t im m e r be i de Op e r a n d e n au sg e w e r t e t we r d e n , um da s Er g e b n i s zu er mi t t el n § Ja v a been de t di e Au s w e r t u n g ei n es bo o l e s c he n Au s d r u c k s so b al d da s Er g e b n i s fe s t st e h t . § && st o p p t so b a l d ei n Te i l ( au s d ru c k ) false is t § || st o p p t so b a l d ei n Te i l ( au s d ru c k ) true is t Bo o l e s c h e Op er a t o r en § Au s d r ü c k e mi t Ve r g l e i c h s o p e r a t o r e n kö n n e n dur c h bo o l e s c h e Op e r a t o r e n ve r k n ü p f t we r d e n § && und || si n d lin k s - as s o z i a t i v § Au s d r ü c k e we r d e n vo n l i n k s na c h re c h t s , ge m ä s s Pr ä z e d e n z und As s o z i a t i v i t ä t au s g e w ert e t § Kl a m m e r n sc h a f f e n Kl a r h e i t Aus w e r t ung ei n es Te s t s § Ge g e be n Pr o gr a m m (s e g m e n t ) mi t dr e i int Va r i a b l e n a , b und x § Wi r wo l l e n x zu m Qu o t i e n t e n a/b se t z e n , ab e r nur we n n a/b gr ö s s e r al s 0 is t int a; int b; int x; // a, b werden irgendwie gesetzt // nur positive Werte sollten gespeichert werden // integer division kann 0 fuer a,b !=0 ergeben // duerfen nicht durch 0 dividieren x = ... Aus w e r t ung ei n es Te s t s § Ge g e be n Pr o gr a m m (s e g m e n t ) mi t dr e i int Va r i a b l e n a , b und x § Wi r wo l l e n x zu m Qu o t i e n t e n a/b se t z e n , ab e r nur we n n a/b gr ö s s e r al s 0 is t int a; int b; int x; // a, b werden irgendwie gesetzt // nur positive Werte sollten gespeichert werden // integer division kann 0 fuer a,b !=0 ergeben if (b != 0) { x = ... Aus w e r t ung ei n es Te s t s § Wo l l e n Qu o t i e n t e n a/b nur sp e i c h e r n we n n gr ö s s e r al s 0 int a; int b; int x; // a, b werden irgendwie gesetzt // nur positive Werte sollten gespeichert werden // integer division kann 0 fuer a,b !=0 ergeben if (b != 0) { if (a/b > 0) { x = a/b; } } Aus w e r t ung ei n es Te s t s § Vi e l e if - St a t e m e n ts ma c h en Pr o gr a m m unl e s e r l i c h int a; int b; int x; // a, b werden irgendwie gesetzt // nur positive Werte sollten gespeichert werden // integer division kann 0 fuer a,b !=0 ergeben if (b != 0) { if (a/b > 0) { x = a/b; } } Re i h e n fo l g e de r Op er a n d en is t wic h tig § Di e se r C o d e fü h r t zu ei n er Fe h l e r m e l d u n g we n n b = = 0 : int a; int b; int x; // a, b werden irgendwie gesetzt // nur positive Werte sollten gespeichert werden // integer division kann 0 fuer a,b !=0 ergeben // (a/b) > 0 if ( (a/b > 0) && (b != 0) ) { x = a/b; } } Be d i n g t e (« sho r t - ci r cu i t » ) Aus w e r t ung § Di e se r C o d e führ t zu ke i n e r Fe h l e r m e l d u n g we n n b = = 0 : int a; int b; int x; // a, b werden irgendwie gesetzt // nur positive Werte sollten gespeichert werden // integer division kann 0 fuer a,b !=0 ergeben // (a/b) > 0 if ( (b != 0) && (a/b > 0) ) { x = a/b; } De M o r g a n ' s Re g e l n Re g e l n für di e N e g a t i o n bo o l e s c he r Au s d r ü c k e . § Pr a k t i s c h we n n ma n d a s Ge g e n t e i l ei n es Au s d r u c k s br a uc h t . § Be i s p i e l : Ur s p r ü n g l i c h e r Au s d r u c k Ne g i e r t e r Au s d r u c k Al t e r n a t i v e a && b !a || !b !(a && b) a || b !a && !b !(a || b) Or i g i n a l Ne g i e r t if (x == 7 && y > 3) { ... } if (x != 7 || y <= 3) { ... } 2. 4. 4 Pr e / P o s t c o n d i ti o n s für if - An w e i s u n g e n 111 If - St a t e m e n t M u s t e r // ursprüngliche Annahmen if ( te s t ) { // wissen das te s t true war if - Block } else { // wissen das te s t false war else - Block } // können if - Block oder else - Block ausgeführt haben 113 Gr undide e ( n ) 1. Di e P r e c o n d i t i o n für de n i f - Bl o c k u n d d en el s e - Bl o c k s ( ei n es if - St a t e m e n ts) be i nha l t e t da s Er g e b n i s de s T e s t s . 2. Di e P o s t c o n d i t i o n na c h de m i f - St a t e m e n t is t di e Di sj u n k t i o n (« od e r ») d e r P o s t c o n d i t i o n s d e s i f - und e l s e - Bl o c k es . 115 If - St a t e m e n t M u s t e r // ursprüngliche Annahmen if ( te s t ) { // wissen das te s t true war if - Block // Q1 } else { // wissen das te s t false war else - Block // Q2 } // Q1 ∨ Q2 ( können if - Block oder else - Block ausgeführt haben ) 116 If - St a t e m e n t s 117 {P} if (b) S1 else S2 {Q} § Tr i p e l is t gül t i g we n n (u n d nur we n n ) e s Au s s a g e n Q1, Q2 gi b t so da s s 1. {P ∧ b} S1 {Q1} is t gü l t i g und 2. {P ∧ ! b} S2 {Q2} is t gü l t i g und 3. Na c h de m if - St a t e m e n t g i l t Q , d. h. a) Au s Q1 fo l g t Q b) Au s Q2 fo l g t Q If - St a t e m e n t s 119 {P} if (b) S1 else S2 {Q} § Tr i p e l is t gül t i g we n n (u n d nur we n n ) e s Au s s a g e n Q1, Q2 gi b t so da s s 1. {P ∧ b} S1 {Q1} is t gü l t i g und 2. {P ∧ ! b} S2 {Q2} is t gü l t i g und 3. Na c h de m if - St a t e m e n t g i l t Q , d. h. ( au s Q1 fo l g t Q ) und ( a us Q2 fo l g t Q ) If - St a t e m e n t s 120 {P} if (b) S1 else S2 {Q} § Tr i p e l is t gül t i g we n n (u n d nur we n n ) e s Au s s a g e n Q1, Q2 gi b t so da s s 1. {P ∧ b} S1 {Q1} is t gü l t i g und 2. {P ∧ ! b} S2 {Q2} is t gü l t i g und 3. Na c h de m if - St a t e m e n t g i l t Q , d. h. ( Q1 ⇒ Q ) ∧ ( Q2 ⇒ Q ) If - St a t e m e n t s 122 {P} if (b) S1 else S2 {Q} § Tr i p e l is t gül t i g we n n (u n d nur we n n ) e s Au s s a g e n Q1, Q2 gi b t so da s s 1. {P ∧ b} S1 {Q1} is t gü l t i g und 2. {P ∧ ! b} S2 {Q2} is t gü l t i g und 3. ( Q1 ∨ Q2 ) ⇒ Q If - St a t e m e n t s 123 {P} if (b) S1 else S2 {Q} § Tr i p e l is t gül t i g we n n (u n d nur we n n ) e s Au s s a g e n Q1, Q2 gi b t so da s s 1. {P ∧ b} S1 {Q1} is t gü l t i g und 2. {P ∧ ! b} S2 {Q2} is t gü l t i g und 3. Na c h de m if - St a t e m e n t g i l t Q , d. h. a) Au s Q1 fo l g t Q b) Au s Q2 fo l g t Q Be i s p i e l Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {true} if (x > 7) { y = x; } else { y = 20; } {y > 5} § Se i Q1 {y > 7} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Se i Q2 {y == 20} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) 124 Ho a r e T r i p e l : {P} S {Q} 126 x ... y ... x ... y ... Zu s t a n d (v o r S) Zu s t a n d (n a c h S) {true} if (x > 7) { y = x; } else { y = 20; } {y > 5} Be i s p i e l Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {true} if (x > 7) { y = x; } else { y = 20; } {y > 5} § Se i Q1 {y > 7} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Se i Q2 {y == 20} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Mi t de r R e g e l fü r Zu w e i s u n g e n kö n n e n wi r ze i g e n {true ∧ x > 7} y = x; {y > 7} § Mi t de r R e g e l fü r Zu w e i s u n g e n {true ∧ x <= 7} y = 20; {y == 20} § Dann ze i g e das s ( y>7) ∨ (y==20) ⇒ y>5 128 gü l t i g Be i s p i e l Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {true} if (x > 7) { y = 4 ; } else { y = 20; } {y > 5} § Se i Q1 {y > 3 } ( an d e r e Au s s a g e n ge h e n ev t l . au c h ) § Se i Q2 {y == 20} ( an d e r e Au s s a g e n ge h e n ev t l . au c h ) § Mi t de r R e g e l fü r Zu w e i s u n g e n kö n n e n wi r ze i g e n {true ∧ x > 7} y = 4; {y > 3} § Mi t de r R e g e l fü r Zu w e i s u n g e n {true ∧ x <= 7} y = 20; {y == 20} § Dann ze i g e das s a) Au s Q1 fo l g t Q b) Au s Q2 fo l g t Q 129 Ho a r e T r i p e l : {P} S {Q} 130 x 0 y ... x 0 y 20 Zu s t a n d (v o r S) Zu s t a n d (n a c h S) {true} if (x > 7) { y = 4 ; } else { y = 20; } {y > 5} Ho a r e T r i p e l : {P} S {Q} 131 x 8 y 22 x 8 y 4 Zu s t a n d (v o r S) Zu s t a n d (n a c h S) {true} if (x > 7) { y = 4 ; } else { y = 20; } {y > 5} Be i s p i e l Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {true} if (x > 7) { y = 4 ; } else { y = 20; } {y > 5} § Se i Q1 {y > 3 } ( an d e r e Au s s a g e n ge h e n ev t l . au c h ) § Se i Q2 {y == 20} ( an d e r e Au s s a g e n ge h e n ev t l . au c h ) § Mi t de r R e g e l fü r Zu w e i s u n g e n kö n n e n wi r ze i g e n {true ∧ x > 7} y = 4; {y > 3} § Mi t de r R e g e l fü r Zu w e i s u n g e n {true ∧ x <= 7} y = 20; {y == 20} § Dann ze i g e das s a) y>3 ⇒ y>5 b) y==20 ⇒ y>5 132 ni c h t g ül t i g Be i s p i e l Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {true} if (x > 7) { y = 4 ; } else { y = 20; } {y > 5} § Se i Q1 {y > 3 } § Se i Q2 {y == 20} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Mi t de r R e g e l fü r Zu w e i s u n g e n kö n n e n wi r ze i g e n {true ∧ x > 7} y = 4; {y > 3} § Mi t de r R e g e l fü r Zu w e i s u n g e n {true ∧ x <= 7} y = 20; {y == 20} § Dann ze i g e das s y>3 ∨ y==20 ⇒ y>5 134 Vo r s i c h t § Zu r P ar t y d ar f w e r m i n d e s - te n s 1 8 o d e r E T H S t u d e n t / in is t § In f o r m e ll : (age>=18) ∨ ( ETHstudent ) § « Da r f zu r Pa r t y » § Ho ar e L o g i k § y>3 ∨ y==20 ⇒ y>5 § We n n g ü l t i g : E s k a n n n i c h t s e i n das s y>3 ∨ y==20 wa h r abe r y>5 fa l s c h is t § Ni c h t : We n n y>3 ∨ y==20 wa h r is t dann is t y>5 wa h r 135 Be i s p i e l Al l e Va r i a b l e si n d int , ke i n Ov e r f l ow / U n d e r f l ow {x > 0} if (a < 10) {y = 2*x;} else {y = a*x;} {y > 0} § Se i Q1 {y ≥ 2} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Se i Q2 {y ≥ 10} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Mi t de r R e g e l fü r Zu w e i s u n g e n kö n n e n wi r ze i g e n {x>0 ∧ a<10} y = 2*x; {y ≥ 2} § Mi t de r R e g e l fü r Zu w e i s u n g e n {x>0 ∧ a≥10} y = a*x; {y ≥ 10} § Dann ze i g e das s y≥2 ∨ y ≥ 10 ⇒ y> 0 138 Be i s p i e l e Gü l ti g od e r ung ül t i g ? § Wi r ne hm e n an al l e s int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w (A ) (B ) {true} if (x > 7) { y = 4; } else { y = 3; } {y < 5} 140 {x > 10} if (x%4 == 0) { y = x/4; } {y ≥ 2} Po l l Be i s p i e l e Gü l ti g od e r ung ül t i g ? § Wi r ne hm e n an al l e s int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w (A ) (B ) {true} if (x > 7) { y = 4; } else { y = 3; } {y < 5} 141 {x > 10} if (x%4 == 0) { y = x/4; } else { ; } {y ≥ 2} Po l l Be i s p i e l e Gü l ti g od e r ung ül t i g ? § Wi r ne hm e n an al l e s int Va r i a b l e n , oh n e Ov e r f l o w / U n d e r f l o w {true} if (x > 7) { y = 4; } else { y = 3; } {y < 5} gü lt ig 143 {x > 10} if (x%4 == 0) { y = x/4; } {y ≥ 2} ung ül t i g Po l l 144 {x > 10} if (x%4 == 0) { y = x/4; } else { ; } {y ≥ 2} § Se i Q1 {y ≥ 2} ( an d er e Au s s a g e n ge h e n ev t l . au c h ) § Fü r S2 kö n n e n wi r ke i n e ge n a u e re n Au s s a g e n übe r de n Zu s t a n d vo n y ma c h e n Po l l § Da {x > 10} is t x mi n d e s t e n s 12 und so m i t y ≥ 2 § Ab e r wi r wi s s e n ni c h t we l c h e n We r t y vo r h e r ha t t e und s o ka n n ma n ni c h t ze i g e n das s y≥2 § Hä t t e n wi r al s Pr e c on d i ti on {x > 10 ∧ y > 10} ge h a b t ( z.B . ) s o kö n n t e Q2 {y > 10} se i n u n d das Tr i p e l wä r e gü l t i g . 145","libVersion":"0.3.1","langs":""}