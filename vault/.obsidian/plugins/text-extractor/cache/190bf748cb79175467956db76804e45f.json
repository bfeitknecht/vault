{"path":"sem2/DDCA/VRL/slides/DDCA-L18-pipelines.pdf","text":"C a r ne gi e M e l l on 1 D i g i t a l D e s i g n a nd C o m put e r A r c hi t e c t ur e M o ha m m a d S a dr o s a da t i F r a nk K . G ür k a y na k A d a p t e d f r o m D i g i t a l D e s i g n a n d C o m p u t e r A r c h i t e c t u r e , D a v i d M o n e y H a r r i s & S a r a h L . H a r r i s © 2 0 0 7 E l s e v i e r http:// safari.ethz.ch / ddca Pi p e l i n e d M I PS M i c ro arc h i t e c t u re C a r ne gi e M e l l on 2 Wh a t Will We Lea r n ¢ Ho w t o do mo re pe r unit t ime § Par allelis m § P i pe l i ni ng ¢ S i n gl e C yc l e vs Pipe line d ¢ Pipe line d M I PS a rc hit e c t ure ¢ Ha za rds a nd ho w t o s o lv e t he m § D a t a ha z a r ds § C o nt r o l ha z a r ds ¢ Pe rf o rma nc e o f t he Pipe line d a rc hit e c t ure C a r ne gi e M e l l on 3 Paral l e l i s m ¢ T w o t yp e s o f p a r a l l e l i s m : ¢ Sp at i al p ar al l e l i s m § dupl i c a t e ha r dw a r e pe r f o r m s m ul t i pl e t a s k s a t o nc e ¢ Te mpo r a l pa r a l l e l i s m § t a s k i s br o k e n i nt o m ul t i pl e s t a g e s § a l s o c a l l e d pi pe l i ni ng § f o r e x a m pl e , a n a s s e m bl y l i ne C a r ne gi e M e l l on 4 P a r a l l e l i s m D e fi n i t i o n s ¢ So m e d e f i n i t i o n s : § To k e n : A g r o up o f i nput s pr o c e s s e d t o pr o duc e a g r o up o f o ut put s § La t e n c y : T i m e f o r o ne t o k e n t o pa s s f r o m s t a r t t o e nd § Th r o u g h p u t : T he num be r o f t o k e ns t ha t c a n be pr o duc e d pe r uni t tim e ¢ P a r a l l e l i s m i n c r e a s e s t h r o u gh p u t . C a r ne gi e M e l l on 5 Paral l e l i s m E xamp l e ¢ Ex a m p l e : B e n B i t di ddl e i s ba k i ng c o o k i e s t o c e l e br a t e t he i ns t a l l a t i o n o f hi s t r a f f i c l i g ht c o nt r o l l e r . I t t a k e s 5 m i nut e s t o r o l l t he c o o k i e s a nd 1 5 m i nut e s t o ba k e t he m . A f t e r f i ni s hi ng o ne ba t c h he i m m e di a t e l y s t a r t s t he ne x t ba t c h. W ha t i s t he l a t e nc y a nd t hr o ug hput i f B e n do e s n’t us e pa r a l l e l i s m ? La t e n cy = T h r o u gh p u t = C a r ne gi e M e l l on 6 Paral l e l i s m E xamp l e ¢ Ex a m p l e : B e n B i t di ddl e i s ba k i ng c o o k i e s t o c e l e br a t e t he i ns t a l l a t i o n o f hi s t r a f f i c l i g ht c o nt r o l l e r . I t t a k e s 5 m i nut e s t o r o l l t he c o o k i e s a nd 1 5 m i nut e s t o ba k e t he m . A f t e r f i ni s hi ng o ne ba t c h he i m m e di a t e l y s t a r t s t he ne x t ba t c h. W ha t i s t he l a t e nc y a nd t hr o ug hput i f B e n do e s n’t us e pa r a l l e l i s m ? La t e n cy = 5 + 1 5 = 2 0 m i n u tes = 1 /3 h o u r T h r o u gh p u t = 1 t r a y/ 1 / 3 h o u r = 3 t r a ys / h o u r C a r ne gi e M e l l on 7 Paral l e l i s m E xamp l e ¢ W h a t i s t h e l a t e n c y a n d t h r o u gh p u t i f B e n u s e s p a r a l l e l i s m ? § Sp a t i a l p a r a l l e l i s m : B e n a s k s Ally s a P . H a c k e r t o he l p, us i ng he r o w n ove n § Te m p o r a l p a r a l l e l i s m : B e n br e a k s t he t a s k i nt o t w o s t a g e s : r o l l a nd ba k i ng . H e us e s t w o t r a y s . W hi l e t he f i r s t ba t c h i s ba k i ng he r o l l s t he s e c o nd ba t c h, a nd s o o n. C a r ne gi e M e l l on 8 Sp at i al Paral l e l i s mSpatialParallelism Roll Bake Ben 1 Ben 1 Alyssa 1 Alyssa 1 Ben 2 Ben 2 Alyssa 2 Alyssa 2 Time 0 5 10 15 20 25 30 35 40 45 50 Tray 1 Tray 2 Tray 3 Tray 4 Latency: time to first tray Legend L a t e n c y = T h r o u gh p u t = C a r ne gi e M e l l on 9 Sp at i al Paral l e l i s mSpatialParallelism Roll Bake Ben 1 Ben 1 Alyssa 1 Alyssa 1 Ben 2 Ben 2 Alyssa 2 Alyssa 2 Time 0 5 10 15 20 25 30 35 40 45 50 Tray 1 Tray 2 Tray 3 Tray 4 Latency: time to first tray Legend L a t e n c y = 5 + 1 5 = 2 0 m i n u t es = 1/ 3 h ou r T h r o u gh p u t = 2 t r a y s / 1 / 3 h o u r = 6 t r a y s / h ou r C a r ne gi e M e l l on 10 Te m po r a l P a r a l l e l i s mTemporalParallelism Ben 1 Ben 1 Ben 2 Ben 2 Ben 3 Ben 3 Time 0 5 10 15 20 25 30 35 40 45 50 Latency: time to first tray Tray 1 Tray 2 Tray 3 L a t e n c y = T h r o u gh p u t = C a r ne gi e M e l l on 11 Te m po r a l P a r a l l e l i s mTemporalParallelism Ben 1 Ben 1 Ben 2 Ben 2 Ben 3 Ben 3 Time 0 5 10 15 20 25 30 35 40 45 50 Latency: time to first tray Tray 1 Tray 2 Tray 3 L a t e n c y = 5 + 1 5 = 2 0 m i n u t es = 1/ 3 h ou r T h r o u gh p u t = 1 t r a y s / 1 / 4 h o u r = 4 t r a y s / h ou r U s i n g b o t h t e c h n i q u e s , t h e t h r o u gh p u t w o u l d b e 8 t r a y s / h ou r C a r ne gi e M e l l on 12 Pi p e l i n e d M I PS Pro c e s s o r ¢ Te mpo r a l pa r a l l e l i s m ¢ D i v i d e s i n gl e - c yc l e p r o c e s s o r i n t o 5 s t a ge s : § Fe t c h § D e c o de § E x e c ut e § Me mo ry § W r i t e ba c k ¢ A d d p i p e l i n e r e gi s t e r s b e t w e e n s t a ge s C a r ne gi e M e l l on 13 Si n g l e - C y c l e v s . P i p e l i n e d P e r fo r m a n c e Time (ps)Instr Fetch Instruction Decode Read Reg Execute ALU Memory Read / Write Write Reg1 2 0 100 200 300 400 500 600 700 800 900 1100 1200 1300 1400 1500 1600 1700 1800 19001000 Instr 1 2 3 Fetch Instruction Decode Read Reg Execute ALU Memory Read / Write Write Reg Fetch Instruction Decode Read Reg Execute ALU Memory Read/Write Write Reg Fetch Instruction Decode Read Reg Execute ALU Memory Read/Write Write Reg Fetch Instruction Decode Read Reg Execute ALU Memory Read/Write Write Reg Single-Cycle Pipelined C a r ne gi e M e l l on 14 Pi p e l i n i n g A b s t rac t i o n Time (cycles) lw $s2, 40($0) RF 40 $0 RF $s2 + DM RF $t2 $t1 RF $s3 + DM RF $s5 $s1 RF $s4 - DM RF $t6 $t5 RF $s5 & DM RF 20 $s1 RF $s6 + DM RF $t4 $t3 RF $s7 | DM add $s3, $t1, $t2 sub $s4, $s1, $s5 and $s5, $t5, $t6 sw $s6, 20($s1) or $s7, $t3, $t4 1 2 3 4 5 6 7 8 9 10 add IM IM IM IM IM IM lw sub and sw or C a r ne gi e M e l l on 15 Si n g l e - Cy c l e an d Pi p e l i n e d D at ap at h SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PCF 0 1PC' InstrD 25:21 20:16 15:0 SrcBE 20:16 15:11 RtE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchM ResultW PCPlus4EPCPlus4F ZeroM CLK CLKALU WriteRegE 4:0 CLK CLK CLK SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr 25:21 20:16 15:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result Zero CLKALU Fetch Decode Execute Memory Writeback C a r ne gi e M e l l on 16 Co rre c t e d Pi p e l i n e d Da t a p a t h ¢ Wr i t e R e g mus t a rri v e a t t he s a me t i me a s Re s ul t SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PCF 0 1 PC' InstrD 25:21 20:16 15:0 SrcBE 20:16 15:11 RtE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchM WriteRegM 4:0 ResultW PCPlus4EPCPlus4F ZeroM CLK CLK WriteRegW 4:0ALUWriteRegE 4:0 CLK CLK CLK Fetch Decode Execute Memory Writeback C a r ne gi e M e l l on 17 Pi p e l i n e d Co n t ro l SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PCF 0 1 PC' InstrD 25:21 20:16 15:0 5:0 SrcBE 20:16 15:11 RtE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchM WriteRegM 4:0 ResultW PCPlus4EPCPlus4F 31:26 RegDstD BranchD MemWriteD MemtoRegD ALUControlD ALUSrcD RegWriteD Op Funct Control Unit ZeroM PCSrcM CLK CLK CLK CLK CLK WriteRegW 4:0 ALUControlE 2:0ALU RegWriteE RegWriteM RegWriteW MemtoRegE MemtoRegM MemtoRegW MemWriteE MemWriteM BranchE BranchM RegDstE ALUSrcE WriteRegE 4:0 ¢ S a m e c o n t r o l u n i t a s s i n gl e - c yc l e p r o c e s s o r C o n t r o l d e l a ye d t o p r o p e r p i p e l i n e s t a ge C a r ne gi e M e l l on 18 Pi p e l i n e H azard ¢ Oc c u r s w h e n an i n s t r u c t i o n d e p e n d s o n r e s u l t s f r o m pre v i o us i ns t ruc t i o n t ha t ha s n’ t c o m p l eted . ¢ T yp e s o f h a z a r d s : § Da t a h a z a r d : r e g i s t e r v a l ue no t w r i t t e n ba c k t o r e g i s t e r f i l e y e t § Co n t r o l h a z a r d : ne x t i ns t r uc t i o n no t de c i de d y e t ( c a us e d by br a nc he s ) C a r ne gi e M e l l on 19 Da t a H a z a r d ¢ T h e r e gi s t e r f i l e c a n b e r e a d a n d w r i t t e n i n t h e s a m e c yc l e : § w r i t e t a k e s pl a c e dur i ng t he 1 s t ha l f o f t he c y c l e § r e a d t a k e s pl a c e dur i ng t he 2 nd ha l f o f t he c y c l e = > no ha z a r d ! ! ! § H o w e v e r o pe r a t i o ns t ha t i nv o l v e r e g i s t e r f i l e ha v e o nl y ha lf a c loc k cy cl e t o c o m pl e t e t he o pe r a t i o n! ! Time (cycles) add $s0, $s2, $s3 RF $s3 $s2 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM add or sub C a r ne gi e M e l l on 20 Da t a H a z a r d ¢ O n e i n s t r u c t i o n w r i t e s a r e gi s t e r ( $ s 0 ) a n d n e x t i n s t r u c t i o n s r e a d t h i s r e gi s t e r = > r e a d a f t e r w r i t e ( R A W ) h a z a r d . § add w r i t e s i nt o $ s 0 i n t he f i r s t ha l f o f c y c l e 5 § an d r e a ds $ s 0 o n c y c l e 3 , o bt a i ni ng t he w r o ng v a l ue § or r e a ds $ s 0 o n c y c l e 4 , a g a i n o bt a i ni ng t he w r o ng v a l ue . § su b r e a ds $ s 0 i n t he s e c o nd ha l f o f c y c l e 5 , o bt a i ni ng t he c o r r e c t v a l ue § s ubs e que nt i ns t r uc t i o ns r e a d t he c o r r e c t v a l ue o f $ s 0 Time (cycles) add $s0, $s2, $s3 RF $s3 $s2 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM add or sub C a r ne gi e M e l l on 21 Ho w C a n Yo u Ha ndle D a t a Ha z a r ds ? ¢ In s e r t “ NOP” s ( N o OP e r at i o n ) i n c o d e at c o m p i l e t i m e ¢ R e a r r a n ge c o d e a t c o m p i l e t i m e ¢ Fo rwa rd da t a a t run t i me ¢ St al l t h e p r o c e s s o r at r u n t i m e C a r ne gi e M e l l on 22 Co m p i l e - Ti m e H a z a r d E l i m i na t i o n Time (cycles) add $s0, $s2, $s3 RF $s3 $s2 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM add or sub nop nop RF RFDMnop IM RF RFDMnop IM 9 10 ¢ I n s e r t e n o u gh N O P s f o r r e s u l t t o b e r e a d y ¢ O r ( i f yo u c a n ) m o v e i n d e p e n d e n t u s e f u l i n s t r u c t i o n s f o r w a r d C a r ne gi e M e l l on 23 Da t a F o r wa r d i n g Time (cycles) add $s0, $s2, $s3 RF $s3 $s2 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM add or sub C a r ne gi e M e l l on 24 Da t a F o r wa r d i n g SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 1 0 PCF 0 1 PC' InstrD 25:21 20:16 15:0 5:0 SrcBE 25:21 15:11 RsE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchM WriteRegM 4:0 ResultW PCPlus4F 31:26 RegDstD BranchD MemWriteD MemtoRegD ALUControlD 2:0 ALUSrcD RegWriteD Op Funct Control Unit PCSrcM CLK CLK CLK CLK CLK WriteRegW 4:0 ALUControlE 2:0ALU RegWriteE RegWriteM RegWriteW MemtoRegE MemtoRegM MemtoRegW MemWriteE MemWriteM RegDstE ALUSrcE WriteRegE 4:0 00 01 10 00 01 10 SignImmDForwardAEForwardBE 20:16 RtE RsD RdD RtDRegWriteMRegWriteW Hazard Unit PCPlus4E BranchE BranchM ZeroM C a r ne gi e M e l l on 25 Da t a F o r wa r d i n g ¢ F o r w a r d t o E x e c u t e s t a ge f r o m e i t h e r : § Me mo ry s t a g e o r § W r i t e ba c k sta g e ¢ W h e n s h o u l d w e f o r w a r d f r o m o n e e i t h e r M e m o r y o r Wr i t e b a c k s t a ge ? § I f t ha t s t a g e w i l l w r i t e a de s t i na t i o n r e g i s t e r a nd t he de s t i na t i o n r e g i s t e r m a t c he s t he s o ur c e r e g i s t e r . § I f bo t h t he M e m o r y a nd W r i t e ba c k s t a g e s c o nt a i n m a t c hi ng de s t i na t i o n r e g i s t e r s , t he M e m o r y s t a g e s ho ul d ha v e pr i o r i t y , be c a us e i t c o nt a i ns t he m o r e r e c e nt l y e x e c ut e d i ns t r uc t i o n. C a r ne gi e M e l l on 26 Da t a F o r wa r d i n g ¢ F o r w a r d t o E x e c u t e s t a ge f r o m e i t h e r : § Me mo ry s t a g e o r § W r i t e ba c k sta g e ¢ F o r w a r d i n g l o gi c f o r For wa r d A E (p s e u d o c o d e ) : if (( rsE != 0) AND ( rsE == WriteRegM ) AND RegWriteM ) then ForwardAE = 10 # forward from Memory stage else if (( rsE != 0) AND ( rsE == WriteRegW ) AND RegWriteW ) then ForwardAE = 01 # forward from Writeback stage else ForwardAE = 00 # no forwarding ¢ F o r w a r d i n g l o gi c f o r For wa r d B E sa m e, b u t r ep l a c e rsE wi t h rtE C a r ne gi e M e l l on 27 St al l i n g Time (cycles) lw $s0, 40($0) RF 40 $0 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM lw or sub Trouble! ¢ F o r w a r d i n g i s s u f f i c i e n t t o s o l v e R A W d a t a h a z a r d s ¢ bu t … C a r ne gi e M e l l on 28 St al l i n g Time (cycles) lw $s0, 40($0) RF 40 $0 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM lw or sub Trouble! T he lw i ns t r uc t i o n do e s no t f i ni sh r e a di ng da t a unt i l t he e nd o f t he M e m o r y s t a g e , s o i t s r e s ul t ca n n o t b e f o r w a r d e d t o t he E x e c ut e s t a g e o f t he ne x t i ns t r uc t i o n. C a r ne gi e M e l l on 29 St al l i n g Time (cycles) lw $s0, 40($0) RF 40 $0 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM lw or sub Trouble! T he lw i ns t r uc t i o n ha s a tw o - cy cl e l a t e n cy , t he r e f o r e a de pe nde nt i ns t r uc t i o n c a nno t us e i t s r e s ul t unt i l t w o c y c l e s l a t e r . T he lw i ns t r uc t i o n r e c e i v e s da t a f r o m m e m o r y a t t he e nd o f c y c l e 4 . B ut t he and i ns t r uc t i o n ne e ds t ha t da t a a s a s o ur c e o pe r a nd a t t he be g i nni ng of c y c l e 4 . Th e r e i s n o wa y t o s o l v e t h i s h a z a r d wi t h f o r wa r d i n g . C a r ne gi e M e l l on 30 St al l i n g Time (cycles) lw $s0, 40($0) RF 40 $0 RF $s0 + DM RF $s1 $s0 RF $t0 & DM RF $s0 $s4 RF $t1 | DM RF $s5 $s0 RF $t2 - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM lw or sub 9 RF $s1 $s0 IM or Stall C a r ne gi e M e l l on 31 St al l i n g H ard w are ¢ S t a l l s a r e s u p p o r t e d b y: § a ddi ng e na bl e i nput s ( E N ) t o t he F e t c h a nd D e c o de pi pe l i ne re g i s t e rs § a nd a s y nc hr o no us r e s e t / c l e a r ( C L R ) i nput t o t he E x e c ut e pi pe l i ne re g i s t e r. ¢ Wh e n a lw sta l l o c c u r s § St a l l D a nd St a l l F a r e a s s e r t e d t o f o r c e t he D e c o de a nd F e t c h s t a g e pi pe l i ne r e g i s t e r s t o ho l d t he i r o l d v a l ue s . § F l us hE i s a l s o a s s e r t e d t o c l e a r t he c o nt e nt s o f t he E x e c ut e s t a g e pi pe l i ne r e g i s t e r , i nt r o duc i ng a bubbl e C a r ne gi e M e l l on 32 St al l i n g H ard w are SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 1 0 PCF 0 1 PC' InstrD 25:21 20:16 15:0 5:0 SrcBE 25:21 15:11 RsE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchM WriteRegM 4:0 ResultW PCPlus4F 31:26 RegDstD BranchD MemWriteD MemtoRegD ALUControlD 2:0 ALUSrcD RegWriteD Op Funct Control Unit PCSrcM CLK CLK CLK CLK CLK WriteRegW 4:0 ALUControlE 2:0ALU RegWriteE RegWriteM RegWriteW MemtoRegE MemtoRegM MemtoRegW MemWriteE MemWriteM RegDstE ALUSrcE WriteRegE 4:0 00 01 10 00 01 10 SignImmDStallFStallDForwardAEForwardBE 20:16 RtE RsD RdD RtDRegWriteMRegWriteWMemtoRegE Hazard UnitFlushE PCPlus4E BranchE BranchM ZeroMENENCLR C a r ne gi e M e l l on 33 Co n t ro l H azard s ¢ beq : § br a nc h i s no t de t e r m i ne d unt i l t he f o ur t h s t a g e o f t he pi pe l i ne § I ns t r uc t i o ns a f t e r t he br a nc h a r e f e t c he d be f o r e br a nc h o c c ur s § T he s e i ns t r uc t i o ns m us t be f l us he d i f t he br a nc h ha ppe ns ¢ Br a n c h mi s pre di c t i o n pe na l t y § num be r o f i ns t r uc t i o n f l us he d w he n br a nc h i s t a k e n § M a y be r e duc e d by de t e r m i ni ng br a nc h e a r l i e r C a r ne gi e M e l l on 34 Co n t ro l H azard s : O ri g i n al Pi p e l i n e SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 1 0 PCF 0 1 PC' InstrD 25:21 20:16 15:0 5:0 SrcBE 25:21 15:11 RsE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchM WriteRegM 4:0 ResultW PCPlus4F 31:26 RegDstD BranchD MemWriteD MemtoRegD ALUControlD 2:0 ALUSrcD RegWriteD Op Funct Control Unit PCSrcM CLK CLK CLK CLK CLK WriteRegW 4:0 ALUControlE 2:0ALU RegWriteE RegWriteM RegWriteW MemtoRegE MemtoRegM MemtoRegW MemWriteE MemWriteM RegDstE ALUSrcE WriteRegE 4:0 00 01 10 00 01 10 SignImmDStallFStallDForwardAEForwardBE 20:16 RtE RsD RdD RtDRegWriteMRegWriteWMemtoRegE Hazard UnitFlushE PCPlus4E BranchE BranchM ZeroMENENCLR C a r ne gi e M e l l on 35 Co n t ro l H azard s Time (cycles) beq $t1, $t2, 40 RF $t2 $t1 RF - DM RF $s1 $s0 RF & DM RF $s0 $s4 RF | DM RF $s5 $s0 RF - DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 and IM IM IM IM lw or sub 20 24 28 2C 30 ... ... 9 Flush these instructions 64 slt $t3, $s2, $s3 RF $s3 $s2 RF $t3slt DMIM slt C a r ne gi e M e l l on 36 Co n t ro l H azard s : E arl y B ran c h R e s o l u t i o n EqualD SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 1 0 PCF 0 1 PC' InstrD 25:21 20:16 15:0 5:0 SrcBE 25:21 15:11 RsE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchD WriteRegM 4:0 ResultW PCPlus4F 31:26 RegDstD BranchD MemWriteD MemtoRegD ALUControlD 2:0 ALUSrcD RegWriteD Op Funct Control Unit PCSrcD CLK CLK CLK CLK CLK WriteRegW 4:0 ALUControlE 2:0ALU RegWriteE RegWriteM RegWriteW MemtoRegE MemtoRegM MemtoRegW MemWriteE MemWriteM RegDstE ALUSrcE WriteRegE 4:0 00 01 10 00 01 10 = SignImmDStallFStallDForwardAEForwardBE 20:16 RtE RsD RdE RtDRegWriteMRegWriteWMemtoRegE Hazard UnitFlushEENENCLRCLR In t r o d u c e d a n o t h e r d a t a h a z a r d i n D e c o d e s t a g e .. t h i s i s a n o t h e r s t o r y C a r ne gi e M e l l on 37 Ea r l y Br a n c h R e s o l u t i o n Time (cycles) beq $t1, $t2, 40 RF $t2 $t1 RF - DM RF $s1 $s0 RF & DM and $t0, $s0, $s1 or $t1, $s4, $s0 sub $t2, $s0, $s5 1 2 3 4 5 6 7 8 andIM IM lw 20 24 28 2C 30 ... ... 9 Flush this instruction 64 slt $t3, $s2, $s3 RF $s3 $s2 RF $t3slt DMIM slt C a r ne gi e M e l l on 38 Ha ndling D a t a a nd C o nt r o l Ha z a r ds EqualD SignImmE CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 1 0 PCF 0 1 PC' InstrD 25:21 20:16 15:0 5:0 SrcBE 25:21 15:11 RsE RdE <<2+ ALUOutM ALUOutW ReadDataW WriteDataE WriteDataM SrcAE PCPlus4D PCBranchD WriteRegM 4:0 ResultW PCPlus4F 31:26 RegDstD BranchD MemWriteD MemtoRegD ALUControlD 2:0 ALUSrcD RegWriteD Op Funct Control Unit PCSrcD CLK CLK CLK CLK CLK WriteRegW 4:0 ALUControlE 2:0ALU RegWriteE RegWriteM RegWriteW MemtoRegE MemtoRegM MemtoRegW MemWriteE MemWriteM RegDstE ALUSrcE WriteRegE 4:0 00 01 10 00 01 10 0 1 0 1 = SignImmDStallFStallDForwardAEForwardBEForwardADForwardBD 20:16 RtE RsD RdD RtDRegWriteERegWriteMRegWriteWMemtoRegEBranchD Hazard UnitFlushEENENCLRCLR Po s s i b l e s o l u t i o n t o d a t a h a z a r d i n D e c o d e s t a g e . C a r ne gi e M e l l on 39 Co n t ro l F o rw ard i n g an d St al l i n g H ard w are // Forwarding logic: assign ForwardAD = ( rsD != 0) & ( rsD == WriteRegM ) & RegWriteM ; assign ForwardBD = ( rtD != 0) & ( rtD == WriteRegM ) & RegWriteM ; //Stalling logic: assign lwstall = (( rsD == rtE ) | ( rtD == rtE )) & MemtoRegE ; assign branchstall = ( BranchD & RegWriteE & ( WriteRegE == rsD | WriteRegE == rtD )) | ( BranchD & MemtoRegM & ( WriteRegM == rsD | WriteRegM == rtD )); // Stall signals; assign StallF = lwstall | branchstall ; assign StallD = lwstall | branchstall ; assign FLushE = lwstall | branchstall ; C a r ne gi e M e l l on 40 Br a n c h P r e d i c t i o n ¢ Gu e s s w h e t h e r b r a n ch w ill b e t a k e n § B a c k w a r d br a nc he s a r e us ua l l y t a k e n ( l o o ps ) § P e r ha ps c o ns i de r hi s t o r y o f w he t he r br a nc h w a s pr e v i o us l y t a k e n t o i m pr o v e t he g ue s s ¢ Good p r e d ict ion r e d u ce s t h e f r a ct ion of b r a n ch e s r e q u i r i n g a f l u s h C a r ne gi e M e l l on 41 P i p e l i n e d P e r fo r m a n c e E x a m p l e ¢ S P E C I N T 2 0 0 0 b e n c h m a r k : § 2 5 % l o a ds § 10% s t o r e s § 1 1 % br a nc he s § 2 % j um ps § 52% R - t y pe ¢ Su p p o s e : § 4 0 % o f l o a ds us e d by ne x t i ns t r uc t i o n § 2 5 % o f br a nc he s m i s pr e di c t e d ¢ Al l j u m p s f l u s h n e x t i n s t r u c t i on ¢ W h a t i s t h e a v e r a ge C P I ? C a r ne gi e M e l l on 42 P i p e l i n e d P e r fo r m a n c e E x a m p l e S o l u t i o n ¢ L o a d / B r a n c h C P I = 1 w h e n n o s t a l l i n g, 2 w h e n s t a l l i n g. Thus : § CP I lw = 1 ( 0 . 6 ) + 2 ( 0 . 4 ) = 1 . 4 Av e r a g e C P I f o r lo a d § CP I be q = 1 ( 0 . 7 5 ) + 2 ( 0 . 2 5 ) = 1 . 2 5 Av e r a g e C P I f o r b r a n ch ¢ An d § Av e r a g e C P I = C a r ne gi e M e l l on 43 P i p e l i n e d P e r fo r m a n c e E x a m p l e S o l u t i o n ¢ L o a d / B r a n c h C P I = 1 w h e n n o s t a l l i n g, 2 w h e n s t a l l i n g. Thus : § CP I lw = 1 ( 0 . 6 ) + 2 ( 0 . 4 ) = 1 . 4 Av e r a g e C P I f o r lo a d § CP I be q = 1 ( 0 . 7 5 ) + 2 ( 0 . 2 5 ) = 1 . 2 5 Av e r a g e C P I f o r b r a n ch ¢ An d § Av e r a g e C P I = (0 . 2 5 )(1 . 4 ) + lo a d (0 . 1 )(1 ) + st o r e (0 . 1 1 )(1 . 2 5 ) + be q (0 . 0 2 )(2 ) + jum p (0 . 5 2 )(1 ) r - ty p e = 1. 15 C a r ne gi e M e l l on 44 P i p e l i n e d P e r fo r m a n c e ¢ T h e re a re 5 s t a g e s , a n d 5 d i f f e re n t t i m i n g p a t h s : T c = ma x { t pc q + t me m + t se t u p fe t c h 2( t RF r e a d + t mu x + t eq + t AN D + t mu x + t se t u p ) de c o de t pc q + t mu x + t mu x + t AL U + t se t u p ex ec u t e t pc q + t me mw r it e + t se t u p me mo r y 2( t pc q + t mu x + t RF wr i t e ) wr i t e b a c k } ¢ T h e o p e ra t i o n s p e e d de pe n ds on t h e sl o w e st o p e ra ti o n ¢ De c o d e a n d W ri t e b a c k u s e re g i s t e r f i l e a n d h a v e o n l y h a l f a c l o c k c y c l e t o c o m p l e t e , t h a t i s w h y t h e re i s a 2 i n f ro n t o f t h e m C a r ne gi e M e l l on 45 P i p e l i n e d P e r fo r m a n c e E x a m p l e El em en t Pa r a m e t e r De l a y ( p s ) Re g i s t e r c l o c k - to - Q t pc q_ P C 30 Re g i s t e r s e t u p t se t u p 20 Mu l t i p l e x e r t mu x 25 AL U t AL U 200 Me m o r y r e a d t me m 250 Re g i s t e r f i l e re a d t RF r ea d 150 Re g i s t e r f i l e s e t u p t RF s e t u p 20 Eq u a l i t y c o m p a r a t o r t eq 40 AN D g a t e t AN D 15 Me m o r y wr i t e T me m w r i t e 220 Re g i s t e r f i l e w r i t e t RF w r i t e 100 T c = 2 ( t RF r e a d + t mu x + t eq + t AN D + t mu x + t se t u p ) = 2 [ 1 5 0 + 2 5 + 4 0 + 1 5 + 2 5 + 2 0 ] ps = 5 5 0 ps C a r ne gi e M e l l on 46 P i p e l i n e d P e r fo r m a n c e E x a m p l e ¢ F o r a p r o gr a m w i t h 1 0 0 b i l l i o n i n s t r u c t i o n s e x e c u t i n g o n a pi pe l i ne d M I PS pro c e s s o r: § CP I = 1 .1 5 § T c = 5 5 0 ps ¢ Ex e c u ti o n T i m e = ( # i n str u c ti o n s) × CP I × T c = ( 1 0 0 × 10 9 )(1 . 1 5 )(5 5 0 × 10 - 12 ) = 6 3 sec o n d s C a r ne gi e M e l l on 47 P e r fo r m a n c e S u m m a r y fo r M I P S a r c h . Pr oc e s s or Ex e c u t i on T i me (s e c o nds ) Sp e e d u p (s i ng l e - cy cl e i s ba se l i ne ) S i ng l e - cy cle 95 1 M ul t i c y c l e 133 0. 71 P i pe l i ne d 63 1. 51 ¢ Fa s t e s t o f t he t hre e M I PS a rc hi t e c t ure s i s Pip e line d . ¢ H o w e v e r , e v e n t h o u gh w e h a v e 5 f o l d p i p e l i n i n g, i t i s n o t 5 t i m e s f a s t e r t h a n s i n gl e c yc l e . C a r ne gi e M e l l on 48 Wh a t D id We Lea r n ? ¢ H o w t o d e s i gn a p i p e l i n e d a r c h i t e c t u r e § B r e a k do w n l o ng c o m bi na t i o na l pa t h by r e g i s t e r s § S ho r t e ns t he c l o c k pe r i o d § Y o u c a n s t a r t pr o c e s s i ng ne x t i ns t r uc t i o n o nc e t he f i r s t pa r t i s c o m pl e t e ¢ Pro ble ms o f t he pipe line d a rc hit e c t ure § D a t a y o u ne e d f o r t he ne x t i ns t r uc t i o n m a y no t be r e a dy ( Da t a H a z a r d ) § Y o u m a y no t y e t k no w t he ne x t i ns t r uc t i o n ( Co n t r o l H a z a r d ) ¢ So l u t i o n s t o H az ar d s ¢ Pe rf o rma nc e o f pipe line d M I PS a rc hit e c t ure","libVersion":"0.3.1","langs":""}