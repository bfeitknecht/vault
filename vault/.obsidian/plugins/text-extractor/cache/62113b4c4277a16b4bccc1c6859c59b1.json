{"path":"sem2/DDCA/VRL/slides/DDCA-L12a_MIPS-ASM.pdf","text":"C a r ne gi e M e l l on 1 D i g i t a l D e s i g n a nd C o m put e r A r c hi t e c t ur e M o ha m m a d S a dr o s a da t i F r a nk K . G ür k a y na k A d a p t e d f r o m D i g i t a l D e s i g n a n d C o m p u t e r A r c h i t e c t u r e , D a v i d M o n e y H a r r i s & S a r a h L . H a r r i s © 2 0 0 7 E l s e v i e r http:// safari.ethz.ch / ddca MI P S A s s e m bl y C a r ne gi e M e l l on 2 In T h is Lec tu r e ¢ A s s e m b l y L a n gu a ge ¢ A r c h i t e c t u r e D e s i gn P r i n c i p l e s § S i m pl i c i t y f a v o r s r e g ul a r i t y § M a k e t he c o m m o n c a s e f a s t § Sm a l l e r i s f a s t e r § G o o d de s i g n de m a nds g o o d c o m pr o m i s e s ¢ W h e r e t o s t o r e d a t a ( m e m o r y/ r e gi s t e r ) ¢ M a i n t yp e s o f M I P S i n s t r u c t i o n s § (R ) eg is t er t y pe § (I ) m m e di a t e t y pe § ( J ) um p t y pe C a r ne gi e M e l l on 3 In tr od u c tion ¢ Jum pi ng up a f e w l e v e l s o f a bs t r a c t i o n ¢ Ar ch i t e ct u r e : th e p r o g r a m m e r ’ s v i e w o f t h e co m p u t e r § D e f i ne d by i ns t r uc t i o ns ( o pe r a t i o ns ) a nd o pe r a nd l o c a t i o ns ¢ Mi c r o a r c h i t e c t u r e : Im p l e m e n t a t i o n o f a n a r c h i t e c t u r e ( Ch a p t e r 7 ) Ab s tr a c ti o n L e v e l s Ex a m p l e s Ap p l i c a ti o n S o f tw a r e Pr o g r a m s Op e r a t i n g S y s t e m s De v i c e d r i v e r s Ar c h i t e c tu r e I n s t r u c t i o n s , R e g i s t e r s Mi c r o a r c h i t e c tu r e Da t a p a t h , C o n t r o l l e r s Lo g i c A d d e r s , M e m o r i e s Dig it a l C ir c u it s A N D g a t e s , N O T g a t e s An a l o g C i r c u i ts Am pl i f i e r s De v ic e s Tr a n s i s t o r s , D i o d e s Ph y s ic s Ele c t r o n s C a r ne gi e M e l l on 4 As s e m bl y L a ngua ge ¢ T o c o m m a n d a c o m p u t e r , yo u m u s t u n d e r s t a n d i t s l a n gu a ge § In s t r u c t i o n s : w o r ds i n a c o m put e r ’ s l a ng ua g e § In s t r u c t i o n s e t : t he v o c a bul a r y o f a c o m put e r ’ s l a ng ua g e ¢ In s t r u ct ion s in d ica t e t h e op e r a t ion t o p e r f or m a n d t h e op e r a n d s t o u s e § As s e m b l y l a n g u a g e : hum a n - r e a da bl e f o r m a t o f i ns t r uc t i o ns § Ma c h i n e l a n g u a g e : c o m put e r - r e a da bl e f o r m a t ( 1 ’ s a nd 0 ’s ) ¢ MI P S ar c h i t e c t u r e : § D e v e l o pe d by J o hn H e nne s s y a nd c o l l e a g ue s a t S t a nf o r d i n t he 1 9 8 0 ’ s § U s e d i n m a ny c o m m e r c i a l s y s t e m s ( S i l i c o n G r a phi c s , N i nt e ndo , C i s c o ) ¢ O n c e yo u ’ v e l e a r n e d o n e a r c h i t e c t u r e , i t ’ s e a s y t o l e a r n o t h e r s C a r ne gi e M e l l on 5 Jo h n H e n n e s s y ¢ Pre s ide nt o f S t a nf o rd U niv e rs it y ¢ P r o f e s s o r o f E l e c t r i c a l E n gi n e e r i n g an d C o m p u t e r Sc i e n c e at St an f o r d si n c e 1 9 7 7 ¢ Co - in v e n t e d t h e R e d u ce d In s t ru ct ion Se t C o m p u t e r ( R I SC ) ¢ De v e l o p e d t h e M I P S a r c h i t e c t u r e a t St an f o r d i n 1 9 8 4 an d c o f o u n d e d M I P S C o m p u t e r S ys t e m s ¢ As of 2004, ov e r 300 m i l l i on M IP S mi c ro pro c e s s o rs ha v e be e n s o l d C a r ne gi e M e l l on 6 Ar c hi t e c t ur e De s i gn P r i nc i pl e s ¢ U n d e r l yi n g d e s i gn p r i n c i p l e s , a s a r t i c u l a t e d b y H e n n e s s y an d P at t e r s o n : § S i m pl i c i t y f a v o r s r e g ul a r i t y § M a k e t he c o m m o n c a s e f a s t § Sm a l l e r i s f a s t e r § G o o d de s i g n de m a nds g o o d c o m pr o m i s e s C a r ne gi e M e l l on 7 MI P S I ns t r uc t i o ns : A ddi t i o n a = b + c; add a, b, c Hig h - lev el c od e MI P S a s s e m b l y ¢ ad d : mne mo ni c i ndi c a t e s wha t o pe ra t i o n t o pe rf o rm ¢ b, c : so u r c e o p er a n d s o n w h i c h th e o p er a ti o n i s p er fo r m ed ¢ a: de s t i na t i o n o pe ra nd t o whi c h t he re s ul t i s wri t t e n C a r ne gi e M e l l on 8 MI P S I ns t r uc t i o ns : S ubt r a c t i o n a = b - c; sub a, b, c Hig h - lev el c od e MI P S a s s e m b l y ¢ Su b t r ac t i o n i s s i m i l ar t o ad d i t i o n , o n l y m n e m o n i c c h a n ge s ¢ su b : mne mo ni c i ndi c a t e s wha t o pe ra t i o n t o pe rf o rm ¢ b, c : so u r c e o p er a n d s o n w h i c h th e o p er a ti o n i s p er fo r m ed ¢ a: de s t i na t i o n o pe ra nd t o whi c h t he re s ul t i s wri t t e n C a r ne gi e M e l l on 9 De s i gn P r i n ci p l e 1 S i m p l i ci t y f a v o r s r e g u l a r i t y ¢ Co n si sten t i n str u c ti o n f o r m a t ¢ Sam e n u m b e r o f o p e r an d s ( t w o s o u r c e s an d o n e d e s t i n at i o n ) § e a s i e r t o e nc o de a nd ha ndl e i n ha r dw a r e C a r ne gi e M e l l on 10 In str u c tion s: M or e C om p lex C od e a = b + c - d; add t, b, c # t = b + c sub a, t, d # a = t - d Hig h - lev el co d e MI P S as s e mbl y co d e ¢ M o r e c o m p l e x c o d e i s h a n d l e d b y m u l t i p l e M I P S i n s t r u c t i o n s . C a r ne gi e M e l l on 11 De s i gn P r i n ci p l e 2 M a k e t h e co m m o n ca s e f a s t ¢ M I P S i n c l u d e s o n l y s i m p l e , c o m m o n l y u s e d i n s t r u c t i o n s ¢ Ha rdw a re t o de c o de a nd e xe c ut e t he ins t ruc t io n c a n be si m p l e, sm a l l , a n d fa st ¢ Mo r e c o m p l e x i n s t r u c t i o n s ( t h at ar e l e s s c o m m o n ) c an b e p e r f o r m e d u s i n g m u l t i p l e s i m p l e i n s t r u c t i o n s C a r ne gi e M e l l on 12 RI SC an d C I SC ¢ Re duc e d i ns t ruc t i o n s e t c o mput e r ( RI S C ) § m e a ns : s m a l l num be r o f s i m pl e i ns t r uc t i o ns § e x a m pl e : M I P S ¢ Co m p l ex i n str u c ti o n set c o m p u ter s ( CI S C) § m e a ns : l a r g e num be r o f i ns t r uc t i o ns § e x a m pl e : I nt e l ’s x 8 6 C a r ne gi e M e l l on 13 Ope r a nds ¢ A c o m p u t e r n e e d s a p h ys i c a l l o c a t i o n f r o m w h i c h t o r e t r i e v e b i n a r y o p e r a n d s ¢ A c om p u t e r r e t r i e v e s op e r a n d s f r om : § Re g i s t e rs § Me mo ry § C o ns t a nt s ( a l s o c a l l e d i m m e di a t e s ) C a r ne gi e M e l l on 14 Ope r a nds : R e g i s t e r s ¢ M a i n M e m o r y i s s l o w ¢ M o s t a r c h i t e c t u r e s h a v e a s m a l l s e t o f ( f a s t ) r e gi s t e r s § M I P S ha s t hi r t y - tw o 3 2 - bi t r e g i s t e r s ¢ MI P S i s c al l e d a 3 2 - bi t a rc hi t e c t ure be c a us e i t o pe ra t e s o n 32 - bi t da t a § A 6 4 - bi t v e r s i o n o f M I P S a l s o e x i s t s , but w e w i l l c o ns i de r o nl y t he 3 2 - bi t v e r s i o n C a r ne gi e M e l l on 15 De s i gn P r i n ci p l e 3 Sma lle r is F a st e r ¢ M I P S i n c l u d e s o n l y a s m a l l n u m b e r o f r e gi s t e r s ¢ J u s t a s r e t r i e v i n g d a t a f r o m a f e w b o o k s o n yo u r t a b l e i s f a s t e r t h a n s o r t i n g t h r o u gh 1 0 0 0 b o o k s , r e t r i e v i n g d a t a f r o m 3 2 r e gi s t e r s i s f a s t e r t h a n r e t r i e v i n g i t f r o m 1 0 0 0 r e gi s t e r s o r a l a r ge m e m o r y. C a r ne gi e M e l l on 16 The M I P S R e gi s t e r S e t Na m e Re g i s te r N u m b e r Us a g e $0 0 t he c o ns t a n t v a l ue 0 $at 1 a s s e m bl e r t e m po r a r y $v0 - $v1 2 - 3 pr o c e dur e r e t ur n v a l ue s $a0 - $a3 4 - 7 pr o c e dur e a r g um e n t s $t0 - $t7 8 - 15 t e m po r a r i e s $s0 - $s7 16 - 23 s a v e d v a r i a bl e s $t8 - $t9 24 - 25 m o r e t e m po r a r i e s $k0 - $k1 26 - 27 O S t e m po r a r i e s $ gp 28 g l o ba l po i n t e r $ sp 29 s t a c k po i n t e r $ fp 30 f r a m e po i n t e r $ ra 31 pr o c e dur e r e t ur n a ddr e s s C a r ne gi e M e l l on 17 Ope r a nds : R e g i s t e r s ¢ W r i t t e n w i t h a d o l l a r s i gn ( $ ) b e f o r e t h e i r n a m e § F o r e x a m pl e , r e g i s t e r 0 i s w r i t t e n “ $ 0 ” , pr o no unc e d “ r e g i s t e r z e r o ” o r “ do l l a r z e r o ” ¢ C e r t a i n r e gi s t e r s u s e d f o r s p e c i f i c p u r p o s e s : § $ 0 a l w a y s ho l ds t he c o ns t a nt v a l ue 0 § t he sa v e d re gi st e rs , $ s 0 - $ s 7 , a r e us e d t o ho l d v a r i a bl e s § t he te m p o r a r y r e g i s te r s , $ t 0 - $ t 9 , a r e us e d t o ho l d i nt e r m e di a t e v a l ue s dur i ng a l a r g e r c o m put a t i o n ¢ F o r n o w , w e o n l y u s e t h e t e m p o r a r y r e gi s t e r s ( $ t 0 - $t 9) a n d t h e s a v e d r e gi s t e r s ( $ s 0 - $s 7) ¢ W e w i l l u s e t h e o t h e r r e gi s t e r s i n l a t e r s l i d e s C a r ne gi e M e l l on 18 In str u c tion s w ith r eg ister s a = b + c; # $s0 = a # $s1 = b # $s2 = c add $s0, $s1, $s2 Hig h - lev el c od e MI P S a s s e m b l y ¢ Re v i s i t a dd i ns t ruc t i o n § T he s o ur c e a nd de s t i na t i o n o pe r a nds a r e no w i n r e g i s t e r s C a r ne gi e M e l l on 19 Ope r a nds : Me m o r y ¢ T o o m u c h d a t a t o f i t i n o n l y 3 2 r e gi s t e r s ¢ St o r e m o r e d at a i n m e m o r y § M e m o r y i s l a r g e , s o i t c a n ho l d a l o t o f da t a § B ut i t ’s a l s o s l o w ¢ C o m m o n l y u s e d v a r i a b l e s k e p t i n r e gi s t e r s ¢ U s i n g a c o m b i n a t i o n o f r e gi s t e r s a n d m e m o r y, a p r o gr a m c a n a c c e s s a l a r ge a m o u n t o f d a t a f a i r l y q u i c k l y C a r ne gi e M e l l on 20 Wor d - Addr e s s a bl e M e m o r y ¢ Ea c h 3 2 - bi t da t a wo rd ha s a uni que a ddre s s Data 00000003 40F30788 01EE2842 F2F1AC07 ABCDEF78 00000002 00000001 00000000 Word Address Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 21 Re ad i n g W o rd - Addr e s s a bl e M e m o r y lw $s3, 1($0) # read memory word 1 into $s3 ¢ M e m o r y r e a d s a r e c a l l e d l o a d s ¢ M n e m o n i c : l o a d w o r d ( lw ) ¢ E x a m p l e : r e a d a w o r d o f d a t a a t m e m o r y a d d r e s s 1 i n t o $ s 3 Data 00000003 40F307 88 01EE28 42 F2F1AC07 ABCDEF78 00000002 00000001 00000000 Word Address Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 22 Re ad i n g W o rd - Addr e s s a bl e M e m o r y lw $s3, 1($0) # read memory word 1 into $s3 ¢ E x a m p l e : r e a d a w o r d o f d a t a a t m e m o r y a d d r e s s 1 i n t o $ s 3 ¢ M e m o r y a d d r e s s c a l c u l a t i o n : § a dd t he ba s e a ddr e s s ( $ 0 ) t o t he o f f s e t ( 1 ) § a ddr e s s = ( $ 0 + 1 ) = 1 § $s3 ho l ds t he v a l ue 0xF2F1AC07 a f t e r t he i ns t r uc t i o n c o m pl e t e s ¢ A n y r e gi s t e r m a y b e u s e d t o s t o r e th e b a se a d d r ess Data 00000003 40F307 88 01EE28 42 F2F1AC07 ABCDEF78 00000002 00000001 00000000 Word Address Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 23 Wr itin g Wor d - Addr e s s a bl e M e m o r y sw $t4, 0x7($0) # write the value in $t4 # to memory word 7 ¢ M e m o r y w r i t e s a r e c a l l e d s t o r e s ¢ M n e m o n i c : s t o r e w o r d ( sw ) ¢ E x a m p l e : W r i t e ( s t o r e ) t h e v a l u e he l d i n $t4 i n t o m e m o r y a d d r e s s 7 Data 00000003 40F307 88 01EE28 42 F2F1AC07 ABCDEF78 00000002 00000001 00000000 Word Address Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 24 Wr itin g Wor d - Addr e s s a bl e M e m o r y sw $t4, 0x7($0) # write the value in $t4 # to memory word 7 ¢ E x a m p l e : W r i t e ( s t o r e ) t h e v a l u e h e l d i n $t4 i n t o m e m o r y ad d r e s s 7 ¢ M e m o r y a d d r e s s c a l c u l a t i o n : § a dd t he ba s e a ddr e s s ( $ 0 ) t o t he o f f s e t ( 7 ) § a ddr e s s = ( $ 0 + 7 ) = 7 § O f f s e t c a n be w r i t t e n i n de c i m a l ( de f a ul t ) o r he x a de c i m a l ¢ A n y r e gi s t e r m a y b e u s e d t o s t o r e th e b a se a d d r ess Data 00000003 40F307 88 01EE28 42 F2F1AC07 ABCDEF78 00000002 00000001 00000000 Word Address Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 25 Byt e - Addr e s s a bl e M e m o r y ¢ E a c h d a t a b yt e h a s a u n i q u e a d d r e s s ¢ L o a d / s t o r e w o r d s o r s i n gl e b yt e s : l o a d b yt e ( lb ) an d s t o r e b yt e ( sb ) ¢ Ea c h 3 2 - b i t w o r d s h a s 4 b yt e s , s o t h e w o r d a d d r e s s i n c r e m e n t s b y 4 . M I P S u s e s b yt e a d d r e s s a b l e m e m o r y Word Address Data 0000000C 00000008 00000004 00000000 width = 4 bytes 40F30788 01EE2842 F2F1AC07 ABCDEF78 Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 26 Re ad i n g B y t e - Addr e s s a bl e M e m o r y lw $s3, 4($0) # read word at address 4 into $s3 ¢ L o a d a w o r d o f d a t a a t m e m o r y a d d r e s s 4 i n t o $ s 3 . ¢ M e m o r y a d d r e s s c a l c u l a t i o n : § a dd t he ba s e a ddr e s s ( $ 0 ) t o t he o f f s e t ( 4 ) § a ddr e s s = ( $ 0 + 4 ) = 4 ¢ $s3 ho l ds t he v a l ue 0xF2F1AC07 af t e r t h e i n s t r u c t i o n c o m p l e t e s Word Address Data 0000000C 00000008 00000004 00000000 width = 4 bytes 40F307 88 01EE28 42 F2F1 AC07 ABCDEF78 Word 3 Word 2 Word 1 Word 0 C a r ne gi e M e l l on 27 Wr itin g B y te - Addr e s s a bl e M e m o r y sw $t7, 44($0) # write $t7 into address 44 ¢ E x a m p l e : s t o r e t h e v a l u e h e l d i n $ t 7 i n t o t h e el ev en th 3 2 - b i t m e m o r y l o c a t i o n . ¢ M e m o r y a d d r e s s c a l c u l a t i o n : § B y t e a ddr e s s a bl e a ddr e s s f o r w o r d e l e v e n 11x 4 = 44 10 = 0 x 2 C 16 § a dd t he ba s e a ddr e s s ( $ 0 ) t o t he o f f s e t ( 0 x 2 c ) § a ddr e s s = ( $ 0 + 4 4 ) = 4 4 C a r ne gi e M e l l on 28 Bi g - En d i a n a n d L i t t l e - En d i a n M e m o r y ¢ H o w t o n u m b e r b yt e s w i t h i n a w o r d ? ¢ Wo r d a d d r e s s i s t h e s a m e f o r b i g - or lit t le - en d i a n § Li t t l e - en d i a n : by t e num be r s s t a r t a t t he l i t t l e ( l e a s t s i g ni f i c a nt ) e nd § Bi g - en d i a n : by t e num be r s s t a r t a t t he bi g ( m o s t s i g ni f i c a nt ) e nd 0123 MSB LSB 4567 89AB CDEF ByteAddress 32100 76544 BA988 FEDCC ByteAddressWordAddress Big-Endian Little-Endian MSB LSB C a r ne gi e M e l l on 29 Bi g - En d i a n a n d L i t t l e - En d i a n M e m o r y ¢ Fro m J o na t ha n S wi f t ’ s G ul l i v e r’ s Tra v e l s whe re t he Li t t l e - En d i a n s b r o k e t h e i r e ggs o n t h e l i t t l e e n d o f t h e e gg a n d th e B i g - En d i a n s b r o k e t h e i r e ggs o n t h e b i g e n d . § A s i ndi c a t e d by t he f a r c i c a l na m e , i t do e s n’t r e a l l y m a t t e r w hi c h a ddr e s s i ng t y pe i s us e d – e x c e pt w he n t he t w o s y s t e m s ne e d t o s ha r e da t a ! 0123 MSB LSB 4567 89AB CDEF ByteAddress 32100 76544 BA988 FEDCC ByteAddressWordAddress Big-Endian Little-Endian MSB LSB C a r ne gi e M e l l on 30 Bi g - an d L i t t l e - En d i a n Ex a m p l e ¢ S u p p o s e $ t 0 i n i t i a l l y c o n t a i n s 0 x 2 3 4 5 6 7 8 9 . A f t e r t h e f o l l o w i n g p r o gr a m i s r u n o n a b i g - e n d i a n s ys t e m , w h a t val u e d o e s $ s 0 c o n t ai n ? I n a l i t t l e - e n d i a n s ys t e m ? sw $t0, 0($0) lb $s0, 1($0) 234567890123 234567890 3210WordAddress Big-Endian Little-Endian Byte AddressData Value Byte AddressData ValueMSB LSB MSB LSB C a r ne gi e M e l l on 31 Bi g - an d L i t t l e - En d i a n Ex a m p l e ¢ S u p p o s e $ t 0 i n i t i a l l y c o n t a i n s 0 x 2 3 4 5 6 7 8 9 . A f t e r t h e f o l l o w i n g p r o gr a m i s r u n o n a b i g - e n d i a n s ys t e m , w h a t val u e d o e s $ s 0 c o n t ai n ? I n a l i t t l e - e n d i a n s ys t e m ? sw $t0, 0($0) lb $s0, 1($0) ¢ Bi g - en d i a n : 0x00000045 Lit t le - en d i a n : 0x00000067 234567890123 234567890 3210WordAddress Big-Endian Little-Endian Byte AddressData Value Byte AddressData ValueMSB LSB MSB LSB C a r ne gi e M e l l on 32 De s i gn P r i n ci p l e 4 G o o d d e s i g n d e m a n d s g o o d co m p r o m i s e s ¢ Mu l t i p l e i n s t r u c t i o n f o r m at s al l o w f l e x i b i l i t y § add , sub : us e 3 r e g i s t e r o pe r a nds § lw , sw : us e 2 r e g i s t e r o pe r a nds a nd a c o ns t a nt ¢ Nu m b e r o f i n s t r u c t i o n f o r m a t s k e p t s m a l l § t o a dhe r e t o de s i g n pr i nc i pl e s 1 a nd 3 ( s i m pl i c i t y f a v o r s r e g ul a r i t y a nd s m a l l e r i s f a s t e r ) C a r ne gi e M e l l on 33 Ope r a nds : C o ns t a nt s / Im m ed ia tes a = a + 4; b = a – 12; # $s0 = a, $s1 = b addi $s0, $s0, 4 addi $s1, $s0, - 12 Hig h - lev el c od e MI P S a s s e m b l y c o d e ¢ lw an d sw illu s t ra t e t h e u s e of con s t a n t s or im m e d ia t e s § C a l l e d i m m e di a t e s be c a us e t he y a r e di r e c t l y a v a i l a bl e § I m m e di a t e s do n’t r e qui r e a r e g i s t e r o r m e m o r y a c c e s s ¢ The a dd i mme di a t e ( addi ) i n s t r u c t i o n ad d s an i m m e d i at e t o a v a r i a b l e ( h e l d i n a r e gi s t e r ) § A n i m m e di a t e i s a 1 6 - bi t t w o ’s c o m pl e m e nt num be r ¢ Is s u b t r a ct im m e d ia t e ( su b i ) n e c e s s a r y? C a r ne gi e M e l l on 34 Ma c hi ne La ng ua g e ¢ C o m p u t e r s o n l y u n d e r s t a n d 1 ’ s a n d 0 ’s ¢ M a c h i n e l a n gu a ge : b i n a r y r e p r e s e n t a t i o n o f i n s t r u c t i o n s ¢ 32 - bi t i ns t ruc t i o ns § A g a i n, s i m pl i c i t y f a v o r s r e g ul a r i t y : 3 2 - bi t da t a , 3 2 - bi t i ns t r uc t i o ns , a nd po s s i bl y a l s o 3 2 - bi t a ddr e s s e s ¢ Thr e e i ns t r uc t i o n f o r ma t s : § R - Ty p e : r e g i s t e r o pe r a nds § I - Ty p e : i m m e di a t e o pe r a nd § J - Ty p e : f o r j um pi ng ( w e ’ l l di s c us s l a t e r ) C a r ne gi e M e l l on 35 R - Ty pe ¢ R e gi s t e r - t yp e , 3 r e gi s t e r o p e r a n d s : § rs , rt : s o ur c e r e g i s t e r s § rd : de s t i na t i o n r e g i s t e r ¢ Ot h e r f i e l d s : § op : t he o pe r a t i o n c o de o r o pc o de (0 f o r R - t y pe i ns t r uc t i o ns ) § fu n c t : t he f unc t i o n t o g e t he r , t he o pc o de a nd f unc t i o n t e l l t he c o m put e r w ha t o pe r a t i o n t o pe r f o r m § sh a m t : t he s hi f t a m o unt f o r s hi f t i ns t r uc t i o ns , o t he r w i s e i t ’s 0 op rs rt rdshamt funct 6 bits 5 bits 5 bits 5 bits 5 bits 6 bits R-Type C a r ne gi e M e l l on 36 R - Ty pe E x a m pl e s add $s0, $s1, $s2 sub $t0, $t3, $t5 Assembly Code 0 17 18 16 0 32 Field Values 0 11 13 8 0 34 op rs rt rd shamt funct 6 bits 5 bits 5 bits 5 bits5 bits 6 bits 000000 10001 10010 10000 00000 100000 op rs rt rd shamt funct 000000 01011 01101 01000 00000 100010 Machine Code 6 bits 5 bits 5 bits 5 bits5 bits 6 bits (0x02328020) (0x016D4022) No t e t he o r de r o f r e g i s t e r s i n t he a s s e m bl y c o de : add rd , rs , rt C a r ne gi e M e l l on 37 I - Ty pe ¢ Im m e d ia t e - t yp e , h a s 3 o p e r a n d s : § rs , rt : r e g i s t e r o pe r a nds § im m : 16 - bi t t w o ’s c o m pl e m e nt i m m e di a t e ¢ Ot h e r f i e l d s : § op : t he o pc o de ¢ S i m p l i c i t y f a v o r s r e gu l a r i t y: a l l i n s t r u c t i o n s h a v e op cod e ¢ O p e r a t i o n i s c o m p l e t e l y d e t e r m i n e d b y t h e op cod e op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 38 I - Ty pe E x a m pl e s Assembly Code 8 17 16 5 Field Values op rs rt imm 6 bits 5 bits 5 bits 16 bits addi $s0, $s1, 5 addi $t0, $s3, -12 lw $t2, 32($0) sw $s1, 4($t1) 8 19 8 -12 35 0 10 32 43 9 17 4 (0x22300005) (0x2268FFF4) (0x8C0A0020) (0xAD310004) 001000 10001 10000 0000 0000 0000 0101 op rs rt imm Machine Code 6 bits 5 bits 5 bits 16 bits 001000 10011 01000 1111 1111 1111 0100 100011 00000 01010 0000 0000 0010 0000 101011 01001 10001 0000 0000 0000 0100 No t e th e d i f f e ri n g o r d e r o f re g i s t e r s i n t h e a s s e m b l y a n d ma c h i n e c o d e s : addi rt , rs , imm lw rt , imm ( rs ) sw rt , imm ( rs ) C a r ne gi e M e l l on 39 Ma c hi ne La ng ua g e : J - Ty pe ¢ Ju m p - t yp e ¢ 26 - bi t a ddre s s o pe ra nd ( ad d r ) ¢ Us e d f o r j u m p i n s t r u c t i o n s ( j ) op addr 6 bits 26 bits J-Type C a r ne gi e M e l l on 40 Re vi e w : I n s t ru c t i o n Fo rmat s op rs rt rdshamt funct 6 bits 5 bits 5 bits 5 bits 5 bits 6 bits R-Type op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type op addr 6 bits 26 bits J-Type C a r ne gi e M e l l on 41 T h e P o w e r o f t h e S t o r e d P r o g r a m ¢ 32 - bi t i ns t ruc t i o ns a nd da t a s t o re d i n me mo ry ¢ S e q u e n c e o f i n s t r u c t i o n s : o n l y d i f f e r e n c e b e t w e e n t w o a p p l i c a t i o n s ( f o r e x a m p l e , a t e x t e d i t o r a n d a v i d e o ga m e ) ¢ T o r u n a n e w p r o gr a m : § N o r e w i r i ng r e qui r e d § S i m pl y s t o r e ne w pr o g r a m i n m e m o r y ¢ T h e p r o c e s s o r h a r d w a r e e x e c u t e s t h e p r o gr a m : § f e t c he s ( r e a ds ) t he i ns t r uc t i o ns f r o m m e m o r y i n s e que nc e § pe r f o r m s t he s pe c i f i e d o pe r a t i o n C a r ne gi e M e l l on 42 Pro g ram c o u n t e r ¢ T h e p r o c e s s o r h a r d w a r e e x e c u t e s t h e p r o gr a m : § f e t c he s ( r e a ds ) t he i ns t r uc t i o ns f r o m m e m o r y i n s e que nc e § pe r f o r m s t he s pe c i f i e d o pe r a t i o n § c o nt i nue s w i t h t he ne x t i ns t r uc t i o n ¢ T h e p r o gr a m c o u n t e r ( P C ) k e e p s t r a c k o f t h e c u r r e n t in s t ru ct ion § I n M I P S , pr o g r a m s t y pi c a l l y s t a r t a t m e m o r y a ddr e s s 0x00400000 C a r ne gi e M e l l on 43 The S t o r e d P r o gr a m addi $t0, $s3, -12 Machine CodeAssembly Code lw $t2, 32($0) add $s0, $s1, $s2 sub $t0, $t3, $t5 0x8C0A0020 0x02328020 0x2268FFF4 0x016D4022 Address Instructions 0040000C 016D4022 2268FFF4 02328020 8C0A0020 00400008 00400004 00400000 Stored Program Main Memory PC C a r ne gi e M e l l on 44 In ter p r etin g M a c h in e La n g u a g e C od e ¢ St ar t w i t h op cod e § O pc o de t e l l s ho w t o pa r s e t he r e m a i ni ng bi t s ¢ If op cod e is a ll 0 ’ s § R - t y pe i ns t r uc t i o n § F unc t i o n bi t s t e l l w ha t i ns t r uc t i o n i t i s ¢ Ot h e r w i s e § o pc o de t e l l s w ha t i ns t r uc t i o n i t i s 001000 10001 10111 1111 1111 1111 0001 op rs rt imm addi $s7, $s1, -15 Machine Code Assembly Code 8 17 23 -15 Field Values (0x2237FFF1) op rs rt imm 2 2 3 7 F F F 1 000000 10111 10011 01000 00000 100010 op rs rt rd shamt funct sub $t0, $s7, $s3 0 23 19 8 0 34(0x02F34022) op rs rt rd shamt funct 0 2 F 3 4 0 2 2 C a r ne gi e M e l l on 45 Wh a t d id w e lea r n ? ¢ A d d r e s s i n g t yp e s § B y t e a ddr e s s a bl e ( M I P S i s by t e a ddr e s s a bl e ) § W o r d a ddr e s s a bl e ¢ T h r e e d i f f e r e n t t yp e s o f M I P S i n s t r u c t i o n s § R - t y pe : o pe r a t e s o n r e g i s t e r s § I - t y pe : i m m e di a t e t y pe , us i ng c o ns t a nt s § J - t y pe : f o r j um p i ns t r uc t i o ns , 2 4 bi t a ddr e s s","libVersion":"0.3.1","langs":""}