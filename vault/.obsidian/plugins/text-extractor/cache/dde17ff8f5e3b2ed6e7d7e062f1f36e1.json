{"path":"sem2/DDCA/VRL/slides/DDCA-L16-microarchitecture.pdf","text":"C a r ne gi e M e l l on 1 D i g i t a l D e s i g n a nd C o m put e r A r c hi t e c t ur e M o ha m m a d S a dr o s a da t i F r a nk K . G ür k a y na k A d a p t e d f r o m D i g i t a l D e s i g n a n d C o m p u t e r A r c h i t e c t u r e , D a v i d M o n e y H a r r i s & S a r a h L . H a r r i s © 2 0 0 7 E l s e v i e r http:// safari.ethz.ch / ddca Mi c r o a r c hi t e c t ur e C a r ne gi e M e l l on 2 In T h is Lec tu r e ¢ Ove r vi e w o f t h e MI P S Mi c r o p r o c e s s o r ¢ R T L D e s i gn R e v i s i t e d ¢ S i n gl e - C yc l e P r o c e s s o r ¢ P e r f o r m a n c e A n a l ys i s C a r ne gi e M e l l on 3 In tr od u c tion ¢ M i c r o a r c h i t e c t u r e : § H o w t o i m pl e m e nt a n a r c hi t e c t ur e i n ha r dw a r e ¢ Pro c e s s o r: § D a t a pa t h : f unc t i o na l bl o c k s § C o nt r o l : c o nt r o l s i g na l s Physics Devices Analog Circuits Digital Circuits Logic Micro- architecture Architecture Operating Systems Application Software electrons transistors diodes amplifiers filters AND gates NOT gates adders memories datapaths controllers instructions registers device drivers programs C a r ne gi e M e l l on 4 Mi c r o a r c hi t e c t ur e ¢ M u l t i p l e i m p l e m e n t a t i o n s f o r a s i n gl e a r c h i t e c t u r e : ¢ Sin g le - cy cl e (t h i s w e e k ) § E a c h i ns t r uc t i o n e x e c ut e s i n a s i ng l e c y c l e ¢ Mu l t i c y c l e (i n t h e b o o k , w e w i l l n o t c o v e r i t ) § E a c h i ns t r uc t i o n i s br o k e n up i nt o a s e r i e s o f s ho r t e r s t e ps § O ne i ns t r uc t i o n i s e x e c ut e d pi e c e - wi s e § Allo w s r e - us e o f c o m po ne nt s ( A L U , m e m o r y ) ¢ Pip e line d (ju s t af t e r w e f i n i s h t h i s o n e ) § E a c h i ns t r uc t i o n i s br o k e n up i nt o a s e r i e s o f s t e ps § M ul t i pl e i ns t r uc t i o ns e x e c ut e a t o nc e § B e t t e r f o r pe r f o r m a nc e C a r ne gi e M e l l on 5 Wh a t d oes ou r M ic r op r oc essor d o ? ¢ P r o gr a m i s i n m e m o r y, s t o r e d a s a s e r i e s o f i n s t r u c t i o n s . ¢ Ba s i c e x e c u t i o n i s : § R e a d o ne i ns t r uc t i o n § D e c o de w ha t i t w a nt s § F i nd t he o pe r a nds e i t he r f r o m r e g i s t e r s o r f r o m m e m o r y § P e r f o r m t he o pe r a t i o n a s di c t a t e d by t he i ns t r uc t i o n § W r i t e t he r e s ul t ( i f ne c e s s a r y ) § G o t o t he ne x t i ns t r uc t i o n C a r ne gi e M e l l on 6 W h a t a r e t h e B a s i c C o m p o n e n t s o f M I P S ? ¢ The ma i n pi e c e s § M e m o r y t o s t o r e pr o g r a m § R e g i s t e r s t o a c c e s s da t a f a s t § D a t a m e m o r y t o s t o r e m o r e da t a § A n A L U t o pe r f o r m t he c o r e f unc t i o n C a r ne gi e M e l l on 7 W h a t a r e t h e B a s i c C o m p o n e n t s o f M I P S ? ¢ The ma i n pi e c e s § M e m o r y t o s t o r e pr o g r a m § R e g i s t e r s t o a c c e s s da t a f a s t § D a t a m e m o r y t o s t o r e m o r e da t a § A n A L U t o pe r f o r m t he c o r e f unc t i o n ¢ S o m e a u x i l i a r y p i e c e s § A pr o g r a m c o unt e r t o t e l l w he r e t o f i nd ne x t i ns t r uc t i o n § S o m e l o g i c t o de c o de i ns t r uc t i o ns § A w a y t o m a ni pul a t e t he pr o g r a m c o unt e r f o r br a nc he s C a r ne gi e M e l l on 8 W h a t a r e t h e B a s i c C o m p o n e n t s o f M I P S ? ¢ The ma i n pi e c e s § M e m o r y t o s t o r e pr o g r a m § R e g i s t e r s t o a c c e s s da t a f a s t § D a t a m e m o r y t o s t o r e m o r e da t a § A n A L U t o pe r f o r m t he c o r e f unc t i o n ¢ S o m e a u x i l i a r y p i e c e s § A pr o g r a m c o unt e r t o t e l l w he r e t o f i nd ne x t i ns t r uc t i o n § S o m e l o g i c t o de c o de i ns t r uc t i o ns § A w a y t o m a ni pul a t e t he pr o g r a m c o unt e r f o r br a nc he s ¢ To d a y we wi l l s e e h o w i t a l l co m e s t o g e t h e r C a r ne gi e M e l l on 9 RT L D e s i g n Re vi s i t e d ¢ R e gi s t e r s s t o r e t h e c u r r e n t s t a t e ¢ C o m b i n a t i o n a l l o gi c d e t e r m i n e s n e x t s t a t e § D a t a m o v e s f r o m o ne r e g i s t e r t o a no t he r ( da t a pa t h) § C o nt r o l s i g na l s m o v e da t a t hr o ug h t he da t a pa t h § C o nt r o l s i g na l s de pe nd o n s t a t e a nd i nput ¢ Cl o c k m o v es u s f r o m sta te to a n o th er C a r ne gi e M e l l on 10 Let u s S ta r t w ith B u ild in g th e P r oc essor ¢ P r o gr a m i s s t o r e d i n a (r e ad - o n l y) m e m o r y a s 3 2 - b i t b i n a r y v a l u e s . ¢ M e m o r y a d d r e s s e s a r e a l s o 32 - b i t w i d e , a l l o w i n g ( i n t h e o r y) 2 32 = 4 G i ga b yt e s o f a d d r e s s e d m e m o r y. ¢ The a c t ua l a ddr e s s i s s t o r e d i n a r e gi s t e r c a l l e d P C . addi $t0, $s3, -12 Machine CodeAssembly Code lw $t2, 32($0) add $s0, $s1, $s2 sub $t0, $t3, $t5 0x8C0A0020 0x02328020 0x2268FFF4 0x016D4022 Address Instructions 0040000C 016 D40 22 226 8FFF4 023 280 20 8C0 A00 20 00400008 00400004 00400000 Stored Program Main Memory PC C a r ne gi e M e l l on 11 Wh a t to d o w ith th e P r og r a m C ou n ter ? reg [31:0] PC_p , PC_n ; // Present and next state of PC // […] assign PC_n <= PC_p + 4; // Increment by 4; always @ ( posedge clk , negedge rst ) begin if ( rst == ‘0’) PC_p <= 32’h00400000; // default else PC_p <= PC_n ; // when clk end ¢ T h e P C n e e d s t o b e i n c r e m e n t e d b y 4 d u r i n g e a c h c yc l e ( f o r t h e t i m e b e i n g) . ¢ In it ia l P C v a lu e ( a f t e r r e s e t ) is 0x00400000 C a r ne gi e M e l l on 12 We h a v e a n In str u c tion Now Wh a t ? ¢ T h e r e a r e d i f f e r e n t t yp e s o f i n s t r u c t i o n s § R t y p e ( t hr e e r e g i s t e r s ) § I t y p e ( t he o ne w i t h i m m e di a t e v a l ue s ) § J t y p e ( f o r c ha ng i ng t he f l o w ) ¢ F i r s t o n l y a s u b s e t o f M I P S i n s t r u c t i o n s : § R t y pe i ns t r uc t i o ns : and , or , add , sub , slt § M e m o r y i ns t r uc t i o ns : lw , sw § B r a nc h i ns t r uc t i o ns : beq ¢ La t e r w e w ill a d d addi an d j C a r ne gi e M e l l on 13 R - Ty pe M I P S i ns t r uc t i o ns ¢ R e gi s t e r - t yp e : 3 r e gi s t e r o p e r a n d s : § rs , rt : s o ur c e r e g i s t e r s § rd : de s t i na t i o n r e g i s t e r ¢ Ot h e r f i e l d s : § op : t he o pe r a t i o n c o de o r o pc o de (0 f o r R - t y pe i ns t r uc t i o ns ) § fu n c t : t he f unc t i o n t o g e t he r , t he o pc o de a nd f unc t i o n t e l l t he c o m put e r w ha t o pe r a t i o n t o pe r f o r m § sh a m t : t he s hi f t a m o unt f o r s hi f t i ns t r uc t i o ns , o t he r w i s e i t ’s 0 op rs rt rd shamt funct 6 bits 5 bits 5 bits 5 bits 5 bits 6 bits R-Type C a r ne gi e M e l l on 14 R - Ty pe E x a m pl e s add $s0, $s1, $s2 sub $t0, $t3, $t5 Assembly Code 0 17 18 16 0 32 Field Values 0 11 13 8 0 34 op rs rt rd shamt funct 6 bits 5 bits 5 bits 5 bits5 bits 6 bits 000000 10001 10010 10000 00000 100000 op rs rt rd shamt funct 000000 01011 01101 01000 00000 100010 Machine Code 6 bits 5 bits 5 bits 5 bits5 bits 6 bits (0x02328020) (0x016D4022) No t e t he o r de r o f r e g i s t e r s i n t he a s s e m bl y c o de : add rd , rs , rt C a r ne gi e M e l l on 15 We Need a R eg ister F ile ¢ S t o r e 3 2 r e gi s t e r s , e a c h 3 2 - bi t § 2 5 = = 3 2 , w e ne e d 5 bi t s t o a ddr e s s e a c h ¢ E v e r y R - t yp e i n s t r u c t i o n u s e s 3 r e gi s t e r § T w o f o r r e a di ng ( R S , R T ) § O ne f o r w r i t i ng ( R D ) ¢ W e n e e d a s p e c i a l m e m o r y w i t h : § 2 r e a d po r t s ( a ddr e s s x 2 , da t a o ut x 2 ) § 1 w r i t e po r t ( a ddr e s s , da t a i n) C a r ne gi e M e l l on 16 Re g i s t e r Fi l e input [4:0] a_rs , a_rt , a_rd ; input [31:0] di_rd ; input we_rd ; output [31:0] do_rs , do_rt ; reg [31:0] R_arr [31:0]; // Array that stores regs // Circuit description assign do_rs = R_arr [ a_rs ]; // Read RS assign do_rt = R_arr [ a_rt ]; // Read RT always @ ( posedge clk ) if ( we_rd ) R_arr [ a_rd ] <= di_rd ; // write RD C a r ne gi e M e l l on 17 Re g i s t e r Fi l e input [4:0] a_rs , a_rt , a_rd ; input [31:0] di_rd ; input we_rd ; output [31:0] do_rs , do_rt ; reg [31:0] R_arr [31:0]; // Array that stores regs // Circuit description ; add the trick with $0 assign do_rs = ( a_rs != 5’b00000) ? // is address 0? R_arr [ a_rs ] : 0; // Read RS or 0 assign do_rt = ( a_rt != 5’b00000) ? // is address 0? R_arr [ a_rt ] : 0; // Read RT or 0 always @ ( posedge clk ) if ( we_rd ) R_arr [ a_rd ] <= di_rd ; // write RD C a r ne gi e M e l l on 18 AL U Do e s t he R e a l W o r k i n a P r o c e s s o r ALU N N N3 A B Y F F 2: 0 Fu n c t i o n 000 A & B 001 A | B 010 A + B 011 no t us e d 100 A & ~ B 101 A | ~ B 110 A - B 111 SL T C a r ne gi e M e l l on 19 Re vi e w : A L U +201 A B C out Y301 F 2 F 1:0 [N-1] S NN N N N NNN N 2ZeroExtend F 2: 0 Fu n c t i o n 000 A & B 001 A | B 010 A + B 011 no t us e d 100 A & ~ B 101 A | ~ B 110 A - B 111 SL T C a r ne gi e M e l l on 20 S o fa r s o g o o d ¢ We h a v e m o s t o f t h e c o m p o n e n t s f o r M I P S § W e s t i l l do no t ha v e da t a m e m o r y C a r ne gi e M e l l on 21 S o fa r s o g o o d ¢ We h a v e m o s t o f t h e c o m p o n e n t s f o r M I P S § W e s t i l l do no t ha v e da t a m e m o r y ¢ We c a n i m p l e m e n t a l l R - t yp e i n s t r u c t i o n s § A s s um i ng o ur A L U c a n ha ndl e a l l o f t he f unc t i o ns § A t t he m o m e nt w e do no t ha v e t he s hi f t e r § W e k no w w ha t t o do f o r m o r e f unc t i o ns . C a r ne gi e M e l l on 22 S o fa r s o g o o d ¢ We h a v e m o s t o f t h e c o m p o n e n t s f o r M I P S § W e s t i l l do no t ha v e da t a m e m o r y ¢ We c a n i m p l e m e n t a l l R - t yp e i n s t r u c t i o n s § A s s um i ng o ur A L U c a n ha ndl e a l l o f t he f unc t i o ns § A t t he m o m e nt w e do no t ha v e t he s hi f t e r § W e k no w w ha t t o do f o r m o r e f unc t i o ns . ¢ …b u t n o t m u c h el s e § No m e m o r y a cce ss § No i m m e d i a t e v a l u e s § No co n d i t i o n a l b r a n ch e s, n o a b so l u t e j u m p s C a r ne gi e M e l l on 23 Da t a M e m o r y input [15:0] addr ; // Only 16 bits in this example input [31:0] di; input we; output [31:0] do; reg [65535:0] M_arr [31:0]; // Array for Memory // Circuit description assign do = M_arr [ addr ]; // Read memory always @ ( posedge clk ) if (we) M_arr [ addr ] <= di; // write memory ¢ Wi l l b e u s e d t o s t o r e t h e b u l k o f d a t a C a r ne gi e M e l l on 24 Let u s R ea d (th en Wr ite) to Mem or y ¢ T h e m a i n m e m o r y c a n h a v e u p t o 2 32 b yt e s § I t ne e ds a n 3 2 - bi t a ddr e s s f o r t he e nt i r e m e m o r y . § I n pr a c t i c e m uc h s m a l l e r m e m o r i e s a r e us e d ¢ We n e e d t h e lw in s t ru ct ion t o re a d f rom m e m ory § I - t y pe i ns t r uc t i o n § W e ne e d t o c a l c ul a t e t he a ddr e s s f r o m a n i m m e di a t e v a l ue a nd a re g i s t e r. § M a y be w e c a n us e t he A L U t o a dd i m m e di a t e t o t he r e g i s t e r ? C a r ne gi e M e l l on 25 I - Ty pe ¢ Im m e d ia t e - t yp e : 3 o p e r a n d s : § rs , rt : r e g i s t e r o pe r a nds § im m : 16 - bi t t w o ’s c o m pl e m e nt i m m e di a t e ¢ Ot h e r f i e l d s : § op : t he o pc o de § S i m pl i c i t y f a v o r s r e g ul a r i t y : a l l i ns t r uc t i o ns ha v e o pc o de § O pe r a t i o n i s c o m pl e t e l y de t e r m i ne d by t he o pc o de op rs rt imm 6 bits 5 bits5 bits 16 bits I-Type C a r ne gi e M e l l on 26 D i ffe r e n c e s b e t w e e n R - ty p e a n d I - ty p e ¢ C h a n ge s t o R e gi s t e r f i l e § RS + si g n e x t e n d e d i m m e d i a t e i s t he a ddr e s s § R S i s a l w a y s r e a d. § F o r s o m e i ns t r uc t i o ns R T i s r e a d a s w e l l § I f o ne r e g i s t e r i s w r i t t e n i t i s R T , no t R D § T he w r i t e _ da t a _ i n c a n c o m e f r o m M e m o r y o r A L U § Not a l l I - t y pe i ns t r uc t i o ns w r i t e t o r e g i s t e r f i l e ¢ C h a n ge s t o A L U § U s e d t o c a l c ul a t e m e m o r y a ddr e s s , a dd f unc t i o n ne e de d dur i ng no n R - t y pe o pe r a t i o ns § R e s ul t i s a l s o us e d a s a ddr e s s f o r t he da t a m e m o r y § O ne i nput i s no l o ng e r R T , but t he i m m e di a t e v a l ue C a r ne gi e M e l l on 27 Now Wr itin g to Mem or y is S im ila r ¢ We n e e d t h e sw in s t ru ct ion t o w rit e t o m e m ory § I - t y pe i ns t r uc t i o n § A ddr e s s c a l c ul a t e d t he s a m e w a y § U nl i k e , pr e v i o us s t e p, t he r e i s no w r i t i ng ba c k t o r e g i s t e r . § B ut w e ne e d t o e na bl e t he w r i t e e na bl e o f t he m e m o r y C a r ne gi e M e l l on 28 Our MI P S Da t a p a t h ha s S e v e r a l Opt i o ns ¢ AL U i n p u t s § E i t he r R T o r I m m e di a t e ¢ W r i t e A d d r e s s o f R e gi s t e r F i l e § E i t he r R D o r R T ¢ W r i t e D a t a I n o f R e gi s t e r F i l e § E i t he r A L U o ut o r D a t a M e m o r y O ut ¢ W r i t e e n a b l e o f R e gi s t e r F i l e § Not a l wa y s a r e gi s t e r wr i t e ¢ Wr i t e e n a b l e o f M e m o r y § O nl y w he n w r i t i ng t o m e m o r y ( s w ) C a r ne gi e M e l l on 29 Our MI P S Da t a p a t h ha s S e v e r a l Opt i o ns ¢ AL U i n p u t s § E i t he r R T o r I m m e di a t e (M U X ) ¢ W r i t e A d d r e s s o f R e gi s t e r F i l e § E i t he r R D o r R T (M U X ) ¢ W r i t e D a t a I n o f R e gi s t e r F i l e § E i t he r A L U o ut o r D a t a M e m o r y O ut (M U X ) ¢ W r i t e e n a b l e o f R e gi s t e r F i l e § Not a l wa y s a r e gi s t e r wr i t e (M U X ) ¢ Wr i t e e n a b l e o f M e m o r y § O nl y w he n w r i t i ng t o m e m o r y ( sw ) (M U X ) Al l t h e s e o pt i o n s are o u r c o n t ro l s i gn al s C a r ne gi e M e l l on 30 Let u s D ev elop ou r C on tr ol T a b le In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Me m W r i t e Me m t o R e g AL U O p § Re g Wr i t e : Wr i t e e na bl e fo r t he re g i s t e r fi l e § Re g D st : Wr i t e to re g i s t e r RD or RT § Al u S r c : AL U i nput RT or i m m e di a t e § Me m W r i t e : Wr i t e E na bl e § Me m t o R e g : Re g i s t e r da t a i n fro m Me mo ry or AL U § AL U Op : W ha t o pe r a t i o n do e s A L U do C a r ne gi e M e l l on 31 Let u s D ev elop ou r C on tr ol T a b le In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Me m W r i t e Me m t o R e g AL U O p R - t y pe 000000 1 1 0 0 0 fu n c t § Re g Wr i t e : Wr i t e e na bl e fo r t he re g i s t e r fi l e § Re g D st : Wr i t e to re g i s t e r RD or RT § Al u S r c : AL U i nput RT or i m m e di a t e § Me m W r i t e : Wr i t e E na bl e § Me m t o R e g : Re g i s t e r da t a i n fro m Me mo ry or AL U § AL U Op : W ha t o pe r a t i o n do e s A L U do C a r ne gi e M e l l on 32 Let u s D ev elop ou r C on tr ol T a b le In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Me m W r i t e Me m t o R e g AL U O p R - t y pe 000000 1 1 0 0 0 fu n c t lw 100011 1 0 1 0 1 ad d § Re g Wr i t e : Wr i t e e na bl e fo r t he re g i s t e r fi l e § Re g D st : Wr i t e to re g i s t e r RD or RT § Al u S r c : AL U i nput RT or i m m e di a t e § Me m W r i t e : Wr i t e E na bl e § Me m t o R e g : Re g i s t e r da t a i n fro m Me mo ry or AL U § AL U Op : W ha t o pe r a t i o n do e s A L U do C a r ne gi e M e l l on 33 Let u s D ev elop ou r C on tr ol T a b le In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Me m W r i t e Me m t o R e g AL U O p R - t y pe 000000 1 1 0 0 0 fu n c t lw 100011 1 0 1 0 1 ad d sw 101011 0 X 1 1 X ad d § Re g Wr i t e : Wr i t e e na bl e fo r t he re g i s t e r fi l e § Re g D st : Wr i t e to re g i s t e r RD or RT § Al u S r c : AL U i nput RT or i m m e di a t e § Me m W r i t e : Wr i t e E na bl e § Me m t o R e g : Re g i s t e r da t a i n fro m Me mo ry or AL U § AL U Op : W ha t o pe r a t i o n do e s A L U do C a r ne gi e M e l l on 34 Now w e a r e m u c h b etter ¢ We h a v e a l m o s t a l l c o m p o n e n t s f o r M I P S ¢ W e a l r e a d y h a d ( n e a r l y) a l l R - t yp e i n s t r u c t i o n s § O ur A L U c a n i m pl e m e nt s o m e f unc t i o ns § W e k no w w ha t t o do f o r m o r e f unc t i o ns . ¢ No w w e c a n a l s o R e a d a n d W r i t e t o m e m o r y ¢ Co n d i ti o n a l B r a n c h es a r e sti l l m i ssi n g § U nt i l k no w , P C j us t i nc r e a s e s by 4 e v e r y t i m e . § W e ne e d t o s o m e ho w be a bl e t o i nf l ue nc e t hi s . C a r ne gi e M e l l on 35 B r a n c h i f e q u a l : B E Q ¢ Fro m A ppe ndi x B : O pc o de : 000100 If ([ rs ]==[ rt ]) PC= BTA BTA = B r a nc h T a r g e t A ddr e s s = PC +4 +( S i g nI m m <<2 ) C a r ne gi e M e l l on 36 B r a n c h i f e q u a l : B E Q ¢ Fro m A ppe ndi x B : O pc o de : 000100 If ([ rs ]==[ rt ]) PC= BTA BTA = B r a nc h T a r g e t A ddr e s s = PC +4 +( S i g nI m m <<2 ) ¢ We n e e d A L U f o r c o m p a r i s o n § S ubt r a c t R S – RT § W e ne e d a ‘z e r o ’ f l a g , i f R S e qua l s R T C a r ne gi e M e l l on 37 B r a n c h i f e q u a l : B E Q ¢ Fro m A ppe ndi x B : O pc o de : 000100 If ([ rs ]==[ rt ]) PC= BTA BTA = B r a nc h T a r g e t A ddr e s s = PC +4 +( S i g nI m m <<2 ) ¢ We n e e d A L U f o r c o m p a r i s o n § S ubt r a c t R S – RT § W e ne e d a ‘z e r o ’ f l a g , i f R S e qua l s R T ¢ We a l s o n e e d a Sec o n d Ad d er § T he i m m e di a t e v a l ue ha s t o be a dde d t o P C + 4 C a r ne gi e M e l l on 38 B r a n c h i f e q u a l : B E Q ¢ Fro m A ppe ndi x B : O pc o de : 000100 If ([ rs ]==[ rt ]) PC= BTA BTA = B r a nc h T a r g e t A ddr e s s = PC +4 +( S i g nI m m <<2 ) ¢ We n e e d A L U f o r c o m p a r i s o n § S ubt r a c t R S – RT § W e ne e d a ‘z e r o ’ f l a g , i f R S e qua l s R T ¢ We a l s o n e e d a Sec o n d Ad d er § T he i m m e di a t e v a l ue ha s t o be a dde d t o P C + 4 ¢ PC ha s no w t w o o pt io ns § E i t he r P C + 4 o r t he ne w B T A C a r ne gi e M e l l on 39 Mo r e C o nt r o l S i g na l s In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Br a n c h Me m W r i t e Me m t o R e g AL U O p R - type 000000 1 1 0 0 0 0 funct lw 100011 1 0 1 0 0 1 add sw 101011 0 X 1 0 1 X add beq 000100 0 X 0 1 0 X sub ¢ N e w C o n t r o l S i gn a l § Br a n c h : A r e w e j um pi ng o r no t ? C a r ne gi e M e l l on 40 We a r e a lm ost d on e ¢ We h a v e a l m o s t a l l c o m p o n e n t s f o r M I P S ¢ W e a l r e a d y h a d ( n e a r l y) a l l R - t yp e i n s t r u c t i o n s § O ur A L U c a n i m pl e m e nt s o m e f unc t i o ns § W e k no w w ha t t o do f o r m o r e f unc t i o ns . ¢ No w w e c a n a l s o R e a d a n d W r i t e t o m e m o r y ¢ We a l s o h a v e c o n d i t i o n a l b r a n c h e s ¢ Ab s ol u t e j u m p s a r e s t i l l m i s s i n g § J - t y pe i ns t r uc t i o ns § T he ne x t P C a ddr e s s i s di r e c t l y de t e r m i ne d C a r ne gi e M e l l on 41 Ma c hi ne La ng ua g e : J - Ty pe ¢ Ju m p - t yp e § 26 - bi t a ddr e s s o pe r a nd ( a ddr ) § U s e d f o r j um p i ns t r uc t i o ns ( j ) op addr 6 bits 26 bits J-Type 0000 0000 0100 0000 0000 0000 1010 0000JTA 26-bit addr (0x0100028) (0x004000A0) 0000 0000 0100 0000 0000 0000 1010 0000 0 1 0 0 0 2 8 000011 00 0001 0000 0000 0000 0010 1000 op addr Machine CodeField Values 3 0x0100028 6 bits 26 bits (0x0C100028) op imm 6 bits 26 bits C a r ne gi e M e l l on 42 Ju m p : J ¢ Fro m A ppe ndi x B : O pc o de : 000010 PC= JTA JTA = J um p T a r g e t A ddr e s s = {(PC+4)[31:28], addr,2’b0} ¢ No n e e d f o r A L U § A s s e m bl e t he J T A f r o m P C a nd 2 6 - bi t i m m e di a t e ¢ N o n e e d f o r m e m o r y, r e gi s t e r f i l e ¢ O n e m o r e o p t i o n ( m u x + c o n t r o l s i gn a l ) f o r P C C a r ne gi e M e l l on 43 Ev e n M o r e C o n t r o l S i g n a l s In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Br a n c h Me m W r i t e Me m t o R e g AL U O p Ju m p R - type 000000 1 1 0 0 0 0 funct 0 lw 100011 1 0 1 0 0 1 add 0 sw 101011 0 X 1 0 1 X add 0 beq 000100 0 X 0 1 0 X sub 0 j 000010 0 X X X 0 X X 1 ¢ N e w C o n t r o l S i gn a l § Ju m p : D i r e c t j um p y e s o r no C a r ne gi e M e l l on 44 Now w e a r e A lm ost D on e ¢ We h a v e a l l m a jo r p a r t s § W e c a n i m pl e m e nt , R , I , J t y pe i ns t r uc t i o ns § W e c a n c a l c ul a t e , br a nc h, a nd j um p § W e w o ul d be a bl e t o r un m o s t pr o g r a m s C a r ne gi e M e l l on 45 Now w e a r e A lm ost D on e ¢ We h a v e a l l m a jo r p a r t s § W e c a n i m pl e m e nt , R , I , J t y pe i ns t r uc t i o ns § W e c a n c a l c ul a t e , br a nc h, a nd j um p § W e w o ul d be a bl e t o r un m o s t pr o g r a m s ¢ St i l l w e c an i m p r o ve : § A L U c a n be i m pr o v e d f o r m o r e ‘ f unc t ’ § W e do no t ha v e a s hi f t e r . § O r a m ul t i pl i e r . § Mo re I - t y pe f unc t i o ns ( o nl y lw a nd sw s uppo r t e d) § Mo re J - t y pe f unc t i o ns ( jal , jr ) C a r ne gi e M e l l on 46 Now th e or ig in a l slid es on c e a g a in ¢ T h e f o l l o w i n g s l i d e s w i l l r e p e a t w h a t w e j u s t d i d ¢ Co n si sten t w i th th e tex t b o o k C a r ne gi e M e l l on 47 MI P S S t a t e E l e m e nt s CLK A RD Instruction Memory A1 A3 WD3 RD2 RD1WE3 A2 CLK Register File A RD Data Memory WD WEPCPC' CLK 32 32 32 32 32 32 32 32 32 32 5 5 5 § Pr o g r a m c o u n t e r : 32 - bi t r e g i s t e r § In s t r u c t i o n me mo r y : T a k e s i nput 3 2 - bi t a ddr e s s A a nd r e a ds t he 3 2 - bi t da t a ( i . e . , i ns t r uc t i o n) f r o m t ha t a ddr e s s t o t he r e a d da t a o ut put R D . § Re g i st e r f i l e : T he 3 2 - e l e m e nt , 3 2 - bi t r e g i s t e r f i l e ha s 2 r e a d po r t s a nd 1 w r i t e po r t § Da t a m e m o r y : H a s a s i ng l e r e a d/ w r i t e po r t . I f t he w r i t e e na bl e , W E , i s 1 , i t w r i t e s da t a W D i nt o a ddr e s s A o n t he r i s i ng e dg e o f t he c l o c k . I f t he w r i t e e na bl e i s 0 , i t r e a ds a ddr e s s A o nt o R D . C a r ne gi e M e l l on 48 Si n g l e - Cy c l e Da t a p a t h : lw fe t c h ¢ ST E P 1: Fe t c h i ns t ruc t i o n CLK A RD Instruction Memory A1 A3 WD3 RD2 RD1WE3 A2 CLK Register File A RD Data Memory WD WEPCPC' Instr CLK lw $s3, 1($0) # read memory word 1 into $s3 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 49 Si n g l e - Cy c l e Da t a p a t h : lw re g i s t e r re ad ¢ ST E P 2: R e a d s o u r c e o p e r a n d s f r o m r e gi s t e r f i l e Instr CLK A RD Instruction Memory A1 A3 WD3 RD2 RD1WE3 A2 CLK Register File A RD Data Memory WD WE PCPC' 25:21 CLK lw $s3, 1( $0 ) # read memory word 1 into $s3 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 50 Si n g l e - Cy c l e Da t a p a t h : lw im m ed ia te ¢ ST E P 3: S i gn - ex ten d th e i m m ed i a te SignImm CLK A RD Instruction Memory A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File A RD Data Memory WD WE PCPC' Instr 25:21 15:0 CLK lw $s3, 1 ($0) # read memory word 1 into $s3 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 51 Si n g l e - Cy c l e Da t a p a t h : lw ad d re s s ¢ ST E P 4: C o m p u t e t h e m e m o r y a d d r e s s SignImm CLK A RD Instruction Memory A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File A RD Data Memory WD WE PCPC' Instr 25:21 15:0 SrcB ALUResult SrcA Zero CLK ALUControl 2:0ALU 010 lw $s3, 1($0) # read memory word 1 into $s3 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 52 Si n g l e - Cy c l e Da t a p a t h : lw me mo ry re ad ¢ ST E P 5: R e a d f r o m m e m o r y a n d w r i t e b a c k t o r e gi s t e r f i l e A1 A3 WD3 RD2 RD1WE3 A2 SignImm CLK A RD Instruction Memory CLK Sign Extend Register File A RD Data Memory WD WE PCPC' Instr 25:21 15:0 SrcB 20:16 ALUResult ReadData SrcA RegWrite Zero CLK ALUControl 2:0ALU 0101 lw $s3 , 1($0) # read memory word 1 into $s3 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 53 Si n g l e - Cy c l e Da t a p a t h : lw PC i n c re me n t ¢ ST E P 6: De t e r m i n e a d d r e s s o f n e x t i n s t r u c t i o n SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File A RD Data Memory WD WE PCPC' Instr 25:21 15:0 SrcB 20:16 ALUResult ReadData SrcA PCPlus4 Result RegWrite Zero CLK ALUControl 2:0ALU 0101 lw $s3, 1($0) # read memory word 1 into $s3 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 54 Si n g l e - Cy c l e Da t a p a t h : sw ¢ Wr i t e d a t a i n rt to m em o r y SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File A RD Data Memory WD WE PCPC' Instr 25:21 20:16 15:0 SrcB 20:16 ALUResult ReadData WriteData SrcA PCPlus4 Result MemWriteRegWrite Zero CLK ALUControl 2:0ALU 10100 sw $t7, 44($0) # write t7 into memory address 44 op rs rt imm 6 bits 5 bits 5 bits 16 bits I-Type C a r ne gi e M e l l on 55 Si n g l e - Cy c l e Da t a p a t h : R - ty p e In str u c tion s ¢ Re a d f ro m rs an d rt , w r i te AL UR e s u l t t o r e gi s t e r f i l e SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PCPC' Instr 25:21 20:16 15:0 SrcB 20:16 15:11 ALUResult ReadData WriteData SrcA PCPlus4 WriteReg 4:0 Result RegDst MemWrite MemtoRegALUSrcRegWrite Zero CLK ALUControl 2:0ALU 0varies1 001 add t, b, c # t = b + c op rs rt rd shamt funct 6 bits 5 bits 5 bits 5 bits 5 bits 6 bits R-Type C a r ne gi e M e l l on 56 Si n g l e - Cy c l e Da t a p a t h : beq ¢ De t e r m i n e wh e t h e r v a l u e s i n rs an d rt ar e e q u al C a l c u l a t e B T A = ( s i gn - ex ten d ed i m m ed i a te << 2 ) + ( P C+4 ) SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr 25:21 20:16 15:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result RegDst Branch MemWrite MemtoRegALUSrcRegWrite Zero PCSrc CLK ALUControl 2:0ALU 01100 x0x 1 beq $s0, $s1, target # branch is taken C a r ne gi e M e l l on 57 Co m p l e t e Si n g l e - Cy c l e Pro c e s s o r SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr 25:21 20:16 15:0 5:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result 31:26 RegDst Branch MemWrite MemtoReg ALUSrc RegWrite Op Funct Control Unit Zero PCSrc CLK ALUControl 2:0ALU C a r ne gi e M e l l on 58 Co n t ro l U n i t RegDst Branch MemWrite MemtoReg ALUSrcOpcode 5:0 Control Unit ALUControl 2:0 Funct 5:0 Main Decoder ALUOp 1:0 ALU Decoder RegWrite C a r ne gi e M e l l on 59 AL U Do e s t he R e a l W o r k i n a P r o c e s s o r ALU N N N3 A B Y F F 2: 0 Fu n c t i o n 000 A & B 001 A | B 010 A + B 011 no t us e d 100 A & ~ B 101 A | ~ B 110 A - B 111 SL T C a r ne gi e M e l l on 60 Re vi e w : A L U +201 A B C out Y301 F 2 F 1:0 [N-1] S NN N N N NNN N 2ZeroExtend F 2: 0 Fu n c t i o n 000 A & B 001 A | B 010 A + B 011 no t us e d 100 A & ~ B 101 A | ~ B 110 A - B 111 SL T C a r ne gi e M e l l on 61 Co n t ro l U n i t : A L U D e c o d e r AL U O p 1: 0 Me a n i n g 00 A dd 01 S ub t r a c t 10 Lo o k a t F unc t 11 Not U s e d AL U O p 1: 0 Fu n c t AL U C o n t r o l 2: 0 00 X 0 1 0 ( A dd) X1 X 1 1 0 ( S ub t r a c t ) 1X 100000 ( add ) 0 1 0 ( A dd) 1X 100010 ( sub ) 1 1 0 ( S ub t r a c t ) 1X 100100 ( and ) 0 0 0 ( A nd) 1X 100101 ( or ) 001 ( O r ) 1X 101010 ( slt ) 111 ( S L T ) RegDst Branch MemWrite MemtoReg ALUSrcOpcode 5:0 Control Unit ALUControl 2:0 Funct 5:0 Main Decoder ALUOp 1:0 ALU Decoder RegWrite C a r ne gi e M e l l on 62 Co n t ro l U n i t : M ai n D e c o d e r In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Br a n c h Me m W r i t e Me m t o R e g AL U O p 1: 0 R - type 000000 1 1 0 0 0 0 10 lw 100011 1 0 1 0 0 1 00 sw 101011 0 X 1 0 1 X 00 beq 000100 0 X 0 1 0 X 01 S ignIm m CLK A RD Instructio n Mem o ry+ 4 A1 A3 WD 3 RD2 RD1 WE 3 A2 CLK S ig n E xtend R eg is ter F ile 0 1 0 1 A RD Data Mem o ry WD WE 0 1 PC0 1 PC ' In str 25:21 20:16 15:0 5:0 S rcB 20:16 15:11 <<2+ A LU R esult R eadD ata W rite D ata S rcA P C P lus4 P C B ranch W rite R eg 4:0 R esult 31:26 R egD st B ranch M em W rite M em to R eg ALU Src R egW rite Op F unct Co ntro l U nit Zero PC Src CLK A LU C ontrol 2:0ALU C a r ne gi e M e l l on 63 Si n g l e - Cy c l e Da t a p a t h Ex a m p l e : or SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr 25:21 20:16 15:0 5:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result 31:26 RegDst Branch MemWrite MemtoReg ALUSrc RegWrite Op Funct Control Unit Zero PCSrc CLK ALUControl 2:0ALU 001 0 0 10 0 1 0 C a r ne gi e M e l l on 64 Ex t e n d e d F u n c t i o n a l i t y: addi SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr 25:21 20:16 15:0 5:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result 31:26 RegDst Branch MemWrite MemtoReg ALUSrc RegWrite Op Funct Control Unit Zero PCSrc CLK ALUControl 2:0ALU ¢ No c h a n ge to da t a pa t h C a r ne gi e M e l l on 65 Co n t ro l U n i t : addi In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Br a n c h Me m W r i t e Me m t o R e g AL U O p 1: 0 R - type 000000 1 1 0 0 0 0 10 lw 100011 1 0 1 0 0 1 00 sw 101011 0 X 1 0 1 X 00 beq 000100 0 X 0 1 0 X 01 addi 001000 1 0 1 0 0 0 00 C a r ne gi e M e l l on 66 Ex t e n d e d F u n c t i o n a l i t y: j SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC 0 1 PC' Instr 25:21 20:16 15:0 5:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result 31:26 RegDst Branch MemWrite MemtoReg ALUSrc RegWrite Op Funct Control Unit Zero PCSrc CLK ALUControl 2:0ALU 0 1 25:0 <<2 27:0 31:28 PCJump Jump C a r ne gi e M e l l on 67 Co n t ro l U n i t : M ai n D e c o d e r In s t r u c t ion Op 5: 0 Re g W r i te Re g D s t Al u S r c Br a n c h Me m W r i t e Me m t o R e g AL U O p 1: 0 Ju m p R - type 000000 1 1 0 0 0 0 10 0 lw 100011 1 0 1 0 0 1 00 0 sw 101011 0 X 1 0 1 X 00 0 beq 000100 0 X 0 1 0 X 01 0 j 000100 0 X X X 0 X XX 1 C a r ne gi e M e l l on 68 P r o c e s s o r P e r fo r m a n c e ¢ H o w f a s t i s m y p r o gr a m ? § E v e r y pr o g r a m c o ns i s t s o f a s e r i e s o f i ns t r uc t i o ns § E a c h i ns t r uc t i o n ne e ds t o be e x e c ut e d. C a r ne gi e M e l l on 69 P r o c e s s o r P e r fo r m a n c e ¢ H o w f a s t i s m y p r o gr a m ? § E v e r y pr o g r a m c o ns i s t s o f a s e r i e s o f i ns t r uc t i o ns § E a c h i ns t r uc t i o n ne e ds t o be e x e c ut e d. ¢ S o h o w f a s t a r e m y i n s t r u c t i o n s ? § I ns t r uc t i o ns a r e r e a l i z e d o n t he ha r dw a r e § T he y c a n t a k e o ne o r m o r e c l o c k c y c l e s t o c o m pl e t e § Cy c l e s p e r I n st r u c t i o n = CP I C a r ne gi e M e l l on 70 P r o c e s s o r P e r fo r m a n c e ¢ H o w f a s t i s m y p r o gr a m ? § E v e r y pr o g r a m c o ns i s t s o f a s e r i e s o f i ns t r uc t i o ns § E a c h i ns t r uc t i o n ne e ds t o be e x e c ut e d. ¢ S o h o w f a s t a r e m y i n s t r u c t i o n s ? § I ns t r uc t i o ns a r e r e a l i z e d o n t he ha r dw a r e § T he y c a n t a k e o ne o r m o r e c l o c k c y c l e s t o c o m pl e t e § Cy c l e s p e r I n st r u c t i o n = CP I ¢ H o w m u c h t i m e i s o n e c l o c k c yc l e ? § T he c r i t i c a l pa t h de t e r m i ne s ho w m uc h t i m e o ne c y c l e r e qui r e s = cl o ck p e r i o d . § 1 / c l o c k pe r i o d = cl o ck f r e q u e n cy = ho w m a ny c y c l e s c a n be do ne e a c h s e c o nd. C a r ne gi e M e l l on 71 P r o c e s s o r P e r fo r m a n c e ¢ N o w a s a ge n e r a l f o r m u l a § O ur pr o g r a m c o ns i s t s o f e x e c ut i ng N i ns t r uc t i o ns . § O ur pr o c e s s o r ne e ds CP I c y c l e s f o r e a c h i ns t r uc t i o n. § T he m a x i m um c l o c k s pe e d o f t he pr o c e s s o r i s f , a nd t he c l o c k pe r i o d i s t he r e f o r e T =1 / f C a r ne gi e M e l l on 72 P r o c e s s o r P e r fo r m a n c e ¢ N o w a s a ge n e r a l f o r m u l a § O ur pr o g r a m c o ns i s t s o f e x e c ut i ng N i ns t r uc t i o ns . § O ur pr o c e s s o r ne e ds CP I c y c l e s f o r e a c h i ns t r uc t i o n. § T he m a x i m um c l o c k s pe e d o f t he pr o c e s s o r i s f , a nd t he c l o c k pe r i o d i s t he r e f o r e T =1 / f ¢ O u r p r o gr a m w i l l e x e c u t e i n N x C P I x ( 1/ f ) = N x C P I x T s eco n d s C a r ne gi e M e l l on 73 Ho w c a n I Ma k e t he P r o g r a m R un F a s t er ? N x C P I x ( 1/ f ) C a r ne gi e M e l l on 74 Ho w c a n I Ma k e t he P r o g r a m R un F a s t er ? N x C P I x ( 1/ f ) ¢ Re duc e t he numbe r o f i ns t ruc t i o ns § M a k e i ns t r uc t i o ns t ha t ‘do ’ m o r e ( C I S C ) § U s e be t t e r c o m pi l e r s C a r ne gi e M e l l on 75 Ho w c a n I Ma k e t he P r o g r a m R un F a s t er ? N x C P I x ( 1/ f ) ¢ Re duc e t he numbe r o f i ns t ruc t i o ns § M a k e i ns t r uc t i o ns t ha t ‘do ’ m o r e ( C I S C ) § U s e be t t e r c o m pi l e r s ¢ U s e l e s s c yc l e s t o p e r f o r m t h e i n s t r u c t i o n § S i m pl e r i ns t r uc t i o ns ( R I S C ) § U s e m ul t i pl e uni t s / A L U s / c o r e s i n pa r a l l e l C a r ne gi e M e l l on 76 Ho w c a n I Ma k e t he P r o g r a m R un F a s t er ? N x C P I x ( 1/ f ) ¢ Re duc e t he numbe r o f i ns t ruc t i o ns § M a k e i ns t r uc t i o ns t ha t ‘do ’ m o r e ( C I S C ) § U s e be t t e r c o m pi l e r s ¢ U s e l e s s c yc l e s t o p e r f o r m t h e i n s t r u c t i o n § S i m pl e r i ns t r uc t i o ns ( R I S C ) § U s e m ul t i pl e uni t s / A L U s / c o r e s i n pa r a l l e l ¢ In cr e a s e t h e clock f r e q u e n cy § F i nd a ‘ne w e r ’ t e c hno l o g y t o m a nuf a c t ur e § R e de s i g n t i m e c r i t i c a l c o m po ne nt s § A do pt pi pe l i ni ng C a r ne gi e M e l l on 77 Si n g l e - C y c l e P e r fo r m a n c e ¢ T C i s l i m i t e d b y t h e c r i t i c a l p a t h ( lw ) SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr 25:21 20:16 15:0 5:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result 31:26 RegDst Branch MemWrite MemtoReg ALUSrc RegWrite Op Funct Control Unit Zero PCSrc CLK ALUControl 2:0ALU 1 010 0 1 0 1 0 0 C a r ne gi e M e l l on 78 Si n g l e - C y c l e P e r fo r m a n c e ¢ S i n gl e - c yc l e cr it ica l pa t h : § T c = t pc q_ P C + t me m + max ( t RF r e a d , t se x t + t mu x ) + t AL U + t me m + t mu x + t RF s e t u p ¢ In mo s t im p le m e n t a t ion s , lim it in g pa t hs ar e : § me mo ry , A L U , re g i s t e r fi l e . § T c = t pc q_ P C + 2 t me m + t RF r e a d + t mu x + t AL U + t RF s e t u p SignImm CLK A RD Instruction Memory+ 4 A1 A3 WD3 RD2 RD1 WE3 A2 CLK Sign Extend Register File 0 1 0 1 A RD Data Memory WD WE 0 1 PC0 1 PC' Instr25:21 20:16 15:0 5:0 SrcB 20:16 15:11 <<2+ ALUResult ReadData WriteData SrcA PCPlus4 PCBranch WriteReg 4:0 Result 31:26 RegDst Branch MemWrite MemtoReg ALUSrc RegWrite Op Funct Control Unit Zero PCSrc CLK ALUControl 2:0ALU 1 010 0 1 0 1 0 0 C a r ne gi e M e l l on 79 Si n g l e - C y c l e P e r fo r m a n c e E x a m p l e El e me n t Pa r a m e t e r De l a y ( ps ) Re g i s t e r c l o c k - to - Q t pc q_ P C 30 R e g i s t e r s e t up t se t u p 20 M ul t i pl e x e r t mu x 25 AL U t AL U 200 Me mo r y r e a d t me m 250 Re g i s t e r f i l e r e a d t RF r e a d 150 R e g i s t e r f i l e s e t up t RF s e t u p 20 T c = C a r ne gi e M e l l on 80 Si n g l e - C y c l e P e r fo r m a n c e E x a m p l e El e me n t Pa r a m e t e r De l a y ( ps ) Re g i s t e r c l o c k - to - Q t pc q_ P C 30 R e g i s t e r s e t up t se t u p 20 M ul t i pl e x e r t mu x 25 AL U t AL U 200 Me mo r y r e a d t me m 250 Re g i s t e r f i l e r e a d t RF r e a d 150 R e g i s t e r f i l e s e t up t RF s e t u p 20 T c = t pc q_P C + 2 t me m + t RF re a d + t mu x + t AL U + t RF se t u p = [ 3 0 + 2 ( 2 5 0 ) + 1 5 0 + 2 5 + 2 0 0 + 2 0 ] ps = 9 2 5 ps C a r ne gi e M e l l on 81 Si n g l e - C y c l e P e r fo r m a n c e E x a m p l e ¢ Ex a m p l e : F o r a pr o g r a m w i t h 1 0 0 bi l l i o n i ns t r uc t i o ns e x e c ut i ng o n a s i ng l e - cy cle M I P S pr o c e s s o r : C a r ne gi e M e l l on 82 Si n g l e - C y c l e P e r fo r m a n c e E x a m p l e ¢ Ex a m p l e : F o r a pr o g r a m w i t h 1 0 0 bi l l i o n i ns t r uc t i o ns e x e c ut i ng o n a s i ng l e - cy cle M I P S pr o c e s s o r : Ex e c u ti o n T i m e = # i n s t ru c t i o n s x C P I x T C = ( 1 0 0 × 10 9 )(1 )(9 2 5 × 10 - 12 s) = 9 2 . 5 s ec o n d s C a r ne gi e M e l l on 83 Wh a t D id We Lea r n ? ¢ Ho w t o de t e rmine t he pe rf o rma nc e o f pro c e s s o rs § CP I § C l o c k s pe e d § N um be r o f i ns t r uc t i o ns ¢ S i n gl e - c yc l e M I P S a r c h i t e c t u r e § L e a r ne d i ndi v i dua l c o m po ne nt s § AL U § Da t a M e m o r y § I ns t r uc t i o n M e m o r y § Re g i s t e r F i l e § D i s c us s e d i m pl e m e nt a t i o n o f s o m e i ns t r uc t i o ns § E x pl a i ne d t he c o nt r o l f l o w","libVersion":"0.3.1","langs":""}