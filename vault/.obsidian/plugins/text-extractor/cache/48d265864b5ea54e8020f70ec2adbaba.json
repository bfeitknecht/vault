{"path":"sem1/DMath/PV/leon/DMath-leon-w01.pdf","text":"Diskrete Mathematik ¨Ubungsstunde Zusammenfassung Leon Kolmani´c 25.09.2023 1 Organisation 1.1 Kontaktm¨oglichkeiten und Links Ihr k¨onnt mich unter den folgenden Kontaktm¨oglichkeiten jederzeit erreichen falls ihr Fragen zur Organisation oder zum Stoff habt. • Mail Adresse: leon.kolmanic@inf.ethz.ch • Mein Discord Nutzername ist lendand, ihr findet mich auf dem D-INFK Discord Server: https://discord.gg/eth-dinfk • Website mit zus¨atzlichen Materialien und Zusammenfassungen: https://leonkolmanic.com/teaching Hier findet ihr die beiden wichtigen Websites zum Kurs, die alle relevanten Informationen, das Skript und die ¨Ubungsaufgaben enthalten. Das sollten eure erste Anlaufstellen f¨ur organisatorische Fragen und Lernmaterialien sein. • Kurswebsite: https://crypto.ethz.ch/teaching/DM23/ • ¨Ubungsbl¨atter und Abgabe: https://dm.crypto.ethz.ch 1.2 ¨Ubungsaufgaben Ablauf • ¨Ubungsbl¨atter erscheinen jede Woche am Freitagmorgen. • Jedes Blatt enth¨alt eine Bonusaufgabe • Abgabe der Bonusaufgabe ist jeweils in der darauffolgenden Woche am Donnerstag um 23:59 Uhr auf https://dm.crypto.ethz.ch • Bei technischen Problemen bei der Abgabe rechtzeitig eine Mail mit der Datei an mich schicken, damit ihr trotzdem Punkte bekommt • Bonusnotenberechnung findet ihr auf der Kurswebsite 1 1.3 ¨Ubungsstunden Ablauf • Besprechung der Bonusaufgabe letzter Woche • Stoffwiederholung und Fragen kl¨aren • zusammen Aufgaben ¨uben • Vorbereitung auf die n¨achste Bonusaufgabe und Tipps Wir werden in der ¨Ubungsstunde Aufgaben ¨ahnlich zu denen auf den ¨Ubungsbl¨attern l¨osen, nicht die ¨Ubungsaufgaben selbst. Diese sind zu eurer eigenen Wiederhol- ung und Vertiefung da. 1.4 Tipps f¨ur die ETH und DiskMat Hier noch einige Tipps, die mir pers¨onlich sehr geholfen haben das Semester zu ¨uberstehen. • Besucht regelm¨assig die ¨Ubungsstunden und Vorlesungen, das gibt euch Struktur und Austausch mit Kommilitonen ist wichtig • Lest oder ¨uberfliegt vor jeder Vorlesung die relevanten Abschnitte im Skript • Investiert viel Zeit in die ¨Ubungsaufgaben, versucht so viele wie m¨oglich zu l¨osen • Bombardiert mich ruhig mit Fragen in den ¨Ubungsstunden und ¨uber meine Kontaktm¨oglichkeiten:) • Plant genug Freizeit ein, geht regelm¨assig an die frische Luft und ¨uberarbeitet euch nicht! 2 2 Wiederholung Stoff 2.1 Einleitung und Motivation (Kapitel 1 Skript) • Diskrete Mathematik ist zentral f¨ur die Informatik und hat wichtige An- wendungen in z.B. Kryptographie • Ihr lernt in der Vorlesung Beweise schreiben und verstehen, das werdet ihr in allen anderen F¨achern im 1. Semester brauchen und in den meisten F¨achern sp¨ater im Studium 2.2 Einf¨uhrung in die Aussagenlogik und mathematisches Denken 2.2.1 Aussagen und Beweise (Kapitel 2.1 und 2.2 Skript) Folgende zwei Begriffe sind von zentraler Bedeutung f¨ur die Vorlesung: • wir nennen eine Aussage mathematische Aussage, wenn sie so pr¨azise und objektiv formuliert ist, dass sie nach den Gesetzen der Mathematik ein- deutig wahr oder falsch ist. • Ein Beweis ist ein mathematisches Argument, warum eine Aussage gilt, das l¨uckenlos, korrekt und pr¨azise ist. Im Verlauf der Vorlesung werdet ihr mehr Intuition f¨ur diesen abstrakten Begriff erhalten. Eine wichtige Art von Aussage ist die Implikation, die wir so notieren: S =⇒ T . Sie ist wahr falls gilt: Falls S wahr ist, ist T wahr. Sonst ist sie falsch. Insbesondere ist eine Implikation wahr wenn S falsch ist und dann spielt es keine Rolle was T ist. 2.2.2 Einf¨uhrung in die Aussagenlogik (Kapitel 2.3 Skript) In der Aussagenlogik untersuchen wir Formeln, die aus logischen Operatoren, Klammern und aussagenlogischen Symbolen (Variablen, wie A, B, C, ...) beste- hen. Es gibt nur zwei Werte, die die aussagenlogischen Symbole annehmen k¨onnen, wahr (1) und falsch (0). Jeder Operator ist durch eine Wahrheitstabelle definiert, somit kann man zu jeder Formel eine Wahrheitstabelle bestimmen. Das ist wichtig f¨ur die ¨Ubungen und die Pr¨ufung: Wenn in einer Aufgabe ein Beweis verlangt ist, dass zwei Formeln ¨aquivalent sind oder dass eine Formel lo- gische Konsequenz einer anderen ist, reicht es aus, die Wahrheitstabellen beider Formeln zu berechnen und ¨uber diese zu argumentieren. 3 ¨Ubungausaufgaben L¨osung ¨Ubungsaufgabe 1.1: Das Schachbrett F¨ur die a) ist es wichtig zu erkennen, dass ein Fall gleich funktioniert, wenn ihr ihn an den Diagonalen, der Vertikalen oder der Horizontalen spiegelt. So 3 kommt ihr auf 10 F¨alle. F¨ur die b) k¨onnt ihr auf dieser Website L¨osungen f¨ur alle F¨alle finden. L¨osung ¨Ubungsaufgabe 1.2: Ein falscher Beweis Das Problem in diesem Beweis ist direkt die erste Zeile. Hier wird behauptet, dass es eine gr¨osste nat¨urliche Zahl gibt und diese wird n zugewiesen. Unter der Annahme, dass es eine solche Zahl gibt ist der Beweis korrekt. Weil diese Aussage falsch ist, ist der Beweis wertlos. In einem Beweis d¨urft ihr nur auf Tatsachen aufbauen, die trivial sind, ihr schon bewiesen habt oder die im Skript stehen. ¨Ahnliche Aufgabe zu ¨Ubungsaufgabe 1.3 Gegeben seien die folgenden Aussagen: • A: Max hat einen Regenschirm dabei. • B: Es regnet. a) Interpretiere die folgenden Formeln: F1 = A → B F2 = (A ∧ B) ∨ (¬A ∧ ¬B) L¨osung: Bei dieser Aufgabe muss man die Operatoren in entsprechende For- mulierungen ¨ubersetzen, also z.B. ∧ zu ”und” und → zu ”Wenn (...), dann (...)”. F1 entspricht also ”Wenn Max einen Regenschirm dabei hat, regnet es” und F2 entspricht ”Einer der zwei folgenden F¨alle tritt ein: Max hat einen Regenschirm dabei und es regnet. Max hat keinen Regenschirm dabei und es regnet nicht”, was sich einfacher ausdr¨ucken l¨asst mit ”Max hat einen Regen- schirm dabei genau dann wenn es regnet”. b) ¨Ubersetze die folgenden Aussagen zu Formeln: • F3: Max hat seinen Regenschirm dabei oder es regnet. • F4: Wenn es nicht regnet, hat Max seinen Regenschirm nicht dabei. L¨osung: Analog zu oben gilt: F3 = A ∨ B F4 = ¬B → ¬A 4 c) Schreibe die Negation von F3 als Formel und als Satz auf. L¨osung: Wir stellen einfach ein ¬ an die Formel an und verwenden Lemma 2.1 aus dem Skript, genauer die Morgansche Regel: ¬F3 ≡ ¬(A ∨ B) ≡ ¬A ∧ ¬B Jetzt ¨ubersetzen wir die umgeformte Formel zu einem Satz: ”Max hat seinen Regenschirm nicht dabei und es regnet nicht”. ¨Ahliche Aufgabe zu ¨Ubungsaufgabe 1.4 Gesucht sei die Wahrheitstabelle der folgenden Formel: F = ¬(¬A ∧ (B ∨ C)) L¨osung: Damit man sich bei komplizierten Formeln wie dieser nicht verrech- net, teilt man sie in Teilformeln auf, wie z.B. (B ∨ C) und berechnet f¨ur diese die Wahrheitstabelle zuerst. So geht man St¨uck f¨ur St¨uck vor, bis man die Wahrheitstabelle der ganzen Formel berechnet hat. A B C ¬A B ∨ C ¬A ∧ (B ∨ C) ¬(¬A ∧ (B ∨ C)) 0 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 0 0 1 0 1 1 1 1 0 1 0 1 ¨Ahnliche Aufgabe zu ¨Ubungsaufgabe 1.5 (Bonus) Eine Aufgabe vom letzten Jahr, die ¨ahnlich zur aktuellen Bonusaufgabe ist, lautet wie folgt: We define two binary logical operators ♡ and □ as follows: A B A ♡ B 0 0 0 0 1 1 1 0 0 1 1 0 A B A □ B 0 0 1 0 1 0 1 0 0 1 1 1 a) Do the formulas F1 = A♡(B ♡C) and F2 = (A♡B)♡C have the same function table? What about the formulas G1 = A □ (B □ C) and G2 = (A □ B) □ C? Justify both of your answers. 5 b) Find a formula F involving only ♡ and □ that has the following function table: A B F 0 0 1 0 1 1 1 0 0 1 1 1 No justification is required. L¨osung: Die a) ist simpel. Wir bestimmen die Wahrheitstabellen mit der obigen Methode, damit keine Leichtsinnsfehler passieren, und schreiben einen Antwortsatz dazu (wichtig, sonst bekommt ihr nicht alle Punkte). Hier sind die Wahrheitstabellen: A B C A ♡ B B ♡ C F1 F2 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 1 0 1 0 1 0 1 1 1 0 0 0 0 0 1 1 1 0 0 0 1 A B C A □ B B □ C G1 G2 0 0 0 1 1 0 0 0 0 1 1 0 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 0 1 1 1 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 Also haben F1 und F2 nicht die gleichen Wahrheitstabellen, G1 und G2 aber schon. Bei der c) hilft vor allem viel Herumprobieren und etwas Gl¨uck. Es gibt aber zwei Tricks. Erstens k¨onnt ihr euch Konstanten bauen, indem ihr die Operatoren auf bestimmte Weise einsetzt. Zum Beispiel ist die Formel A ♡ A immer falsch, unabh¨angig von A. Zweitens k¨onnt ihr auf Gemeinsamkeiten in den Wahrheitstabellen achten. Die Wahrheitstabelle von dem ♡ Operator ¨ahnelt der von der Negation von F: 6 A B A ♡ B 0 0 0 0 1 1 1 0 0 1 1 0 A B F ¬F 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 Wenn wir die Operanden umdrehen erhalten wir die Formel B ♡ A mit Wahrheitstabelle: A B B ♡ A 0 0 0 0 1 0 1 0 1 1 1 0 Es gilt B ♡A ≡ ¬F . Wir m¨ussen noch einen Weg finden, den ¬ Operator nur mit ♡ und □ umzusetzen. Zuletzt bemerken wir, dass der □ Operator wenn der rechte Operand 0 ist die Negation des linken als Ergebnis hat, informell geschrieben A □ 0 ≡ ¬A (bitte nicht so in ¨Ubungen/der Klausur schreiben). F¨ugen wir beide Tricks zusammen erhalten wir die Formel (B ♡ A) □ (A ♡ A), die die gew¨unschte Wahrheitstabelle hat. Wichtig bei solchen Aufgaben ist es eure Formeln vollst¨andig zu klammern, so dass die Reihenfolge der Operationen eindeutig ist. Ihr d¨urft bei der Bonusaufgabe Klammern verwenden, diese z¨ahlen nicht als Operator. Hinweis ¨Ubungsaufgabe 1.6 Bei diesen Aufgaben ist es wichtig, dass ihr in jedem Schritt nur eine Umformung macht und immer eine Regel anwendet, die ihr genau so im Lemma 2.1 aus dem Skript vorfindet. Beispielsweise ist die Umformung (B ∨ C) ∧ A ≡ (B ∧ A) ∨ (C ∧ A) in einer solchen Aufgabe nicht erlaubt, weil das Distributivgesetz im Lemma andersherum notiert ist. Es ist allerdings in Ordnung, die Regeln auf der Ebene von Formeln anzuwenden. Die folgende Umformung mit dem Kommutativgesetz (A ∨ B) ∧ (C ∨ D) ≡ (C ∨ D) ∧ (A ∨ B) ist erlaubt, weil wir f¨ur die aussagenlogischen Symbole A und B, die im Lemma 2.1 vorkommen, die Teilformeln (A ∨ B) und (C ∨ D) eingesetzt haben. 7","libVersion":"0.3.1","langs":""}