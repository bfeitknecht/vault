{"path":"sem1/EProg/extra/slides/EProg_s04_methoden.pdf","text":"252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 0 Ei n f a c h e Ja v a Pr o g r a m m e Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h Üb e r s i c h t § 2. 0 Ei n f a c h e Ja v a Pr o gr a m m e § 2. 1 Me t h o d e n § St r u k t u r § 2. 2 Ty p e n und V a r i a bl e § 2. 2. 1 Ei n f ühr ung § 2. 2. 2 Ba s i s t y p e n : Ei n f a c he ( ei n g eb au t e ) Ty p e n § 2. 2. 3 De k l a r a t i o n vo n Va r i a b l e n 2 2. 1 Me t h od en § Me t h o d e : Se q u e n z vo n An w e i s u n g e n mi t ei n em Na m e n (d e m d e r Me t h o d e ) § Me t h o d e n st r u k t u r i e r e n di e An w e i s u n g e n § An s t a t t al l e An w e i s u n g e n in ei n er Met h o d e ( main ) un t e r z ubr i ng e n § Me t h o d e n er l a u b en es , Wi e d e r h o l u n g e n zu ve r m e i d e n § Me h r f a c h e Au s f ü h r u n g , ab er nur ei n m al im Pr o g r a m m (t e x t ) § Ei n e ( ne ue ) Me t h o d e st e l l t ei n e ne ue An w e i s u n g zu r Ve r f ü g u n g 5 § Bei s p i el : main im Pr o gr a m HelloWorld § Met h o d e en t h äl t An w e i s u n g e n § Be i Au f r u f de r Met h o d e we r d e n di e An w e i s u n g e n au s g e f ü h rt § Me t h o d e main wi r d au t o m a t i s c h au f g e r u f e n ( we n n Pr o g r a m m au s g e fü h r t wi r d ) § Ei n e Kl as s e ka n n meh r er e Me t h o d e n en t h a l t en § Jed e Met h o d e de f i ni e r t ei n e ne ue An w e i s u n g § Au f r u f ni c h t au t o m a t i s c h so nde r n ex p l i z i t § Ka n n ( au c h ) Me t h o d e n au fr u f e n 6 Pr o g r am m i e r e n Wi e z e r l e g e n w i r A u f g a b e i n T e i l a u f g a b e n d i e d u r c h e i n e Me t h o d e g e l ö s t w e r d e n § Wi e f ü g e n w i r d i e T e i l e r g e b n i s s e ( v o n M e t h o d e n g e l i e f e r t ) z u r L ö s u n g de r A uf g a be z us a m m e n 7 Pr o g r am m E n t w i c kl u n g Me t h od en d e fi n i er en ( Zu ) Ei n f a c h e s Be i s p i e l § Au f g a b e : Pr og r a m m d a s T e xt a u s g i b t § Ge s uc h t : 8 -------- Warnung : sichern Sie die Daten -------- Lange Erklaerung -------- Warnung : sichern Sie die Daten -------- Au f g a b e Pr o gr a m m Ze r l e g e n i n T e i l a u f g a b e n § ... so w e i t ve r e i n f a c h e n da s s ei n Sc h r i t t re i c h t § Ve r e i n f a c h e n : ze r l e g e n in Te i l a u f g a b e n T 1 , T 2 , . . . , T n § Ke i n e f i x e R e g e l n ( d i e i m m e r z u m E r f o l g f ü h r e n ) § St a t t d e sse n : H e u r i s t i k e n § Hi n w e i s e , R a t s c h l ä g e , . . . . ( « h i n t s » ) § Fa l l 1 : e i n S c h r i t t / e i n e J a v a A n w e i s u n g ge n ü g t § Um T e i l a uf g a be z u i m pl e m e n t i e r e n 9 Pr o gr a m m Au f g a b e T 1 Te i l 2 T n ( Zu ) Ei n f a c h e s Be i s p i e l § Au f g a b e : Pr og r a m m d a s T e xt a u s g i b t § Ze r l e g u n g § Te i l a u f g a b e T i : i - te Z e i l e i n e i n e r println() An w e i s u n g a u s g e b e n § Pr o g r a m m ( e ) P i fü r T e i l a u f g a b e n h i n t e r e i n a n d e r a u s fü h r e n § (T e il)E r g e b n is (s e ) z u L ö s u n g z u s a m m e n f ü g e n 10 Pr o gr a m m Au f g a b e T 1 Te i l 2 T n -------- Warnung : sichern Sie die Daten -------- Lange Erklaerung -------- Warnung : sichern Sie die Daten -------- Ze r l e g e n i n T e i l a u f g a b e n § Fa l l 2 : O p e r a t i o n e n h i n t e r e i n a n d e r a u s f ü h r e n (v e r k e t t e n ) § Re s u l t a t w e i t e r v e ra r b e i t e n – \"hello\".substring(3).toUpperCase(); § Hi e r g i b t e s k e i n «R e s u l t a t » -- de r E f f e k t de r pr i n t l n( ) An w e i s u n g i s t d i e Au s g a b e a u f d e r K o n s o l e § Ba l d s e h e n w i r a n d e r e n M ö g l i c h k e i t e n . . . 11 P 1 Au f g a b e T 1 Te i l 2 T n P 2 P n ( Zu ) Ei n f a c h e s Be i s p i e l public class PrintExample1 { public static void main(String[] args ) { System.out.println (\" \\ n -------- \\ n\"); System.out.println (\" Warnung : sichern Sie die Daten \\ n\"); System.out.println (\" \\ n -------- \\ n\"); System.out.println (\"Lange Erklaerung \"); System.out.println (\" \\ n -------- \\ n\"); System.out.println (\" Warnung : sichern Sie die Daten \\ n\"); System.out.println (\" \\ n -------- \\ n\"); } // main } 12 ( Zu ) Ei n f a c h e s Be i s p i e l T 1 : System.out.println (\" \\ n -------- \\ n\"); T 2 : System.out.println (\" Warnung : sichern Sie die Daten \\ n\"); T 3 : System.out.println (\" \\ n -------- \\ n\"); T 4 : System.out.println (\"Lange Erklaerung \"); T 5 : System.out.println (\" \\ n -------- \\ n\"); T 6 : System.out.println (\" Warnung : sichern Sie die Daten \\ n\"); T 7 : System.out.println (\" \\ n -------- \\ n\"); 13 ( Zu ) Ei n f a c h e s Be i s p i e l § Au f g a b e : Pr og r a m m d a s T e xt a u s g i b t § Beo b a c h t u n g : R ed u n d a n z § Re d u n d a n z : W i e d e r h o l u n g e n i m P r o g ra m m § Ge s uc h t : Z e r l e gung , di e di e S t r uk t ur de r A uf g a be wi ed er s p i eg el t 16 -------- Warnung : sichern Sie die Daten -------- Lange Erklaerung -------- Warnung : sichern Sie die Daten -------- Ze r l e g e n i n T e i l a u f g a b e n § ... s o d a s s T e ila u f g a b e n T i wi ed er v er w en d e t w er d en kö n n e n § Ge n a u e r : d i e A n w e i s u n g e n f ü r T i kö n n e n w i e d e r v e r w e n d e t we r d e n § An w e i s u n g e n f ü r T i : M e t h o d e 1818 Au f g a b e T 1 T 2 T n T 2 P 1 P 2 P n P 2 ( Zu ) Ei n f a c h e s Be i s p i e l § Au f g a b e : Pr og r a m m d a s T e xt a u s g i b t § Ze r l e g u n g § Te i l a u f g a b e T 1 : d r u c k e W a r n u n g § Te i l a u f g a b e T 2 : d r u c k e E r k l ä r u n g § Pr o gr a m m § T 1 ; T 2 ; T 1 19 -------- Warnung : sichern Sie die Daten -------- Lange Erklaerung -------- Warnung : sichern Sie die Daten -------- Er s t e l l e n v o n P r o g r a m m e n Fa l l 3 : Fa l l 4 : E i n e ( s e l b s t d e f i n i e r t e ) M e t h o d e g e n ü g t Pr o gr a m m Au f g a b e T 1 Te i l 2 T n Me t h o d e 1 M m Fa l l 1 : e i n S c h r i t t / e i n e J a v a A n w e i s u n g g e n ü g t Fa l l 2 : O p e r a t i o n e n h i n t e r e i n a n d e r s c h a l t e n ( v e r ke t t e n ) § ( Zu ) Ei n f a c h e s Be i s p i e l public class PrintExample2 { // main fehlt noch public static void printWarning () { System.out.println (\" \\ n -------- \\ n\"); System.out.println (\" Warnung : sichern Sie die Daten \\ n\"); System.out.println (\" \\ n -------- \\ n\"); } public static void printErklaerung () { System.out.println (\"Lange Erklaerung \"); } } 23 Pr o g r am m e r s t e l l e n . . . § In T e ila u f g a b e n z e r le g e n § Fü r j e d e T e i l a u f g a b e e i n e M e t h od e § Od e r a u c h n u r e i n e A n w e i s u n g . . . § (F a l l 2) O p e r a t i on e n (M e t h od e n ) v e r k e t t e n § Ve r k e t t e n : n a c h e i n a n d e r a u s f ü h r e n ( « h i n t e r e i n a n d e r s c h a l t e n » ) § Au s f ü h r e n : a u f r u f e n § Te i l a u f g a b e n z e r l e g e n à Me t h o d e n s c h r e i b e n à ve r k e t t e n 26 Auf r uf ei n er Me t h od e § Es gi b t zw e i We g e ei n e Me t h o d e au f z u r u f e n § Mi t ex p l i z i t e m Obj e k t : Obj e k t . me t ho dNa me (); § Be i s p i e l : System.out.println (\"Text\"); \"Hello\". toUpperCase (); § Oh n e Ob j e k t § Ge h t nur fü r Me t h o d e n mi t be s o nde r e n Ei g e n s c h a f t e n § be s o n de r e Ei g e n s c h a f t e n : static Ke y w o r d § st a t i c m e t h o d s ( Me t h o d e n mi t Ke y w o r d static ) we r d e n oh n e Ob j e k t au f g e r u f e n § De r Met h o d e n n a me ge n ü g t § Be i s p i e l : printWarning (); 28 public class PrintExample2 { public static void main(String[] args ) { printWarning (); printErklaerung (); printWarning (); } // main public static void printWarning () { System.out.println (\" \\ n -------- \\ n\"); System.out.println (\" Warnung : sichern Sie die Daten \\ n\"); System.out.println (\" \\ n -------- \\ n\"); } public static void printErklaerung () { System.out.println (\"Lange Erklaerung \"); } } 29 Auf r uf ei n er Me t h od e ( mi t od e r oh n e Ob j e k t ) § We n n di e An w e i s u n g name() ( fü r di e Met h o d e name ) ...; // stmt N - 1 irgendeine Anweisung name (); // stmt N Aufruf , z.B. in main ...; // stmt N+1 naechste Anweisung au sg e f ü h r t wi r d , da nn wi r d di e Me t h o d e name au f g e r u f e n (« i n v ok e d » , « c a l l e d » ) § Da m i t be g i nn t di e Au s f ü h r u n g de r Met h o d e name . § Es gi b t au c h an d er e We g e , ei n e Au s f ü h r u n g zu st a r t e n , ab er di e s e in t e r e s s ie r e n uns ( no c h ) ni c h t . § We n n name fe r t i g is t , ge h t es mi t stmt N+1 we i t e r 31 Aus f ühr e n ei n er Me t h od e § Me t h o d e name wi r d au f g e r u f e n ( d. h . name() ) § 1. An w e i s u n g vo n name au s g e f ü h rt § Gi b t es we i t e r e An w e i s u n g e n ? § Ne i n : E n d e d e r Au s f ü h r u n g vo n name § Ja : § Nä c h s t e An w e i s u n g au s g e f ü h rt , we i t e r wi e ob e n § Wi r be z e i c hne n di e Ab f ol g e de r Aus f ühr ung vo n An w e i s u n g e n al s Ko n t r o l f l u s s (« c on t r ol f l o w » ) § ge r a d l i n i ge r Ko n t r o l l f l u s s : d i e aus ge f ühr t e n An w e i s u n g e n fo l g e n im Pr o g r a m m au f ei n an d er § In J a v a : An w e i s u n g s r e i h e n f o l g e is t ex p l i z i t 32 § We n n ei n e Me t h o d e au f g e r u f e n wi r d , da nn § « sp r i n g t » d i e Au s f ü h r u n g zu r Met h o d e und fü h r t di e An w e i s u n g e n de r Met h o d e au s und danac h § « sp r i n g t » d i e Au s f ü h r u n g wi e d e r zu de m Or t zu r ü c k vo n de m de r Au f r u f er f o l g t e § Un d e s ge ht we i t e r mi t de r nä c hs t e n An w e i s u n g § An or d n u n g de r Me t h o d e n im Pr o gr a m m (t e xt ) oh n e Bed eu t u n g Ko n t r o l l f l u s s be i Me t h od en a u fr u f 35 Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String [] args ) { message1(); message2(); System.out.println(\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 36 Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main (String[] args ) { message1(); message2(); System.out.println(\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 37 Hi e r fa n g e n wi r an Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 38 1. An w e i s u n g Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { mes s age1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 39 Hi e r ge h t es we i t e r Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 40 1. u n d le t z t e An w e i s u n g Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } Hi e r ge h t es we i t e r 41 Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 42 Hi e r ge h t es we i t e r Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 43 1. An w e i s u n g Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 44 2. An w e i s u n g Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String [] args ) { message1(); message2(); System.out.println(\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 45 Hi e r ge h t es we i t e r Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 46 1. u n d le t z t e An w e i s u n g Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 47 Hi e r ge h t es we i t e r Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } 48 Le t z t e An w e i s u n g Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } Hi e r ge h t es we i t e r 49 Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } Le t z t e An w e i s u n g 50 Me t h od en die Me t h od en au f ru f e n public class MethodsExample { public static void main(String [] args ) { message1(); message2(); System.out.println(\"Ende von \\ \"main \\ \" \" ); } // main public static void message1() { System.out.println ( \" Nachricht 1: Fertig \" ); } // message1 public static void message2() { System.out.println ( \" Die 2. Nachricht : \" ); message1(); System.out.println ( \" Ende von Nachricht 2\"); } // message2 } En d e main 51 Ou tp u t § Nachricht 1: Fertig § Die 2. Nachricht : § Nachricht 1: Fertig § Ende von Nachricht 2 § Ende von \"main\" 52 public class MethodsExample { public static void main(String[] args ) { message1(); message2(); System.out.println (\"Done with \\ \"main \\ \".\"); } ... } public static void message1() { System.out.println(\" Nachricht 1: Fertig \"); } public static void message2() { System.out.println ( \" Die 2. Nachricht : \"); message1(); System.out.println ( \" Ende von Nachricht 2 \"); } public static void message1() { System.out.println(\" Nachricht 1: Fertig \"); } Ko n t r o l l f l u s s 53 Ei n f a c h e s Be i s p i e l e zu r Illus tr a tio n ... Wi r ve r w e n d e n je t zt println we i l es ei n f a c h is t . Sp ä t e r e Ja v a Pr o gr a m m e be nut z e n ei n e an d e r e Sc h n i t ts t e l l e für Ben u t z er und we i t e r e An w e i s u n g e n ... 54 Me t h od en D e fi n i t i on ( 1. A p p r o x i m a t i on ) § Zu e r s t d e f i n i e r e n w i r n u r e i n f ac h e M e t h o d e n § public static void na m e () { § st a te m e n t ( s ) ; // Rumpf § } § Di e M e t h o d e na m e ka n n ü b e r a l l a u f g e r u f e n w e r d e n ( public static ) u n d g i b t k e i n e n W e r t ( void ) z u r ü c k § Wi r k ö n n e n u n s v o r st e l l e n d a s s a n d e r S t e l l e d e s A u f r u f s d e r R u m p f (B o d y ) d e r M e t h o d e a u s g e f ü h r t (e in g e s e t z t ) w ir d . 55 De f i n i t i o n v o n static Me t h od e (n) me t h o d d e f i n i t i o n ⟸ public static void main ( String [] ar g s ) { sta t e m e n t s e q u e n c e } ot he r m e t hod d e f ot he r m e t hod d e f ⟸ { public static void na m e ( ) { sta t e m e n t s e q u e n c e } } 57 De f i n i t i o n v o n static Me t h od e (n) me t h o d d e f i n i t i o n ⟸ ot he r m e t hod d e f public static void main ( String [] ar g s ) { sta t e m e n t s e q u e n c e } ot he r m e t hod d e f ot he r m e t hod d e f ⟸ { public static void na m e ( ) { sta t e m e n t s e q u e n c e } } 58 Be i s p i e l mi t st a t i c m e t h o d s Sc h r e i b e n Si e ei n Pr o gr a m m um di e s e Fi g u r e n zu dr uc k e n ______ / \\ / \\ \\ / \\ ______/ \\ / \\ ______/ + -------- + ______ / \\ / \\ | STOP | \\ / \\ ______/ ______ / \\ / \\ + -------- + 59 En t w i c k l u n g s s c h r i t t e Ve r s i o n 1 : ( oh n e Au s n u t z e n de r St r u k t u r ) n Er s t e l l e n Si e ei n Pr o g r a m m mi t le e r e r main Met h o d e . n Ko p i e r e n Si e d e n er w ü n s c h t en Ou t p u t i n main und sc h r e i b e n fü r jed e Ze i l e ei n e en t s p r ec h en d e System.out.println An w e i s u n g . n Fü h r e n Si e d i e Met h o d e au s um de n O ut put mi t de r ge w ü n s c h t e n Fi g u r zu ve rg l e i c h e n ______ / \\ / \\ \\ / \\ ______/ \\ / \\ ______/ + -------- + ______ / \\ / \\ | STOP | \\ / \\ ______/ ______ / \\ / \\ + -------- + 60 Pr o g r am V e r s i o n 1 public class Figures1 { public static void main(String[] args ){ System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); System.out.println (); System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); System.out.println (\"+ -------- +\"); System.out.println (); System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); System.out.println (\"| STOP |\"); System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); System.out.println (); System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); System.out.println (\"+ -------- +\"); } // main } // Figures1 61 En t w i c k l u n g s s c h r i t t e Ve r s i o n 2 : ( mi t Au s n u t z e n de r St r u k t u r , mi t Re d u n d a n z ) n Id e n t i f i z i e r e n Si e ( ev e n t u e l l vo r h a n d e n e ) St r u k t u r e (n ). n Un t e r t e i l e n Si e di e main Met h o d e ba s i e r e nd au f Ih r e r St r u k t u r i e r u n g . n Fü h r e n Si e di e Met h o d e au s um de n O ut put mi t de r ge w ü n s c h t e n Fi g u r zu ve rg l e i c h e n ______ / \\ / \\ \\ / \\ ______/ \\ / \\ ______/ + -------- + ______ / \\ / \\ | STOP | \\ / \\ ______/ ______ / \\ / \\ + -------- + 62 St ru k t u r de s O ut put St r u k t u r e n in di e s e r Fi g u r n ob e n : Se c h se c k (H e x a g o n ) ( od e r Ba l l …) n da r un t e r : « Wa n n e » ( od e r Su p p e n t a sse …) n dr i t t e ns «S T O P Sc h i l d » Fi g u r n vi e r t e n s « Tr a p e z » ( od e r Hu t Fi g u r …) St r u k t u r à Met h o d e n : n hexagon n wanne n stopSign n hut ______ / \\ / \\ \\ / \\ ______/ \\ / \\ ______/ + -------- + ______ / \\ / \\ | STOP | \\ / \\ ______/ ______ / \\ / \\ + -------- + 63 Pr o g r am V e r s i o n 2 public class Figures2 { public static void main(String[] args ) { hexagon(); wanne (); stopSign (); hut(); } //main ... 64 Pr o g r am V e r s i o n 2 , Fo r t s e t z u n g ... public static void hexagon() { System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); System.out.println (); } public static void wanne () { System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); System.out.println (\"+ -------- +\"); System.out.println (); } ... 65 Pr o g r a m V e r s i o n 2 , Fo r t s e t z u n g ... public static void stopSign () { System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); System.out.println (\"| STOP |\"); System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); System.out.println (); } public static void hut() { System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); System.out.println (\"+ -------- +\"); } } //Figures2 6667 ______ / \\ / \\ \\ / \\ ______/ \\ / \\ ______/ + -------- + ______ / \\ / \\ | STOP | \\ / \\ ______/ ______ / \\ / \\ + -------- + En t w i c k l u n g s s c h r i t t e Ve r s i o n 3 ( mi t Au s n u t z e n de r St r u k t u r , oh n e Re d u n d a n z ) n Id e n t i f i z i e r e n Si e ( ev e n t u e l l vo r h a n d e n e ) St r u k t u r e (n ) u n d Re d u n d a n z n Er s t e l l e n Si e Met h o d e n um ( so w e i t mög l i c h ) Re d u n d a n z zu ve r m e i d e n n Ko m m e n t i e r e n Si e de n C o de n Fü h r e n Si e di e Met h o d e au s 68 ______ / \\ / \\ \\ / \\ ______/ \\ / \\ ______/ + -------- + ______ / \\ / \\ | STOP | \\ / \\ ______/ ______ / \\ / \\ + -------- + Re d u n d a n z im Ou tp u t n He x a g o n ob e r e r Te i l : im St o p Sc h i l d und H ut wi e d e r v e r w e n d e t n He x a g o n un t e r e r Te i l : i n Wa n n e und S t o p Sc h i l d n Tr e n n l i n i e : i n Wa n n e und H ut n Di e s e Re d u n d a n z ka n n dur c h di e s e Met h o d e n au s g en u t z t ( d. h . el i m i n i er t ) we r d e n : n hexagonTop n hexagonBottom n line 69 Pr o g r am V e r s i o n 3 // Ihr Name, 252 - 0027, Herbst 2020 // Prints several figures, with methods for structure and redundancy. public class Figures3 { public static void main(String[] args ) { hexagon(); wanne (); stopSign (); hut(); } // Draws the top half of an an hexagon. public static void hexagonTop () { System.out.println (\" ______\"); System.out.println (\" / \\ \\ \"); System.out.println (\"/ \\ \\ \"); } ... 70 Pr o g r am V e r s i o n 3 , Fo r t s e t z u n g ... // Draws the bottom half of an hexagon. public static void hexagonBottom () { System.out.println (\" \\ \\ /\"); System.out.println (\" \\ \\ ______/\"); } // Draws a complete hexagon. public static void hexagon() { hexagonTop (); hexagonBottom (); System.out.println (); } ... 71 Pr o g r am V e r s i o n 3 , Fo r t s e t z u n g ... // Draws a tub (« Wanne ») figure. public static void wanne () { hexagonBottom (); line(); System.out.println (); } // Draws a stop sign figure. public static void stopSign () { hexagonTop (); System.out.println (\"| STOP |\"); hexagonBottom (); System.out.println (); } 72 Pr o g r am V e r s i o n 3 , Fo r t s e t z u n g ... // Draws a figure that looks sort of like a hat («Hut»). public static void hut() { hexagonTop (); line(); } // Draws a line of dashes. public static void line() { System.out.println (\"+ -------- +\"); } } //Figures3 73 Me t h od en ( Üb u n g ) Sc hr e i be n Si e ei n Pr o g r a m m das di e s e Ra c k e t e aus g i b t : / \\ / \\ / \\ / \\ + ------- + | | | | | | + ------- + | | | ISS | | | + ------- + | | | | | | + ------- + / \\ / \\ / \\ / \\ 74 Üb e r s i c h t § 2. 0 Ei n f a c h e Ja v a Pr o gr a m m e § 2. 1 Me t h o d e n § St r u k t u r § 2. 2 Ty p e n und V a r i a bl e § 2. 2. 1 Ei n f ühr ung § 2. 2. 2 Ba s i s t y p e n : Ei n f a c he ( ei n g eb au t e ) Ty p e n § 2. 2. 3 De k l a r a t i o n vo n Va r i a b l e n 75 2. 2 Ty p e n und V a r ia ble 76 2. 2. 1 Ei n f ü h r u n g 77 Ty p e n § Ty p e n (« t y p e s » ) be s c hr e i be n Ei g e n sc h a f t e n vo n Da t e n § Ei n Ty p be s c hr e i b t ei n e Me n g e ( od e r Ka t e g o r i e ) v on Da t e n We r t e n . § Be s t i m m t ( be s c hr ä nk t ) d ie Op e r a t i o n e n , d i e mi t di e s e n Da t e n ge m a c h t we r d e n kö n n e n § Vi e l e Pr o g r a m m i e r s p r a c h e n er f o r d er n di e An g a b e ( Sp e z i fi k a t i o n ) v o n Ty p e n § Ty p e n Be i s p i e l e : ga n z e Za h l e n , re e l l e Za h l e n , S t ri n g s § Ty p e n si n d Te i l de r Do k u m e n t a t i o n (w a s ve r a r b e i t e t di e s e Me t h o d e ?) 78 Ty p e n § Di e Pr o gr a m m i e r s pr a c he le g t fe s t , wi e ei n Ty p im p le m e n t ie r t is t § « Im p l e m e n t i e r t » – Da r s t e l l u n g de r We r t e und D e f i ni t i o n de r Op e r a t i o n e n § Di e i n t e r n e Da r s t e l l u n g ei n es Ty p e s be r uh t au f Ko m b i n a t i o n e n vo n 1 s u n d 0 s 97 à 01100001 83 Ty p e n § Di e Pr o gr a m m i e r s pr a c he le g t fe s t , wi e ei n Ty p im p le m e n t ie r t is t § Di e i n t e r n e Da r s t e l l u n g ei n es Ty p e s be r uh t au f Ko m b i n a t i o n e n vo n 1 s u n d 0 s 97 à 01100001 \"ab\" à 01100001 01100010 AS C I I Ta b e l l e 97 01100001 a 98 01100010 b 85 Ty p e n § Di e Pr o gr a m m i e r s pr a c he le g t fe s t , wi e ei n Ty p im p le m e n t ie r t is t § Di e i n t e r n e Da r s t e l l u n g ei n es Ty p e s be r uh t au f Ko m b i n a t i o n e n vo n 1 s u n d 0 s 97 à 01100001 \"ab\" à 01100001 01100010 AS C I I Ta b e l l e 97 01100001 a 98 01100010 b 87 ¿ W a s be de ut e t 0110 0001 ? Ba s i s t yp e n in J a v a § Es gi b t 8 ei n g eb a u t e Ty p e n (« p r i m i t i v e t y p e s » ) für Za h le n , Bu c h s t a b en , e t c . Na me Be s c h r e ib u n g Be is p ie le § int ga n z e Za h l e n - 2147483648 , - 3 , 0 , 42 , 2147483647 § long gr o s s e ga n z e Za h l e n - 3 , 0 , 42 , 9223372036854775807 § double re e l l e Za h l e n 3.1, - 0.25, 9.4e3 § char ( ei n z el n e ) Bu ch s t a b e n 'a' , 'X' , '?' , ' \\ n' § boolean lo g is c h e We r t e true , false 91 Ob er fl ä c h e ei n es Qu a d er s § Ge g e be n : Qu a d e r § Au f g a b e : J a v a Pr o g r a m m zu r Be r e c h n u n g § de r Ob e r f l ä c h e § Of l a e c h e = 2 * ( 7 0 * 2 7 + 2 7 * 4 0 + 7 0 * 4 0 ) c m 2 Pu b l i c d o m a i n , v i a W i k i m e d i a C o m m o n s 92 70 c m 40 c m 27 c m Pr o g r am m … public class Quader { // Berechnen wir die Oberflaeche ... public static void main(String[] args ) { System.out.print (\"Die Oberflaeche ist \"); System.out.print (2 * (70 * 27 + 27 * 40 + 70 * 40)); System.out.println (\" cm2\"); } // Ende von main } 93 Ou t p u t : Di e Ob e r f l a e c h e is t 11540 c m 2 70 c m 40 c m 27 c m Pr o g r am m … public class Quader { // Berechnen wir die Oberflaeche ... public static void main(String[] args ) { System.out.print (\"Die Oberflaeche ist \"); System.out.print (2 * (70 * 27 + 27 * 40 + 70 * 40)); System.out.println (\" cm2\"); } // Ende von main } 94 Ou t p u t : Di e Ob e r f l a e c h e is t 11540 c m 2 Au f m e r k s a m e r Pr o g r a m m i e r e r 70 c m 40 c m 27 c m Pr o g r am m … public class Quader { // Berechnen wir die Oberflaeche ... public static void main(String[] args ) { System.out.print (\"Die Oberflaeche ist \"); System.out.print (2 * (70 * 27 + 27 * 50 + 70 * 40)); System.out.println (\" cm2\"); } // Ende von main } 95 Ou t p u t : Di e Ob e r f l a e c h e is t 12080 c m 2 Un au f m e r k s am e r Pr o g r a m m i e r e r 70 c m 40 cm 27 c m Va r i a b l e § Wi r f ü h r e n e i n e n N a m e n e i n m i t d e m w i r u n s a u f e i n e n W e r t (z . B . 40) b e z i e h e n k ön n e n § Er f o r d e r l i c h f ü r V a r i a b l e : N a m e n und au f w as f ü r W e r t e si c h di e V a r i a bl e be z i e he n k a nn § Hi e r w ä r e n int We r t e s i n n v o l l § Wi r b r a u c h e n e i n e V a r i a b l e f ü r int We r t e 96 Va r i a b l e D e k l a r a t i o n : ty p e na m e § Bei s p i el : int laenge; § int – Ar t (T y p ) d e r W e r t e f ü r d i e s e V a r i a b l e § Gl e i c h m e h r ü b e r T y p e n § laenge – Na m e d e r V a r i a b l e § Fr e i w ä h l b a r , m i t E i n sc h r ä n k u n g e n § Ke i n e J a v a Ke y w o r d s , m u s s m i t B u c h s t a b e a n f a n g e n , … § Gr o s s - und K l e i nbuc hs t a be n si nd un t e r sc hi e dl i c h § De k l a r a t i o n : Er k l ä r u n g , B e k a n n t m a c h u n g 97 Pr o g r am m m i t V ari ab l e n public class Quader { // Berechnen wir die Oberflaeche ... public static void main(String[] args ) { int laenge ; int hoehe ; int tiefe ; laenge = 70; hoehe = 40; tiefe = 27; System.out.print (\"Die Oberflaeche ist \"); System.out.print (2*( laenge * tiefe + tiefe * hoehe + laenge * hoehe )); System.out.println (\" cm2\"); } // Ende von main } 98 Ou t p u t : Di e Ob e r f l a e c h e is t 11540 c m 2 Va r i a b l e D e k l a r a t i o n u n d D e f i n i t i o n : type name = value § Ja v a: k ö n n e n D e k l ar a ti o n m i t Zu w e i su n g v e r b i n d e n § Va l u e i s t e i n ( p a s s e n d e r ) W e r t … § «p a s s e n d » -- d. h. v o m T y p type 99 Pr o g r am m m i t V ari ab l e n public class Quader { // Berechnen wir die Oberflaeche ... public static void main(String[] args ) { int laenge = 70; int hoehe = 40; int tiefe = 27; System.out.print (\"Die Oberflaeche ist \"); System.out.print (2*( laenge * tiefe + tiefe * hoehe + laenge * hoehe )); System.out.println (\" cm2\"); } // Ende von main } 100 Ou t p u t : Di e Ob e r f l a e c h e is t 11540 c m 2 Va r i a b l e D e k l a r a t i o n § De k l a r a t i o n l e g t A r t /T y p d e r W e r t e f e s t – ka n n j e d e n W e r t di e s e s T ype s da r s t e l l e n § Ma c h t d e n N a m e n b e k a n n t § Na m e w i r d i n e i n V e r z e i c h n i s e i n g e t r a g e n § Va r i a b l e w i r d n i c h t i n i t i a l i s i e r t w e n n k e i n e D e f i n i t i o n § Gut e N a m e n s i nd w i c h t i g – be s o nde r s w e nn V a r i a bl e wi ed er h o l t v er w en d e t wi r d § … u n d ( m a n c h m a l ) s c h w e r zu f i n d e n § Ku r z e r N a m e w e n n V a r i a b l e n i c h t w i c h t i g / l a n g l e b i g i s t § Da h e r o f t i n Be i s p i e l e n ( h i e r ) 101 Va r i a b l e D e k l a r a t i o n u n d D e f i n i t i o n § D a s Z e i c h e n = (« G l e i c h h e i t s z e i c h e n » – ab e r i r r e f ü h r e n d e r Na m e ) b e d e u t e t Zu w e i su n g § § int laenge = 70; § De r int Va r i a b l e laenge wi r d d e r W e r t 70 zu g e wi e s e n § We n n w i r d i e V a r i a b l e v e r w e n d e n ( z . B . , u m e i n e O p e r a t i o n au s z u f ü h r e n ) so w i r d d i e O p e r a ti o n m i t d e m W e r t (d e n d i e Va r i a b l e g e p e i c h e r t h a t ) au sg e f ü h r t 103 We r de f inie r t Ty p e n ? § Ve r l a n g e n al l e Pr o gr a m m i e r s pr a c he n di e Sp e z i f i k a ti o n vo n Ty p e n ?§ Ne i n . ( Mi t ma n c h ma l übe r r a s c he nde n Fo l ge n ) § Ja v a ve r l a n g t ni c h t im m e r ei n e Sp e z i fi k a t i o n de s Ty p s § Ma n c h m a l ka n n de r Co m pi l e r de n Ty p he r a us f i nde n § We l c h e Ty p e n ka n n ei n Ja v a Pr o gr a m m ve r w e n d e n ? § Ty p e n di e i n de r Sp r a c h e de f i ni e r t si n d : Ba s i s t y p e n (« p r im it iv e t y p e s » , in t e g r ie r t e Ty p e n ) – Be i s p i e l : int und long fü r ga n z e Za h l e n § Ty p e n au s Bi b l i o t h e k e n , d i e im m e r ve r f ü g b a r si n d ( z. B . String ) § Be n u t z e r - de f i ni e r t e Ty p e n 105 We r de f inie r t Ty p e n ? § Ve r l a n g e n al l e Pr o gr a m m i e r s pr a c he n di e Sp e z i f i k a ti o n vo n Ty p e n ?§ Ne i n . ( Mi t ma n c h ma l übe r r a s c he nde n Fo l ge n ) § Ja v a ve r l a n g t ni c h t im m e r ei n e Sp e z i fi k a t i o n de s Ty p s § Ma n c h m a l ka n n de r Co m pi l e r de n Ty p he r a us f i nde n § We l c h e Ty p e n ka n n ei n Ja v a Pr o gr a m m ve r w e n d e n ? § Ty p e n di e i n de r Sp r a c h e de f i ni e r t si n d : Ba s i s t y p e n (« p r im it iv e t y p e s » , in t e g r ie r t e Ty p e n ) – Be i s p i e l : int und long fü r ga n z e Za h l e n § Ty p e n au s Bi b l i o t h e k e n , d i e im m e r ve r f ü g b a r si n d ( z. B . String ) § Be n u t z e r - de f i ni e r t e Ty p e n 106 Wa r u m Ty p e n § Ty p e n be s c hr e i be n Ei g e n sc h a f t e n vo n Da t e n § We r t e b e r e i c h § Op e r a t i o n e n § Da r s t e l l u n g ( we l c h e Fo l ge vo n 0 u n d 1 fü r ei n en We r t ge w ä h l t wi r d ) § Ri c h ti g e Wa h l d e s Ty p s nö t i g § Je na c h Pl a t f o r m we r d e n un t e r s c hi e dl i c he (H a r d w a r e ) Op e r a t i o n e n au s g e f ü h rt § Ad d i t i o n ga n z e r Za h l e n -- Ad d i t i o n v o n re e l l e n ( Gl e i t k o m m a ) Za h l e n § Je na c h Ty p we r d e n So n d e r f ä l l e be ha nde l t § Re s u l ta t ka n n ni c h t da r g e s t e l l t we r d e n : Ru n d u n g ? ∞ ? An d e r e Op t i o n e n ?? 108 Wa r u m Ty p e n § Pr o gr a m m e ma n i p u l i er en Sy m b o l e § Be i s p i e l EBN F : Sy m b o l e au s Ze i c h e n au s ei n er Me n g e (« A lp h a b e t » ) § Be s t i m m t ob le g a l od e r ni c h t – ab e r nur bz g l . d e r St r u k t u r § Pr o g r a m m e übe r s e t z e n Sp r a c h e n , sp i e l e n Sc h a c h , be r e c hne n di e St e u e r sc h u l d § Sy m b o l e we r d e n ve r k n ü p f t , ve rg l i c h e n , ge ä n d e r t , ge l e s e n , …. § Sy m b o l e we r d e n dur c h Fo l g e n vo n 0 u n d 1 da r g e s t e l l t § Ty p en t s c h ei d e t di e I n t e r pr e t a t i o n di e s e r Fo l ge n 109 Wa r u m Ty p e n § Ty p e n ve r h i n d e r n Fe h l e r § Ka n n ni c h t di e A H V Nu m m e r zu m Ge h a l t ad d i er en § Ka n n ni c h t Vo l u m e n und Fl ä c h e ad d i er en § Ty p e n er l a u b en Op t i mi e r u n g e n (d er Be r e c h n u n g , d e r Dar s t e l l ung ) § Al l e Da r s t e l l u n g e n si n d en d l i c h ! § Ri c h ti g e Wa h l d e s Ty p s nö t i g § Ja v a ka n n da nn en t s p r ec h en d Pl a t z re s e r v i e re n so da s s Er g e bni s s e vo n Op e r a t i o n e n da r s t e l l ba r si n d ( int od e r long ?) 110 Üb e r s i c h t § 2. 0 Ei n f a c h e Ja v a Pr o gr a m m e § 2. 1 Me t h o d e n § St r u k t u r § 2. 2 Ty p e n und V a r i a bl e § 2. 2. 1 Ei n f ühr ung § 2. 2. 2 Ba s i s t y p e n : Ei n f a c he ( ei n g eb au t e ) Ty p e n § Op e r a t i o n e n ( mi t We r t e n de s s e l be n und ve r s c h i e d e n e r Ty p e n ) § 2. 2. 3 De k l a r a t i o n vo n Va r i a b l e n 111 2. 2. 2 P ri m i t i v e T y p e s § De k l a r a t i o n und D e fi ni t i o n § int x = va l ue ; § Ge na ue r : § va l u e wi r d dur c h ei n en Au s d r u c k (« e x p r es s i o n » ) be s t i m m t § De r Au s d r u c k wi r d aus g e w e r t e t (« e v a l u a t ed » ) § Wa s si n d di e Re g e l n für Au s d r ü c k e ? § Zu e r s t fü r int (u n d long ) 112 Aus dr üc k e (« E x pr e ssio ns» ) § Au s d r u c k (« e x p r es s i o n » ) fü r ei n en Ty p : E i n W e r t od e r Op e r a n d e n und Op e r a t o r ( en ) d i e ei n en We r t be r e c hne n • Be i s p i e l e fü r int : 4 1 + 7 2 * 4 * 3 7 + ( 2 + 6 ) * 4 § De r ei n f a c h s t e Au s d r u c k is t ei n Li t er a l (« lit e r a l v a lu e ») § Ei n W e r t d e r di r e k t im Pr o g r a m m er s c h ei n t ( z. B. 4 ) § Ko m p l e x e Au s d r ü c k e kö n n e n Te i l a u s d r ü c k e en t h a l t en ( sp ä t e r me h r ) § ( Te i l ) Au s d r u ck ka n n Op e r a n d s e i n 113 Ar it hm e t is c he Op er a t o r en § Op e r a t o r : Ve r k n ü p f t We r t e od e r Au s d r ü c k e . § + Ad d i t i o n § - Su b t r a k t i o n ( od e r Ne g a t i o n ) § * Mu l t i p l i k a t i o n § / Di v i s i o n § % Mo d u l u s ( R e s t ) § Wä h r e n d de r Au s f ü h r u n g ei n es Pr o gr a m m s we r d e n se i n e Au s d r ü c k e au s ge w er t e t (« ev a l u a t e d ») § 1 + 1 er g i b t 2 § System.out.println (3 * 4); er g i b t ( dr uc k t ) 12 § Wi e wü r d e n wi r de n T e xt 3 * 4 dr uc k e n ? 115 EBN F Be s c h r e i b u n g Aus dr uc k (E x pr e ssio n) num b e r ⟸ in t e g e r | in t e g e r . { di gi t } | si g n . di gi t { di gi t } op ⟸ + | - | * | / | % at o m ⟸ num b e r | id e n t if ie r te r m ⟸ ( ex p r ) | at o m ex p r ⟸ te r m { op te r m } 1. Ni c h t d i e v ol l s t ä n d i g e B e s c h r e i b u n g f ü r J a v a Au s d r ü c k e 2. Bes c h r ei b t n u r d i e S y n t a x ( d i e F o r m) 117 Ar it hm e t is c he Op er a t o r en § Op e r a t o r : Ve r k n ü p f t We r t e od e r Au s d r ü c k e . § + Ad d i t i o n § / Di v i s i o n …. § We r t e ha be n ei n en [ fe s t g e l e g t e n ] Ty p § Ev a l u a t i o n ei n es Au s d r u c k s er g i b t We r t ei n es Ty p s § EBN F be s c hr e i b t nur Fo r m (i n t + i n t er gi b t ? in t , int + lo n g er gi b t ? ?? ) § Op e r a t o r ⨂ : Ty p _ A ⨂ Ty p _ A er g i b t Ty p _ A ( fü r ar i t h m e t i s c h e Op e r a t o r e n ) Ty p _ A ⨂ Ty p _ B er g i b t ???? ( hä ng t vo n ⨂ , Ty p _ A , Ty p _ B ab – sp ä t e r ) 120","libVersion":"0.3.1","langs":""}