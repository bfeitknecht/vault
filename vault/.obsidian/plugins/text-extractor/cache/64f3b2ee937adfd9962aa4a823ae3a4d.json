{"path":"var/export/AuW-u04-pg-bf.pdf","text":"AuW-u04-pg-bfTo construct a Las Vegas algorithm (L) with a success rate of 12, we can repeatedly apply AlgorithmA and then use Algorithm V to verify the result. We will keep iterating until we ﬁnd a result thatpasses the veriﬁcation with certainty.Here's a sketch of the algorithm:Algorithm AInput: N∈NOutput: X∈(N,2N)Runtime: O(logN)Probability: pN≥1logNAlgorithm VInput: x∈NOutput: true/falseRuntime: O((logn)6.1)Algorithm LInput: N∈NOutput: X∈(N,2N)Runtime: O(?)Probability: pN≥12intuition:run A (monte carlo) many times and check with veriﬁer until we have Pr[\"correct answer\"] =1/21. Use Algorithm A to generate a candidate prime number X in the range (N,2N).2. Use Algorithm V to verify if X is prime. If it is, return X.3. If Algorithm V indicates that X is not prime, repeat steps 1 and 2.Let's denote the runtime of Algorithm A as ( TA ) and the runtime of Algorithm V as ( TV ). We willdenote the number of times we need to repeat Algorithm A until we ﬁnd a prime candidate as ( k ).Since the success rate of Algorithm A is ( pN≥1logN ), the expected number of iterations ( k ) untilwe ﬁnd a prime candidate is at most ( 2logN).Therefore, the runtime of Algorithm L will be:So, the runtime of Algorithm L is (O((logN)6.1) ), which is dominated by the runtime of Algorithm V.RuntimeofL=k×TA+TV=2logN×TA+TV=2logN×O(logN)+O((logN)6.1)=O((logN)2)+O((logN)6.1)=O((logN)6.1)","libVersion":"0.3.1","langs":""}