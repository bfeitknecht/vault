{"path":"sem1/EProg/extra/slides/EProg_s08_schleifen.pdf","text":"252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 0 Ei n f a c h e Ja v a Pr o g r a m m e Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h 252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 5 Sch l e i f e n (« Lo o p s ») Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h 2 Üb e r s i c h t § 2. 5 Sc h l e i f e n (L oop s ) § 2. 5. 1 « f o r » L o o p s § 2. 5. 2 Ve r s c h a c h t e l t e Sc h l e i f e n § 2. 5. 3 « w h i l e » L o o p s 4 252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. Z Zuf al l s z ahl e n Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h 5 Zu f a l l s z a h l e n au s de r Bi b l i o t h e k § St a t t Z ah l e n e i n l e se n . . . m i t « z u f äl l i g e n » W e r t e n ar b e i t e n § Au c h d a f ü r h a t J a v a e i n e n S e r v i c e § Random is t in d e r Bi b l i o t h ek java.util de fi ni e r t § Mu s s er s t be k a nn t ge ge b e n we r d e n import java.util.Random ; // s o da s s wi r Ra n d o m be nut z e n kö n n e n § Pr o gr a m m br a uc h t ei n Random Ob j e k t : § Di e s e s m u s s ko n s t r u i e r t we r d e n Random zufall = new Random(); Random Me t h od en (« S e r v ic e s» ) § Random lie f e r t ei n en Zu f al l s z ah l e n g e n e r a t o r § Ps e u d o z u f a l l s z a h l e n ( z. B. zw i s c h e n 0 . . . 9, ei n s c h l i es s l i c h ) § Bei s p i el : import java.util.Random ; Random rand = new Random(); int randomNumber = rand.nextInt (10); // 0 - 9 Me t h o d n a m e De s c r i p t i o n nextInt () re t u r n s a r a n d o m i n t e g e r nextInt ( max ) re t u r n s a r a n d o m i n t e g e r i n t h e r a n g e [ 0 , ma x ) in o t h e r w o r d s , 0 t o ma x - 1 i n c l u s i v e nextDouble () re t u r n s a r a n d o m re a l n u m b e r i n t h e r a n g e [ 0 . 0 , 1 . 0 ) 9 Er z e u g e n vo n Zu f a l l s z a h l e n § Häu f i g br a uc he n wi r ( ga n z e ) Zu f al l s z ah l e n zw i s c h e n 1 u n d N int n = rand.nextInt (20) + 1; // 1 - 20 inclusive § Um ei n e ga n z e Za h l in ir g e n d e in e m In t e r v a l [ mi n , ma x ] zu be k o m m e n ( in k lu s iv e Gr e nz e n ): na m e .nextInt ( siz e o f r a n g e ) + mi n ; // nam e Zu f a l l s z a h l e n g e n e r a t o r mi t ( siz e o f r a n g e ) = = ( ma x - mi n + 1 ) § Be i s p i e l : E i n e zu f ä l l i g e ga n z e Za h l zw i s c h e n 4 u n d 10 e in s c h lie s s lic h : int n = rand.nextInt (7) + 4; 11 Fr ag e n zu Random Mi t di e s e r De k l a r a t i o n Random rand = new Random(); wi e wü r d en Si e er h a l t en ? 1. Ei ne zu f ä l l i g e ga n z e Za h l zw i s c h e n 1 u n d 47 e in s c h lie s s lic h ? int random1 = rand.nextInt (47) + 1; 2. Ei ne zu f ä l l i g e ga n z e Za h l zw i s c h e n 23 u n d 30 e in s c h lie s s lic h ? int random2 = rand.nextInt (8) + 23; 3. Ei ne zu f ä l l i g e ga n z e ge r ade Za h l zw i s c h e n 4 a n d 12 e in s c h lie s s lic h ? int random3 = rand.nextInt (5) * 2 + 4; 13 Random und an d e r e Ty p e n § Je d e Me n g e vo n We r t e n de r Ba s i s t y p en ka n n au f d i e ga n z e n Za h le n ab g e b i l d e t we r d e n – hi l ft au c h be i an d e r e n Ty p e n § Cod e u m zu f ä l l i g Sc h e r e - St e i n - Pa p i e r zu s p ie le n : int r = rand.nextInt (3); if (r == 0) { System.out.println (\" Schere \"); } else if (r == 1) { System.out.println (\"Stein\"); } else { // r == 2 System.out.println (\"Papier\"); } 15 2. 5. 1 Ei n f a c h e Sc h l e i f e n : «f o r » - lo o p § Sc h l e i f e n er l a u b en wi ed er h o l t e Au s f ü h r u n g ei n er ( od e r meh r er er ) An w e i s u n g ( en ). § Sc h l e i f e n (« l oop s » ) ko m m e n in ve r s c h i e d e n e n Va r i a n t e n § Zu e r s t : « fo r » - lo o p § Fi x e An z a h l an Wi e d e r h o l u n g e n ( we n n ri ch t i g e in g e s e t z t ...) 20 Ei n e ei n f a c h e Ad d i t i o n s a u f g a b e Scanner console = new Scanner( System.in ); Random rand = new Random() // play games int wrong = 0; int operand1; int operand2; operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print ( operand1 + \" + \" + operand2 + \" = \" ); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1; } 21 § Ma n ne hm e : § Zw e i ga n z e Za h l e n Z 1 und Z 2 zw i s c h e n 1 . . 10 ( e in s c h lie s s lic h ) § Pr ä s e n t i e r e di e A uf g a be Z 1 + Z 2 und le s e d ie Ei ng a be § Ve r g l e i c h e Ei ng a be mi t Su m m e , zä h l e An z a h l Fe h l e r § ... be s s e r : dr e i Au f g a b e n § Pr o gr a m m (s e g m e n t ) St a t t Wi e d e r h o l u n g e n de r An w e i s u n g e n ... Scanner console = new Scanner( System.in ); Random rand = new Random() // play games int wrong = 0; int operand1; int operand2; operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1;} operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1;} operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); System.out.println (\"You made \" + wrong + \" mistake(s).\"); 23 Dr e i e i n f a c h e A d d i t i o n sa u f g a b e n mi t z u f ä l l i g en Z a h l en 1 . . . 1 0 «f o r» - lo o p s er l a u b en W ie de r ho lung e n § Ja v as « f o r » - lo o p An w e i s u n g wi ed er h o l t An w e i s u n g e n for (int i = 1; i <= 3; i = i + 1) { // repeat 3 times operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1; } } 2426 Initia lisie r ung for ( int i = 1; i <= 5; i = i + 1) { System.out.println (\"Ich werde die Uebungsaufgaben machen \"); } § Le g t di e V a r i a bl e f e s t , di e im Lo o p ve r w e n d e t wi r d § Wi r d ei n m al am An f a n g de r Sc h l e i f e au sg e f ü h r t § Di e s e Va r i a b l e he i s s t Sc h l e i f e n z ä h l e r (« lo o p c o u n t e r » ) § Ka n n je d e n Na m e n ha be n , ni c h t nur i § Ka n n mi t je d e m We r t an f an g e n , ni c h t nur 1 27 Te s t for ( int i = 1; i <= 5; i = i + 1) { System.out.println (\"Ich werde die Uebungsaufgaben machen \"); } § Ve r g l e i c h t di e Zä h le r v a r ia b le mi t ei n em Gr e nz w e r t § Ve r w e n d e t Ve r g l e i c h s o p e r a t o r e n (« c om p a r i s on op e r a t or s » ) § Di e s e lb e n wi e fü r if - St a t e m e n t s < we n i g e r al s (« l e s s t h a n » ) <= we n i g e r al s od e r gl e i c h (« l e s s t h a n o r e q u a l t o » ) > gr ö s s e r al s (« gr e a t e r t h a n » ) >= gr ö s s e r al s od e r gl e i c h (« g r e a t e r t h a n o r e q u a l t o » ) 28 Ak t ua lis ie r ung for ( int i = 1; i <= 5; i = i + 1) { System.out.println (\"Ich werde die Uebungsaufgaben machen \"); } § Di e Zä h le r v a r ia b le mu s s si c h än d e r n § So n s t fi n d e t di e Sc h l e i f e ke i n Ende § te s t e r g ib t im m e r true § Ei n be l i e bi g e r Au s d r u c k zu l ä s s i g § Com p i l e r pr üf t ni c h t da s s di e Zä h l e r v a r i a b l e ve r w e n d e t wi r d 30 W ie de r ho lung e n fü r ei n In t e r v a l [ 1 ..6 ] System.out.println(\"1 hoch 2 = \" + 1 * 1); System.out.println(\"2 hoch 2 = \" + 2 * 2); System.out.println(\"3 hoch 2 = \" + 3 * 3); System.out.println(\"4 hoch 2 = \" + 4 * 4); System.out.println(\"5 hoch 2 = \" + 5 * 5); System.out.println(\"6 hoch 2 = \" + 6 * 6); § In t u i t i o n : « Ic h w i l l ei n e Ze i l e fü r je d e Za h l vo n 1 b i s 6 au s g eb en » § Ei n «f o r » - Lo o p erl ed i g t ge n a u di e s e n Jo b ! for ( int i = 1; i <= 6; i = i+1) { System.out.println ( i + \" hoch 2 = \" + ( i * i ) ); } § \" Fü r je d e ga n z e Za h l i vo n 1 bi s 6, dr uc k e ...\" 32 Meh r er e An w e is ung e n im Ru m p f System.out.println (\"+ ---- +\"); for ( int i = 1; i <= 3; i = i+1) { System.out.println (\" \\ \\ /\"); System.out.println (\"/ \\ \\ \"); } System.out.println (\"+ ---- +\"); § Ou t p u t : + ---- + \\ / / \\ \\ / / \\ \\ / / \\ + ---- + 37 Sc h l e i f e n k o n t r o l l e int highTemp = 5; for ( int i = - 3; i <= highTemp / 2; i = i + 1) { System.out.println ( i + \" C = \" + ( i * 1.8 + 32) + \" F\"); } Ou t p u t : - 3 C = 26.6 F - 2 C = 28.4 F - 1 C = 30.2 F 0 C = 32.0 F 1 C = 33.8 F 2 C = 35.6 F 38 Ho c h z ä h l en , he r un t e r z ä hle n § Di e Ak t u a l i s i e r u n g (« u p d a t e » ) ka n n au c h de n Sc h l e i f e n z äh l e r he r un t e r z uz ä hl e n Ab e r d e r Ve r g l e i c h in te s t mu s s da nn > an s t a t t vo n < ve r w e n d e n System.out.print(\"T - minus \"); for ( int i = 10; i >= 1; i = i - 1) { System.out.print ( i + \" \"); } System.out.println(\"blastoff !\"); System.out.println(\"The end.\"); Ou t p u t : T - minus 10 9 8 7 6 5 4 3 2 1 blastoff! The end. 40 2. 5. 2 Ve r s c h a c h t e l t e fo r - Sc h l e i f e n 42 «f o r» - Sc h l e i f e for ( in it ia liz a t io n ; te s t ; upda t e ) { st a t e m e nt ; st a t e m e nt ; ... st a t e m e nt ; } st a t e m e n t ( An w e i s u n g im Ru m p f de r Sc h l e i f e ) ka n n be l i e bi g e Ja v a An w e i s u n g s e in Au c h wi e d e r e in e Sc h l e i f e …. b od y ( Ru m p f ) h e a d e r ( K op f ) 43 Ve r s c h a c h t e l t e Sc h l e i f e n § Ve r s c h a c h t e l t e Sc h l e i f e n (« n e s t e d l oop » ): Sc h l e i f e in ei n er Sc h l e i f e for ( int i = 1; i <= 5; i = i+1) { for ( int j = 1; j <= 10; j = j+1) { System.out.print (\"*\"); } System.out.println (); // to end the line } 44 Ve r s c h a c h t e l t e Sc h l e i f e n § Ve r s c h a c h t e l t e Sc h l e i f e n (« n e s t e d l oop » ): Sc h l e i f e in ei n er Sc h l e i f e for ( int i = 1; i <= 5; i = i+1) { for ( int j = 1; j <= 10; j = j+1) { System.out.print (\"*\"); } System.out.println (); // to end the line } Out put : ********** ********** ********** ********** ********** § De r Ru mp f de r äu s s e re n Sc h l e i f e wi r d 5 - ma l au s g e f ü h r t , d e r Ru mp f de r in n e r e n ( Sc h l e i f e ) 1 0 - ma l ( je d e s m al ) 45 Ve r s c h a c h t e l t e Sc h l e i f e n Wa s gi b t di e s e s Pr o gr a m m s e gm e n t au s ? for ( int i = 1; i <= 5; i = i+1) { for ( int j = 1; j <= i ; j = j+1) { System.out.print (\"*\"); } System.out.println (); } § Out put : * ** *** **** ***** 49 Ve r s c h a c h t e l t e Sc h l e i f e n Wa s gi b t di e s e s Pr o gr a m m s e gm e n t au s ? for ( int i = 1; i <= 5; i = i+1) { for ( int j = 1; j <= i ; j = j+1) { System.out.print ( i ); } System.out.println (); } § Out put : 1 22 333 4444 55555 52 Mög l i c h e Fe h l e r § Di e Sc h l e i f e te r m i n i e r t ni c h t § Lä uf t und lä u f t und lä u f t § Endl o s s c hl e i f e (« in f in it e lo o p » ) 53 Mög l i c h e Fe h l e r § Di e Sc h l e i f e te r m i n i e r t ni c h t § Lä uf t und lä u f t und lä u f t § Endl o s s c hl e i f e (« in f in it e lo o p » ) 54 Mög l i c h e Fe h l e r § Di e Sc h l e i f e te r m i n i e r t ni c h t § Lä uf t und lä u f t und lä u f t § Endl o s s c hl e i f e (« in f in it e lo o p » ) § Bei s p i el e : for (int i = 1; i <= 5; i = i+1) { for (int j = 1; i <= 10 ; j = j+1) { System.out.print (\"*\"); } System.out.println (); } 55 Mög l i c h e Fe h l e r § Di e Sc h l e i f e te r m i n i e r t ni c h t § Lä uf t und lä u f t und lä u f t § Endl o s s c hl e i f e (« in f in it e lo o p » ) § Bei s p i el e : for ( int i = 1; i <= 5; i = i+1) { for (int j = 1; j <= 10; i = i+1 ) { System.out.print (\"*\"); } System.out.println (); } 56 Wa s tu n ? § Ec l i p s e ka n n so lc h e P r o g r am m e st o p p e n . § Klic k e n au f «T e r m i n a t e » 57 Meh r Be i s p i e l e § We l c h e ve r s c h a c h t e l t e n fo r - Sc h l e i f e n er z eu g en di e s e n Ou t p u t ? ....1 ...2 ..3 .4 5 58 Meh r Be i s p i e l e § We l c h e ve r s c h a c h t e l t e n fo r - Sc h l e i f e n er z eu g en di e s e n Ou t p u t ? ....1 ...2 ..3 .4 5 § Wi r mü s s en ei n e Au s g a b e z e i l e ko n s t r u i e r e n : § mi t e in e r äu s s er en Sc h l e i f e fü r jed e Z e ile § mi t in n e r e r (n ) Sc h l e i f e (n ) fü r da s M us t e r jed er Z e ile äu s s e r e Sc h l e i f e (5 - ma l d a es 5 Ze i l e n gi b t ) in n er e Sc h l e i f e ( fü r je d e Ze i l e ) 59 Äus s e r e und inne r e Sc h l e i f e § Le g e n Si e er s t di e äu s s e r e Sc hl e i f e fe s t , zä h l t vo n 1 bi s zu r An z a h l de r Ze i l e n for ( int line = 1; line <= 5; line = line+1) { ... } § An a l y s i e r e n Si e je d e Ze i l e . En t d e c k e n Si e da s M us t e r : ei n pa a r Pu n k t e (0 Pu n k t e in d e r le t z t e n Ze i l e ) ge f o l g t vo n Za h l ....1 ...2 ..3 .4 5 60 Äus s e r e und inne r e Sc h l e i f e § Le g e n Si e er s t di e äu s s e r e Sc hl e i f e fe s t , zä h l t vo n 1 bi s zu r An z a h l de r Ze i l e n for ( int line = 1; line <= 5; line = line+1) { ... } § An a l y s i e r e n Si e je d e Ze i l e . En t d e c k e n Si e da s M us t e r : ei n pa a r Pu n k t e (0 Pu n k t e in d e r le t z t e n Ze i l e ) ge f o l g t vo n Za h l ....1 ...2 ..3 .4 5 Be o b a c h t u n g : D i e An z a h l de r Pu n k t e hä ng t vo n d e r Z e ile n n u m m e r ab . 61 Za h l e n f o l g e n à Sc h l e i f e n for ( int count = 1; count <= 5; count = count+1) { System.out.print ( ... ); } We l c h e An w e i s u n g im Ru m p f wü r d e di e s e n Ou t p u t er g eb en : 4 7 10 13 16 for ( int count = 1; count <= 5; count = count+1) { System.out.print ( 3 * count + 1 + \" \"); } 62 Za h l e n f o l g e n à Sc h l e i f e n mi t Ta b e l l e n § We l c h e An w e i s u n g im Ru m p f wü r d e di e s e n Ou t p u t er g eb en : 2 7 12 17 22 § Zu m Fi n d e n de s M us t e r s er s t el l en Si e ei n e Ta b e l l e mi t count und de n Za h l e n . § We n n si c h count um 1 er h ö h t , so l l t e di e Za h l um 5 he r a uf g e he n . § Ab e r count * 5 is t zu gr o s s ( u m 3) , a l s o su b t r a h i e r e n wi r 3. count Za h l in Fo l g e 5 * count 1 2 5 2 7 10 3 12 15 4 17 20 5 22 25 5 * count - 3 2 7 12 17 22 63 count Za h l in Fo l g e 1 2 2 7 3 12 4 17 5 22 We i t e r e s Ta b e l l e n Be i s p i e l § We l c h e An w e i s u n g im Ru m p f wü r d e di e s e n Ou t p u t er g eb en : 17 13 9 5 1 § Ko n s t r u i e r e n wi r di e Ta b e l l e . § We n n si c h count um 1 er h ö h t , so l l t e di e Za h l ... § Ab e r d i e s e s Pr o d u k t is t zu ... count Za h l in Fo l g e 1 17 2 13 3 9 4 5 5 1 - 4 * count - 4 * count + 21 - 4 17 - 8 13 - 12 9 - 16 5 - 20 1 - 4 * count - 4 - 8 - 12 - 16 - 20 64 Zu r ü c k z um Be i s p i e l mi t «f o r» - Sc h l e i f e § Ko n s t r u i e r e n wi r ei n e Ta b e l l e ....1 ...2 ..3 .4 5 § Um ei n en Bu c h s t a b e n me h r f a c h zu dr uc k e n ve r w e n d e n wi r ei n e fo r - Sc h l e i f e . for ( int j = 1; j <= 4; j = j+1) { System.out.print (\".\"); // 4 Punkte } line # Pu n k t e 1 4 2 3 3 2 4 1 5 0 - 1 * line - 1 - 2 - 3 - 4 - 5 - 1 * line + 5 4 3 2 1 0 65 Lö sung mi t «f o r» - Sc h l e i f e § An t w or t : for ( int line = 1; line <= 5; line = line+1) { for ( int j = 1; j <= ( - 1 * line + 5); j = j+1) { System.out.print (\".\"); } System.out.println (line); } § Out put : ....1 ...2 ..3 .4 5 66 Ve r s c h a c h t e l t e «f o r» - Sc h l e i f e n § Wa s is t de r O ut put di e s e r ve r s c h a c h t e l t e n Sc h l e i f e n ? for ( int line = 1; line <= 5; line = line+1) { for ( int j = 1; j <= ( - 1 * line + 5); j = j+1) { System.out.print (\".\"); } for ( int k = 1; k <= line; k = k+1) { System.out.print (line); } System.out.println (); } § An s w e r : ....1 ...22 ..333 .4444 55555 68 Ve r s c h a c h t e l t e «f o r» - Sc h l e i f e n Üb u n g § Ve r ä n d e r n Si e da s le t z t e Pr o gr a m m so da s s di e s e r Ou t p u t er z eu g t wi r d : ....1 ...2. ..3.. .4... 5.... 69 Ve r s c h a c h t e l t e «f o r» - Sc h l e i f e n Üb u n g Ve r ä n d e r n Si e das le t z t e Pr o g r a m m so das s di e s e r Ou t p u t er z eu g t wi r d : ....1 ...2. ..3.. .4... 5.... ( Ei n e ) An tw o r t : for ( int line = 1; line <= 5; line=line+1) { for ( int j = 1; j <= ( - 1 * line + 5); j=j+1) { System.out.print (\".\"); } System.out.print (line); for ( int j = 1; j <= (line - 1); j=j+1) { System.out.print (\".\"); } System.out.println (); } 70 Üb e r s i c h t § 2. 5 Sc h l e i f e n (L oop s ) § 2. 5. 1 « f o r » - Lo o p s § 2. 5. 2 Ve r s c h a c h t e l t e Sc h l e i f e n § 2. 5. 3 « w h i l e » - Lo o p s 71 2. 5. 3 « w h i l e » - Sc h l e i f e nKla s s if iz ie r ung vo n Sc h l e i f e n § Be s t i m m t e Sc h l e i f e (« de f i n i t e l o o p» ): An z a h l de r Au s f ü h r u n g e n de s Rum p f e s (« It e r a t io n e n ») is t vo r Beg i n n de r Au s f ü h r u n g de r Sc h l e i f e be k a nn t . § Di e « f o r » - Sc h l e i f e n wa r e n bi s he r im m e r be s t i m m t e Sc h l e i f e n . § Dr u c k e \"h e l l o \" 1 0 - ma l . § Fi n d en Si e al l e Pr i m z a hl e n < ei n er ga n z e n Za h l n . § Dr u c k e n Si e je d e ung e r a de Za h l zw i s c h e n 7 u n d 91. § Unb e s t i m m t e Sc h l e i f e (« in d ef in it e lo o p ») : An z a h l de r It e r a t io n e n is t ni c h t vo r h e r be k a nn t . Be i s p i e l e vo n unbe s t im m t e n Sc h l e i f e n § Unbe s t i m m t e Sc h l e i f e (« in d ef in it e lo o p ») : An z a h l de r It e r a t io n e n is t ni c h t vo r h e r be k a nn t . § Bei s p i el e : § Le s e n Si e d e n I n p u t v o n d e r Ko n s o l e bi s de r Be n u t z e r e in e ni c h t - ne g a t i v e ga n z e Za h l e in g e b e n ha t . § Wi e d e r h o l e n Si e b i s d e r Be n u t z e r e in «q » e in g e g e b e n ha t . § Le s e n Si e e in e Da t e i bi s dr e i au f ei n an d erf o l g en d e Sä t z e mi t e in e m «! » en d en . § Ne h m e n Si e Be i t r ä g e (v ia c r o w d f u n d in g ) en t g eg en bi s da s Zi e l e r r e ic h t is t . Di e « w h i l e » - Sc h l e i f e § Ei n e « w h i l e » - Sc h l e i f e führ t Sc h l e i f e n r u m p f so la n g e au s wi e de r bo o l e s c he Au s d r u c k te s t de n W e r t true er g i b twhile ( te s t ) { st a t e m e nt ( s ) ; } § Bei s p i el : int num = 1; // initialization while ( num * num <= 2000) { // test System.out.print ( num + \" \"); num = num * 2; // update } // output: 1 2 4 8 16 32 Di e « w h i l e » - Sc h l e i f e § Ei n e « w h i l e » - Sc h l e i f e führ t Sc h l e i f e n r u m p f so la n g e au s wi e de r bo o l e s c he Au s d r u c k te s t de n W e r t true er g i b twhile ( te s t ) { st a t e m e nt ( s ) ; } § Bei s p i el : int num = 1; while (num*num <= 2000) { System.out.print ( num + \" \"); num = num * 2; } // output: 1 2 4 8 16 32 An w e i s u n g ( e n ) im Lo o p au s f ü h re n Is t te s t wa h r ? An w e i s u n g na c h Lo o p au s f ü h re n jane i n Be i s p i e l «w h i l e » - Sc h l e i f e // finds the first factor of 91, other than 1 int n = 91; int factor = 2; while (n % factor != 0) { factor = factor + 1 ; } System.out.println (\"First factor is \" + factor); // output: First factor is 7 § while is t hi e r be s s s e r al s for we i l wi r ni c h t wi s s e n wi e of t wi r de n Zä h l e r er h ö h en mü s s e n um de n 1 . Fa k t o r zu fi n d e n Üb e r s i c h t § 2. 6 Me t h o d e n , T e i l 2 § 2. 6. 1 Met h o d e n mi t Pa r a m e t e r n § 2. 6. 2 Rü c k g a b e w e r t e § 2. 6. 3 Na m e n s r ä u m e 80 2. 6. 1 Me t h od en mi t Pa r a m e t e r n 82 «f o r» - lo o p s er l a u b en W ie de r ho lung e n § Ja v as « f o r » - lo o p An w e i s u n g wi ed er h o l t An w e i s u n g e n for (int i = 1; i <= 3; i = i + 1) { // repeat 3 times operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1; } } 83 W ie de r ve r w e n du n g dur c h M e t ho de n § We n n w i r d i e s e s P r o g r a m m w i e d e r v e r w e n d e n w o l l e n d a n n de fi ni e r e n w i r e i ne M e t ho de § Er s pa r t v i e l f a c he s S c hr e i be n de r A n w e i s ung e n § Än d e r u n g e n n u r a n e i n e r S t e l l e § Bei s p i el : public static void addTest() { // NICHT vollstaendig! for ( int i = 1; i <= 3; i = i + 1) { // repeat 3 times operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1; } } } 84 W ie de r ve r w e n du n g er f or d er t F l e x i b i l i t ä t § Di e se « Lö s u n g » lie f e r t im m e r 3 Au f g a b e n § Wa s w e n n w i r a u c h a n d e r e Ko m b i n a t i o n e n wo l l e n ? § Kö n n t e n addTest1 , addTest2 , addTest3 , . . . d e f in ie r e n § Wi r b r a u c h e n e i n e n W e g , d i e A n z a h l Wi e d e r h o l u n g e n d e r Si tu a ti o n an z u p asse n § Pa r a m e t r i s i e r u n g : mi t ( ve r ä n d e r b a r e n ) Pa r a m e t e r n ve r s e h e n 89 Pa r a m e t r i s i e r u n g § Pa r a m e t e r : Ei n We r t d e n ei n e au f g e r u f e n e Me t h o d e vo n d e r au f r u f e n d e n Me t h o d e er h ä l t . § We n n wi r e in e Met h o d e de k l a r i e r e n da nn ge b e n wi r an da s s di e s e Met h o d e e in e n Pa r a m e t e r br a uc h t addTest(int anzahl) § We n n wi r di e Met h o d e au f ru f en ge b e n wi r We r t fü r de n P a r a m e t e r a n addTest(3) od e r addTest(5) § Me t h o d e vi e l se i ti g e r ei n s e t z b a r ab e r En t w i c k l u n g an sp r u c h s v o l l e r 94 Pa r a m e t e r d e k l a r a t i o n e n Gi b t an da s s ei n e Me t h o d e ei n en Pa r a m e t e r br a uc h t um au sg e f ü h r t we r d e n zu kö n n e n public static void me t h o d Na me ( ty p e nam e ) { st a t e m e nt ; } na m e : «P a r a m e t e r V a ri a b l e » 97 ty p e : Ty p de r « P a r a m e t e r Va r i a b l e » § Ba s i s t y p (in t , d o u b le , … z. Z t .) Pa r a m e t e r d e k l a r a t i o n e n Gi b t an da s s ei n e Me t h o d e ei n en Pa r a m e t e r br a uc h t um au sg e f ü h r t we r d e n zu kö n n e n public static void me t h o d Na me ( ty p e nam e ) { st a t e m e nt ; } § Be is p ie l : public static void echoPin(int code) { System.out.println (\"Die Geheimnummer ist : \" + code); } We n n echoPin au f g eru f en wi r d da nn mu s s de r Au f r u f e r e in e n int We r t an g eb en . 99 We r t ( e ) fü r Pa r a m e t e r Bei m Au f r u f de r Me t h o d e mu s s ei n We r t für de n P a r a m e t e r an g e g e b e n we r d e n . nam e ( ex p r e s s i o n ); § Bei s p i el : public static void main(String [] args ) { echoPin(42); echoPin(12345); } § Ou t p u t Die Geheimnummer ist : 42 Die Geheimnummer ist : 12345 100 W ie we r d e n Pa r a m e t e r übe r g e be n ? § Übe r g e be n : vo m Au f r u f e r zu r au f g e r u f e n e n Me t h o d e § We n n ei n e Me t h o d e au f g e r u f e n wi r d da nn : § De r We r t wi r d in de r Pa r a m e t e r V a r i a b l e ge s p e i c h e r t § Di e An w e i s u n g e n de r Met h o d e we r d e n au s g e f ü h rt ( mi t di e s e m We r t fü r di e P a r a m e t e r V a r i a bl e ) . 101 Me t h od e mi t Pa r a m e t e r Zu r ü c k zu m Be i s p i e l : import java.util.Random ; import java.util.Scanner ; public class Beispiel { public static void main (String[] args ) { addTest (3); } // end main public static void addTest(int anzahl) { Random rand = new Random(); Scanner console = new Scanner( System.in ); int operand1; int operand2; int wrong = 0; for ( int i = 1; i <= anzahl ; i = i + 1) { // repeat anzahl times operand1 = rand.nextInt (10) + 1; operand2 = rand.nextInt (10) + 1; System.out.print (operand1 + \" + \" + operand2 + \" = \"); if ( console.nextInt () != (operand1+operand2)) { wrong = wrong + 1; } } } // end addTest } 106 Pa r a m e t e r § Ei n P a r a m e t e r i n d e r De k l a r a t i o n ei n er Me t h o d e he i s s t fo r m a l e r Pa r a m e t e r ( « f o r m a l p a r a m e t e r » ) .§ Fo r m a l P a r a m e t e r : de k l a r i e r t Va r i a b l e fü r Met h o d e § Bei m Au f r u f de r Me t h o d e mu s s ei n We r t für de n P a r a m e t e r an g e g e b e n we r d e n : nam e ( ex p r e s s i o n ); § Übe r g e be ne r We r t wi r d in P a r a m e t e r V a r ia b le ge s p e i c h e r t (d ie s o in it ia lis ie r t / de f i ni e r t wi r d ) § Übe r g e be ne r We r t he i s s t ta t s ä c h l i c h e r Ar g u m e n t W e r t (« a c t u a l a r g u m e n t v a lu e » ) od e r ta t s ä c h l i c h e r Ar g u m e n t Au s d r u c k (« a c t u a l a r g u m e n t ex p r e s s i o n » ) § Ak t u e l l : au g e n b l i c kl i c h , de r z e i t i g [ Du d e n ] § Od e r « A r gu m e n t » we n n ke i n Mi s s v e r s t ä n d n i s 107 Pa r a m e t e r V a r i a b l e Di e P a r a m e t e r V a r i a b l e ka n n in d e r Me t h o d e wi e je d e Va r i a b l e ve r w e n d e t we r d e n ( z.B . An z a h l de r It e r a t i o n e n ei n er Sc h l e i f e ko n t r o l l i e r e n ) public static void main(String [] args ) { printPunkt(3); } public static void printPunkt(int times) { for ( int i = 1; i <= times; i = i+1) { System.out.print (\".\"); } System.out.println (); } Ou t p u t : ... 108 W ie we r d e n Pa r a m e t e r übe r g e be n ? public static void main(String [] args ) { printPunkt(3); printPunkt(7); } public static void printPunkt(int times) { for ( int i = 1; i <= times; i = i+1) { System.out.print (\".\"); } System.out.println (); } 3 7 Ou t p u t : ... ....... 111 Mög l i c h e Fe h l e r § We n n ei n e Me t h o d e ei n Ar g u m e n t er w a r t e t da nn mu s s d i es es au c h übe r g e be n we r d e n . printPunkt (); // ERROR: parameter value required § De r W e r t ( bz w . Au s d r u c k ) m u s s d e n ri ch t i g e n Ty p ha be n printPunkt (3.7); // ERROR: must be of type int § Di e Re g e l n fü r U m w a n d lu n g e n ge l t e n au c h hi e r 112 Meh r er e Pa r a m e t e r § Ei n e Me t h o d e ka n n meh r er e Pa r a m e t e r de fi ni e r e n ( ge t r e n n t dur c h Ko m m a (« , » ) i n De k l a r a t i o n und im Au f r u f ) § We n n di e Met h o d e au f g eru f en wi r d mu s s e in We r t fü r jed en Pa r a m e t e r an g eg eb en we r d e n § De k l a r a t i o n : public static void me t h o d ( ty p e nam e , ... , ty p e nam e ) { st a t e m e nt ; } § Au f r u f : m e t h o d ( va l u e , va l u e , ... , va l u e ); 113 Meh r er e Pa r a m e t e r § Ei n e Me t h o d e ka n n meh r er e Pa r a m e t e r de fi ni e r e n ( ge t r e n n t dur c h Ko m m a (« , » ) i n De k l a r a t i o n und im Au f r u f ) § We n n di e Met h o d e au f g eru f en wi r d mu s s e in We r t fü r jed en Pa r a m e t e r an g eg eb en we r d e n § De k l a r a t i o n : public static void me t h o d ( ty p e 1 nam e 1 , ... , ty p e N nam e N ) { st a t e m e nt ; } § Au f r u f : m e t h o d ( va l u e 1 , va l u e 2 , ... , va l u e N ); 114 Be i s p i e l mi t me h r e r e n Pa r a m e t e r n public static void main (String[] args ) { Scanner console = new Scanner(System.in ); System.out.print(\"Input lower bound: \"); int low = console.nextInt (); System.out.print(\"Input upper bound: \"); int up = console.nextInt (); printOdd(low , up); printOdd ( - up, - low); } public static void printOdd(int from, int to) { for ( int i =from; i <=to; i = i+1) { if (i%2==1) { System.out.println(i ); } } } 115 W ie we r d e n Pa r a m e t e r übe r g e be n ? § We n n ei n e Me t h o d e au f g e r u f e n wi r d : § We r t fü r Pa r a m e t e r wi r d vo n Au f r u f e r be r e c hne t und übe r g e be n § We r t wi r d vo n au f g eru f en er Met h o d e in d e r P a r a m e t e r V a r ia b le ge s p e i c h e r t § Di e An w e i s u n g e n de r au f g eru f en en Met h o d e we r d e n au s g e f ü h rt ( an f an g s mi t di e s e m We r t fü r di e P a r a m e t e r V a r i a bl e ) . § De r W e r t , d e n d e r Au f r u f e r übe r gi b t , ka n n dur c h ei n en Au s d r u c k (E xp r e s s i on ) ge ge b e n se i n § De r W e r t d e s E x p r e s s i o n s wi r d be r e c hne t und übe r g e be n § Di e au f g eru f en e Met h o d e e r h ä lt de n W e r t und ha t ke i n e Ke n n t n i s da v o n wi e de r W e r t be r e c hne t wu r d e 117 W ie we r d e n Pa r a m e t e r übe r g e be n ? § We n n ei n e Me t h o d e au f g e r u f e n wi r d : § We r t fü r Pa r a m e t e r wi r d vo n Au f r u f e r be r e c hne t und übe r g e be n § We r t wi r d vo n au f g eru f en er Met h o d e in d e r P a r a m e t e r V a r ia b le ge s p e i c h e r t § Di e An w e i s u n g e n de r au f g eru f en en Met h o d e we r d e n au s g e f ü h rt ( an f an g s mi t di e s e m We r t fü r di e P a r a m e t e r V a r i a bl e ) . § De r W e r t , d e n d e r Au f r u f e r übe r gi b t , ka n n dur c h ei n e Va r i a b l e ge ge b e n se i n § De r W e r t d e r V a r i a b l e wi r d übe r g e be n § Di e au f g eru f en e Met h o d e e r h ä lt de n W e r t und ha t ke i n e Ke n n t n i s da v o n wo d e r W e r t he r k a m 118 Üb e r g ab e vo n We r t e n (« V a lue se m a n tic s» ) § We n n ei n ( ak tu e l l e s ) Ar g u m e n t ei n es Ba s i s t y p s ( z. B . int , double, boolean ) übe r g e be n wi r d , da nn wi r d de r W e r t vo m Au f r u f e r ko p i e r t (« v a l u e s e m a n t i c s » ) We n n de r ak t u e l l e Pa r a m e t e r dur c h ei n en Au s d r u ck be s t i m m t wi r d , da nn wi r d de r Au s d r u ck s ev a l u i e r t und da s Er g e b n i s ko p i e r t . § De r ko p i e r t e We r t in it ia lis ie r t di e P a r a m e t e r V a r i a bl e i n de r au f g e r u f e n e n Me t h o d e 120 Üb e r g ab e vo n We r t e n (« V a lue se m a n tic s» ) public static void main(String[] args ) { int k = 3; printPunkt (k); printPunkt (k+4); } public static void printPunkt(int times) { for ( int i = 1; i <= times; i = i+1) { System.out.print (“.\"); } System.out.println (); } 3 7 Ou t p u t : ... ....... 121 Üb e r g ab e vo n We r t e n (« V a lue se m a n tic s» ) § We n n ei n ( ak tu e l l e r ) P a r a m e t e r ei n es Ba s i s t y p s ( z. B . int , double , boolean ) übe r g e be n wi r d , da nn wi r d de r W e r t vo m Au f r u f e r ko p i e r t (« v a l u e s e m a n t i c s » ) § Ve r ä n d e r u n g e n de r P a r a m e t e r V a r i a bl e ( de s fo r m a l e n Pa r a m e t e r s ) i n d e r au f ger u f en en Me t h o d e ha be n ke i n e Au s w i r k u n g au f d i e au f r u f en de Me t h o d e 123 Üb e r g ab e vo n We r t e n (« V a lue se m a n tic s» ) public static void strange(int x ) { x = x + 1; System.out.println(\"1. x = \" + x ); } public static void main(String [] args ) { int x = 23; strange(x ); System.out.println(\"2. x = \" + x ); ... } Ou t p u t : 1. x = 24 2. x = 23 124 Üb e r g ab e vo n We r t e n (« V a lue se m a n tic s» ) § We n n ei n ( ak tu e l l e s ) Ar g u m e n t dur c h ei n e Va r i a b l e V ei n es Ba s i s t y p s ( int , double, boolean ) be s t i m m t wi r d da nn wi r d de r W e r t di e s e r Va r i a b l e ko p i e r t (« v a l u e s e m a n t i c s » ): § Na m e d e r V a r i a b l e V ( od e r de s fo r m a l e n Pa r a m e t e r s ) is t un w i c h t i g . 128 \"P a r a m e t e r Üb e r g a b e \" P r o b le m public class ParameterMystery { public static void main(String [] args ) { int x = 9; int y = 2; int z = 5; mystery(z , y , x ); mystery(y , x , z ); } public static void mystery(int x , int z , int y ) { System.out.println(z + \" and \" + ( y - x )); } } x y z 9 2 5 5 2 9 5 2 9 Ou t p u t : 2 a n d 4 x yz 131 \"P a r a m e t e r Üb e r g a b e \" P r o b le m public class ParameterMystery { public static void main(String [] args ) { int x = 9; int y = 2; int z = 5; mystery(z , y , x ); mystery(y , x , z ); } public static void mystery(int x , int z , int y ) { System.out.println(z + \" and \" + ( y - x )); } } 2 9 5 2 9 5 Ou t p u t : 9 a n d 3 x yz 132 x y z 9 2 5 2. 6. 2 Er g e b n i s Rü c kg ab e fü r Me t h od en 135 import java.util .*; class PrintPrimes1 { public static void main (String[] args ) { Scanner console = new Scanner( System.in ); System.out.print (\"Input max: \"); int max = console.nextInt (); if (max >= 2) { printPrimes (max); } } public static void printPrimes ( int limit) // Prints all prime numbers up to limit, limit >= 2 System.out.print (\"2\"); for (int i = 3; i <= limit; i = i + 1 ) { if ( /* isPrime ( i ) */ ) { System.out.print (\", \" + i ); } } System.out.println (); // to end output } } 136 Er g e b n i s Rü c kg ab e § Pa r a m e t e r er l a u b en Ko m m u n i k a t i o n vo m Au f r u f e r zu r au f g e r u f e n e n Me t h o d e § Bi s h e r wa r e n di e Met h o d e n se h r e in f a c h § Met h o d e al s «E r s a t z» fü r An w e i s u n g e n in main ( od e r an d e r e r Me t h o d e ) § Met h o d e n kö n n e n ab er me h r … § Ei n Rüc k g a be w e r t (« r e t u r n v a l u e » ) er l a u b t de r au f g e r u f e n e n Me t h o d e de m Au f r u f e r ei n en We r t zu übe r m i t t e l n § Da m i t er ö f f n en s ic h ne ue Mö g l i c h k e i t e n de r Ko m p o s i t i o n 137140 { … name ( 7+i, true); … } public static name( int k, boolean b) { int result; while (k < 10) { k=k+1; … } if (b) { … } // result } 141 { … name ( 7+i, true); … } public static name( int k, boolean b) { int result; while (k < 10) { k=k+1; … } if (b) { … } // result } Rü c kg ab e ei n es We r t e s § Ei n Rüc k g a be w e r t mu s s de k l a r i e r t we r d e n public static ty p e na m e ( par am e t e r s ) { st a t e m e nt s ; ... return ex p r e s s i o n ; } § Es ge l t e n di e se l b e n Re g e l n für ty p e wi e be i de r De k l a r a t i o n vo n Va r i a b l e n und Pa r a m e t e r n § Ke y w o r d void be de ut e t : ke i n Rüc k g a be w e r t 142 Rü c kg ab e an w e i s u n g § Da s «r e t u rn » - St a t e m e n t ( « Rüc k g a be An w e i s u n g ») we r t e t ei n en Au s d r u c k au s § De r W e r t wi r d da nn an d e n Au f r u f e r « zu r ü c k g e g e b e n » § De r Au s d r u c k mu s s ei n en We r t d e s Ty p s ty p e (d e r Me t h o d e n De k l a r a t i o n ) er g eb en . § Di e Au s f ü h r u n g de r «r e t u rn » - An w e i s u n g be e nde t di e au f g e r u f e n e Me t h o d e . 145 Rü c kg ab e an w e i s u n g ( «r e t u rn » - St a t e m e n t ) § return : L i ef e r e ei n en We r t ab al s da s Er g e b n i s di e s e r Me t h o d e § « se n d e » d a s Er g e bni s zu m Au f r u f e r § Da s Ge g e n s t ü c k zu Pa r a m e t e r n : § Pa r a m e t e r s s c h ic k e n We r t e in di e au f g eru f en e Met h o d e , vo m Au f r u f e r § Rü c k g a b e w e r t e s c h ic k e n We r t e aus de r Met h o d e zu m Au f r u f e r § Ei n Me t h o d e n a u f r u f ka n n Te i l ei n es Au s d r u ck s se i n . § Au f r u f e r mu s s d e n W e r t « an n e h m e n » 146147 { … int size = name ( 7+i, true); … } public static int name( int k, boolean b) { int result; while (k < 10) { k=k+1; … } if (b) { … } return result; } Be i s p i e l l ö s u n g mi t Rü c kg a b e ei n es We r t e s public static boolean isPrime (int arg){ // Determine how many factors the given number has. boolean found = false; int step = 2; while (!found) { if (arg % step == 0) { found = true; // factor found } else { step = step + 1; // keep on searching } } // factor == arg: prime found return (step == arg); } 149 Rü c kg ab e ei n es We r t e s Bei s p i el : // Returns the slope of the line between the given points. public static double slope(int x1, int y1, int x2, int y2) { double dy = y2 - y1; double dx = x2 - x1; return dy / dx ; } slope(1, 3, 5, 11) lie f e r t 2.0 150 return oh n e ei n en We r t § We n n ei n e Me t h o d e ke i n e n We r t zu r ü c k lie f e r t da nn br a uc h t ei n «r e t u rn » - St a t e m e n t ke i n e n We r t zu sc h i c k e n . public static void printPoint(int x , int y ) { System.out.println(“x = “ + x + “ y = “ + y ) ; return; } § In d e m F a ll ka n n ma n d a s «r e t u rn » - St a t e m e n t au c h we g l a s s e n ( mei n e Em p f e h l u n g ) 151 We i t e r e Be i s p i e l e // Converts degrees Fahrenheit to Celsius. public static double fToC(double degreesF ) { double degreesC = 5.0 / 9.0 * ( degreesF - 32); return degreesC ; } // Computes triangle hypotenuse length given its side lengths. public static double hypotenuse(int a, int b ) { double c = squareRoot (a * a + b * b); return c ; } 152 We i t e r e Be i s p i e l e Ei n « re t u r n » - St a t e m e n t ka n n au c h ei n en ( ar i th m e ti sc h e n od e r bo o l e s c he n ) Au s d r u c k ve r w e n d e n public static double fToC(double degreesF ) { return 5.0 / 9.0 * ( degreesF - 32); } 153 Mö g l i c h e Fe h l e r : Re s u l t a t ni c h t ge s p e i c h e r t § Ei n «r e t u rn » - St a t e m e n t sc h i c k t ei n en We r t a n d e n Au f r u f e r § Na m e n , d i e i n d e r au f g e r u f e n e n Me t h o d e ve r w e n d e t we r d e n , si n d be l a ngl o s ( für de n Au f r u f e r ) 154 Wa s is t hi e r ni c h t ri ch ti g ? public static void main(String [] args ) { slope(0, 0, 6, 3); // Problem: return value not used/stored } public static double slope(int x1, int x2, int y1, int y2) { double dy = y2 - y1; double dx = x2 - x1; double result = dy / dx ; return result; } 155 Wa s is t hi e r ni c h t ri ch ti g ? public static void main(String [] args ) { slope(0, 0, 6, 3); System.out.println(\"The slope is \" + result ); // ERROR: } // result not defined public static double slope(int x1, int x2, int y1, int y2) { double dy = y2 - y1; double dx = x2 - x1; double result = dy / dx ; return result; } 156 De n Fe h l e r ve r m e i d e n § return sc h i c k t de n We r t de r V a r i a bl e zu r ü c k zu m Au f r u f e r . § De r zu r ü c k g e g e b e n e We r t m u s s ge s p e i c h e r t we r d e n – od e r in e in e m Au s d r u c k ve r w e n d e t we r d e n . § De r Co mp i l er ge n e r i e r t ke i n e Wa r n u n g od e r Fe h l e r m e l d u n g we n n di e s ve r g e s s e n wi r d . 157 De n Fe h l e r ve r m e i d e n public static void main(String [] args ) { double s = slope(0, 0, 6, 3); System.out.println(\"The slope is \" + s ); } public static double slope(int x1, int x2, int y1, int y2) { double dy = y2 - y1; double dx = x2 - x1; double result = dy / dx ; return result; } 158 «r e t u rn » - An w e is ung e n § Ei n e Me t h o d e ka n n meh r er e «r e t u rn » - An w e i s u n g e n en t h a l t en . § Si n n v o l l fü r Fa l l u n t e r s c h e i d u n g e n § Ei n e Me t h o d e di e ei n en Rüc k g a be w e r t de k l a r i e r t mu ss ei n e ( od e r meh r er e ) «r e t u rn » - An w e i s u n g ( en ) en t h a l t en 159 if/else mi t return // Returns the larger of the two given integers. public static int max( int a, int b) { if (a > b) { return a; } else { return b; } } § Me t h o d e n kö n n e n ei n «r e t u rn » - St a t e m e n t i n dur c h if/else ko n t r o l l i e r t e n Bl ö c k en en t h a l t en § Da s «r e t u r n » - St a t e m e n t am E n d e e in e s Pf a d e s lie f e r t de n Rü c k g a b e w e r t fü r di e s e Met h o d e . 160 if/else mi t return § Di e Au s f ü h r u n g ei n es «r e t u rn » - St a t e m e n ts be e nde t di e au f g e r u f e n e Me t h o d e . § Ei ne m return s o llt e n ke i n e we i t e r e n An w e i s u n g e n fo l g e n § Al l e Pf a d e dur c h ei n e Me t h o d e mü s s en ei n «r e t u rn » - St a t e m e n t en t h a l t en § We n n di e Met h o d e e in e n Rü c k g a b e w e r t de k l a r i e r t ha t 161 Alle Pf a d e … public static int max( int a, int b) { if (a > b) { return a; } // Error: not all paths return a value } § De r Co mp i l er is t ma n c h ma l na i v : public static int max( int a, int b) { if (a > b) { return a; } else if (b >= a) { return b; } } De r Com p i l e r me i n t da s s es e in e n Pf a d oh n e return gi b t . 162 So v e r s t e h t Ja v a d a s Pr o g r a m m int foo(int a) { if (a > 0) { return a; } else { if (a <= 0) { return - a; } } } 163 \"i f \" au s f ü h r e n : re t u r n a Is t a> 0 wa h r ? Ke i n e we i t e r e n An w ei s u n g en ja ne i n \"e l s e \" au s f ü h r e n : au s f ü h r e n : re t u r n - a Is t a< = 0 wa h r ? Ke i n e we i t e r e n An w ei s u n g en jane i n So v e r s t e h t Ja v a d a s Pr o g r a m m int foo(int a) { if (a > 0) { return a; } else { if (a <= 0) { return - a; } } } 164 \"i f \" au s f ü h r e n : re t u r n a Is t a> 0 wa h r ? Ke i n e we i t e r e n An w ei s u n g en ja ne i n \"e l s e \" au s f ü h r e n : au s f ü h r e n : re t u r n - a Is t a< = 0 wa h r ? Ke i n e we i t e r e n An w ei s u n g en jane i n J e d e r Pf a d i s t mö g l i c h : D a h e r Fe h l e r m e l d u n g if/else , return Be i s p i e l § Sc h r e i b e n Si e ei n e Me t h o d e quadrant di e für ei n Pa a r vo n re e l l e n Za h le n de n Qu a d r a n t e n lie f e r t in de m di e s e r Punk t lie g t . § Be i s p i e l : quadrant( - 4.2, 17.3) lie f e r t 2 § Fä l l t de r Pu n k t au f e in e de r Ac h s e n de s Ko o r d i n a t e n s y s t e m s lie f e r e 0 . x+ x - y+ y - qu a dr a n t 1 qu a dr a n t 2 qu a dr a n t 3 qu a dr a n t 4 167 if/else , return Be i s p i e l § Sc h r e i b e n Si e ei n e Me t h o d e quadrant di e für ei n Pa a r vo n re e l l e n Za h le n de n Qu a d r a n t e n lie f e r t in de m di e s e r Punk t lie g t . § Be i s p i e l : quadrant( - 4.2, 17.3) lie f e r t 2 § Fä l l t de r Pu n k t au f e in e de r Ac h s e n de s Ko o r d i n a t e n s y s t e m s lie f e r e 0 . x+ x - y+ y - qu a dr a n t 1 qu a dr a n t 2 qu a dr a n t 3 qu a dr a n t 4 169 Sc h r e i b e n Si e I h r e Lö s u n g a ls Cl i c k e r An tw o r t! if/else , return Be i s p i e l public static int quadrant( double x, double y ) { } 171 if/else , return Be i s p i e l l ö s u n g public static int quadrant(double x, double y) { if (x > 0 && y > 0) { return 1; } else if (x < 0 && y > 0) { return 2; } else if (x < 0 && y < 0) { return 3; } else if (x > 0 && y < 0) { return 4; } else { // at least one coordinate equals 0 return 0; } } 172 if/else , return Be i s p i e l l ö s u n g public static int quadrant(double x, double y) { if (x > 0.0 && y > 0.0) { return 1; } else if (x < 0.0 && y > 0.0) { return 2; } else if (x < 0.0 && y < 0.0) { return 3; } else if (x > 0.0 && y < 0.0) { return 4; } else { // at least one coordinate equals 0 return 0; } } 173 if/else , return we i t e r e Be i s p i e l e § Sc h r e i b e n Si e ei n e Me t h o d e countFactors di e di e An z a h l de r Fa k t o r e n ( Te i l e r ) ei n er Za h l lie f e r t . § countFactors(24) lie f e r t 8 da 1, 2, 3, 4, 6, 8, 12, u n d 24 al l e Te i l e r vo n 2 4 s in d . 174 if/else , return we i t e r e Be i s p i e l e § Lö s u n g : // Returns how many factors the given number has. public static int countFactors(int number) { int count = 0; for (int i = 1; i <= number; i = i + 1 ) { if (number % i == 0) { count = count + 1 ; // i is a factor of number } } return count; } 175 wp ( S , Q ) : W a s i s t d i e w ea k es t p r ec o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e rf l o w 1. x = x + 1; // S ist ein Statement { x > 0 } // Q 2. k = j * 2; // S ist eine Folge von Statements m = k + 1; { k > 0 && m <= 3} // Q 3. if (y > x) { // S ist ein if - Statement max = y; } else { max = x; } { max >= x && max >= y} // Q 89 Po l l wp ( S , Q ) : W a s i s t d i e w e a k e s t p r e c o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e r f l o w 1. { x > - 1 } x = x + 1; { x > 0 } 2. { j == 1} k = j * 2; m = k + 1; { k > 0 && m <= 3} 3. { (b && wp ( S1 , Q ) ) || (!b && wp ( S2 , Q ) ) } if (y > x) { max = y; } else { max = x; } { max >= x && max >= y} 90 Po l l wp ( S , Q ) : W a s i s t d i e w e a k e s t p r e c o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e r f l o w 1. { x > - 1 } x = x + 1; { x > 0 } 2. { j == 1} k = j * 2; m = k + 1; { k > 0 && m <= 3} 3. { (b && wp ( S1 , Q ) ) || … } if (y > x) { max = y; } else { max = x; } { max >= x && max >= y} 91 Po l l wp ( S , Q ) : W a s i s t d i e w e a k e s t p r e c o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e r f l o w 1. { x > - 1 } x = x + 1; { x > 0 } 2. { j == 1} k = j * 2; m = k + 1; { k > 0 && m <= 3} 3. { (y>x && wp ( max=y , max>=x && max>=y ) ) || … } if (y > x) { max = y; } else { max = x; } { max >= x && max >= y} 92 Po l l wp ( S , Q ) : W a s i s t d i e w e a k e s t p r e c o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e r f l o w 1. { x > - 1 } x = x + 1; { x > 0 } 2. { j == 1} k = j * 2; m = k + 1; { k > 0 && m <= 3} 3. { (y>x && y>=x && y>=y) || … } if (y > x) { max = y; } else { max = x; } { max >= x && max >= y} 93 Po l l wp ( S , Q ) : W a s i s t d i e w e a k e s t p r e c o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e r f l o w 1. { x > - 1 } x = x + 1; { x > 0 } 2. { j == 1} k = j * 2; m = k + 1; { k > 0 && m <= 3} 3. { (y>x) || (y<=x) } if (y > x) { max = y; } else { max = x; } { max >= x && max >= y} 94 Po l l wp ( S , Q ) : W a s i s t d i e w e a k e s t p r e c o n d i t i o n ? Al l e s int Va r i a b l e , k e i n O v e r - /U n d e r f l o w 1. { x > - 1 } x = x + 1; { x > 0 } 2. { j == 1} k = j * 2; m = k + 1; { k > 0 && m <= 3} 3. { true } if (y > x) { max = y; } else { max = x; } { max >= x && max >= y} 95 Po l l","libVersion":"0.3.1","langs":""}