{"path":"sem3/EProg/VRL/extra/slides/EProg-slides-w03.pdf","text":"252-0027 Einführung in die Programmierung Übungen Woche 3: Einführung Java Vorname Nachname Departement Informatik ETH Zürich Organisatorisches ▪ Mein Name: Vorname Nachname ▪ Bei Fragen: ETH - Mail ▪ Mails bitte mit «[EProg24]» im Betreff ▪ Neue Aufgaben: Dienstag Abend (im Normalfall) ▪ Abgabe der Übungen bis Dienstag Abend (23:59) Folgewoche ▪ Abgabe immer via Git ▪ Lösungen in separatem Projekt auf Git 2 Theorie Auswertung – Arithmetische Operatoren Operator Beschreibung Kurzbeispiel + Addition int antwort = 40 + 2; - Subtraktion int antwort = 48 - 6; * Multiplikation int antwort = 2 * 21; / Division int antwort = 84 / 2; % Teilerrest, Modulo-Operation, errechnet den Rest einer Division int antwort = 99 % 57; + positives Vorzeichen int j = +3; - negatives Vorzeichen int minusJ = -j; Assoziativität ▪ Die Assoziativität («associativity») eines Operators bestimmt, wie ein Operand verwendet wird ▪ Ist ein Operator ⨂ ▪ Linksassoziativ («left-associative») ➜ X ⨂ Y ⨂ Z gleich (X ⨂ Y) ⨂ Z ▪ Rechtsassoziativ («right-associative») ➜ X ⨂ Y ⨂ Z gleich X ⨂ (Y ⨂ Z) 5 Auswertung – OrdnungOperanden und Operatoren § Operand wird vom Operator mit höherer Rang Ordnung (“precedence”) verwendet § Wenn zwei Operatoren die selbe Rang Ordnung haben, dann entscheidet die Assoziativität § Wenn zwei Operatoren die selbe Rang Ordnung und Assoziativität haben, dann werden die (Teil)Ausdrücke von links nach rechts ausgewertet. § Wenn etwas anderes gewünscht wird: Klammern verwenden! 194 ( ) * / % + - + - Auswertung – Beispiele * / % ( ) Output: 1.5 Auswertung – Beispiele + - * / % ( ) Output: 5.5 Auswertung – Casting + - * / % ( ) Output: 2.5 Auswertung – String Output: Wir schreiben das Jahr 2022.0 + - * / % ( )Auswertung – Prüfungsbeispiel + - * / % ( ) Output: 9X16 Auswertung – Prüfungsbeispiel + - * / % ( ) Output: Wir schreiben das Jahr 200024 Aufgabe 1 13760 Aufgabe 2 145.5 Kurzschlussauswertung («short-circuit evaluation») Bei Berechnung von p && q und p || q ▪ Java wertet zuerst den linken Operanden (p) und dann den rechten (q) aus ▪ die Auswertung wird beendet, sobald das Ergebnis feststeht. ▪ Bei p && q: Falls p == false, dann ist p && q == false ▪ Bei p || q: Falls p == true, dann ist p || q == true 21 p q p && q true true true true false false false true false false false false p || q true true true false p q true true true false false true false false In diesen Fällen ist keine Auswertung von q nötig! KahootNachbesprechung Übung 1 Weitere Fragen zu Eclipse oder Git? (Interactive) Lösung Übung 1, Aufgabe 2 /* * Author: Maximiliana Muster * für Einführung in die Programmierung */ public class HelloProgrammer { public static void main(String[] args) { System.out.println(\"Hello, my name is Max!\"); } } Lösung Übung 1, Aufgabe 4Lösung Übung 1, Aufgabe 4Lösung Übung 1, Aufgabe 4Lösung Übung 1, Aufgabe 4Lösung Übung 1, Aufgabe 4 Vorbesprechung Übung 2 Aufgabe 1: FehlerbehebungAufgabe 2: Schweizerfahne Aufgabe 3: Eingabe und Zufall Aufgabe 4: Berechnung 2. 3. Aufgabe 5: EBNFAufgabe 5: EBNF","libVersion":"0.3.2","langs":""}