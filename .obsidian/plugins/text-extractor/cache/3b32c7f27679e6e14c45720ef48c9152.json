{"path":"sem1/EProg/VRL/extra/slides/EProg_s01_ebnf.pdf","text":"252-0027 Einführung in die Programmierung 1.0 EBNF Thomas R. Gross Department Informatik ETH Zürich Programmierung § Eine Programmiersprache gibt uns vor, wie wir Lösung(en) eines Problems beschreiben können. § Mehr Einschränkungen (in der Sprache) machen die Kommunikation leichter § …. und erfordern mehr Aufwand bei der Entwicklung § Genaue Beschreibung (von Programmiersprachen, Werten, Input, ...) wichtiges Thema für Informatik 2 Programmiersprachen § Bestimmen die Anweisungen, die ein Programm enthalten darf § Bestimmen Formate und Wertebereiche, mit denen Programme arbeiten 3 Beispiel § Ein Programm liest für jeden Stellungspflichtigen die Körpergrösse einlesen (und mehr: Taillenumfang ...) § In cm (178), m (1.78 oder 1,78), oder mm (1780)? § Mit welcher Genauigkeit (178.2 cm, 1782 mm, 18 dm)? § Für alle gleich? (178 cm, 178.0 cm falls nur 3 Ziffern) § Welche Darstellung (1.782E+03 mm, 1782 mm, 1'782 mm) Viele Optionen ... für ein einfaches Problem! 4 Beispiel § Wie können wir die erlaubten Formate beschreiben? § Muss präzise und verständlich sein § Erlaubte Werte (in einem Format) sind eine Sprache § Beschreibung durch Text (in D or E?) -- Missverständnisse möglich § Formale Beschreibung (kann automatisch überprüft werden) besser § Häufiges Problem ... auch Programmiersprache muss beschrieben werden § Am besten ein Formalismus (Menge an Regeln) 5 EBNF Notation zur Beschreibung von Sprachen § … auch Programmiersprachen (müssen damit aber warten) E – Extended B – Backus N – Naur oder Normal F – Form § Beschreibt die Syntax einer Sprache § Form/Struktur – nichts über die Bedeutung § Food for thought: Welche Sprachen kann man damit beschreiben? 6 Es gibt Gründe für EBNF in EProg § Praktische Beweise relevanter Eigenschaften § Beispiele kommen noch … § Jede EBNF Beschreibung hat zwei Seiten § Liefert eine Menge von Symbolen (die der EBNF Beschreibung genügen) § «Programmierung im ganz Kleinen» § Erlaubt zu prüfen ob ein Symbol der EBNF Beschreibung genügt § «Genügt»: (informell) der Beschreibung entsprechend § «Symbol»: (informell) Zeichen oder Zeichenfolge 9 Übersicht § Sie lernen die vier elementaren Ausdrucksmöglichkeiten in EBNF kennen § Sie lernen EBNF Beschreibungen zu lesen und verstehen § Sie lernen zu entscheiden ob ein Symbol legal ist (für eine EBNF Beschreibung) § …. 10 EBNF § Programmierung im ganz Kleinen § Vier Elemente («control forms») die Sie in Java wiederfinden werden § Aufreihung («sequence») § Entscheidung («decision») – Auswahl und Option § Wiederholung («repetition») § Rekursion («recursion») 14 EBNF § Beschreibungen haben einen Namen und diese Namen können wieder verwendet werden § Um kompliziertere Beschreibungen zu erstellen § Erstellen einer EBNF Beschreibung ßà Programmieren in Java § Ähnliche Schritte § EBNF eine formale Beschreibung § Präzise und verständlich 15 1.1 EBNF Regeln und Beschreibungen § EBNF Beschreibung besteht aus Menge von EBNF Regeln § Menge: Reihenfolge der Regeln unwichtig § Jede Regel gibt an welche Symbole erlaubt sind § Beispiel: EBNF Regel für eine Ziffer § EBNF Beschreibung gibt an welche Symbole erlaubt sind § Erlaubt: den Regeln entsprechend gebildet § Wir werden das noch präzisieren § Beispiel: EBNF Beschreibung für 2-stellige positive ganze Zahlen § Verwendet (möglicherweise) EBNF Regeln für Ziffern 16 Wie sieht eine EBNF Regel aus? § Drei Bestandteile: § Linke-Seite (Left-Hand Side, LHS) § Rechte-Seite (Right-Hand Side, RHS) § ⟸ ⟸ trennt LHS von RHS, ausgesprochen «ist definiert als» § d.h LHS ⟸ RHS § LHS § Ein Wort (kursiv, kleingeschrieben) – der Name der EBNF Regel 20 § RHS § Die genaue Beschreibung für den Namen (d.h., der LHS) § Kann enthalten § Zeichen (stellen das Zeichen da, d.h. wir erwarten dieses Zeichen und kein anderes) § … 21 Beispiel EBNF Regel 22 Beispiel EBNF Regel § ziffer_null ⟸ 0 § ziffer_eins ⟸ 1 § ziffer_null ⟸ 0 ziffer_eins ⟸ 1 23 § RHS § Die genaue Beschreibung für den Namen (d.h., der LHS) § Kann enthalten § Zeichen (stellen das Zeichen da, d.h. wir erwarten dieses Zeichen und kein anderes) § Namen (von EBNF Regeln) § ... 24 Beispiel EBNF Regel § ziffer_null ⟸ 0 § ziffer_eins ⟸ 1 § ziffer_null ⟸ 0 zahl_n0 ⟸ ziffer_null 25 § RHS § Die genaue Beschreibung für den Namen (d.h., der LHS) § Kann enthalten § Zeichen (stellen das Zeichen da, d.h. wir erwarten dieses Zeichen und kein anderes) § Namen (von EBNF Regeln) § Kombinationen der vier Kontrolelemente («control forms») (auf folgenden Seiten) 26 § EBNF Regel besteht aus: § Linke-Seite (Left-Hand Side, LHS) § Rechte-Seite (Right-Hand Side, RHS) § ⟸ (trennt LHS von RHS, ausgesprochen «ist definiert als») § LHS § Ein Wort (kursiv, kleingeschrieben) – der Name der EBNF Regel § RHS § Die genaue Beschreibung für den Namen (d.h., der LHS) durch § Namen (von EBNF Regeln) – kursiv und kleingeschrieben § Zeichen (stellen das Zeichen da, d.h. wir erwarten dieses Zeichen und kein anderes) – nicht kursiv § Kombinationen der vier Kontrolelemente («control forms») (auf folgenden Seiten) 27 Müssen wir ein Alphabet angeben? § Gibt es «Zwischenräume»? § Nur wenn Sie dafür ein (oder mehr) Zeichen definieren 31 EBNF – statt kursiv zwei Klammern § digit_9 ⟸ 9 § <digit_9> ⟸ 9 33 EBNF § Vier Kombinationsmöglichkeiten («control forms») die Sie in Java wiederfinden werden § Aufreihung («sequence») § Entscheidung («decision») – Auswahl und Option § Wiederholung («repetition») § Rekursion («recursion») § Kombinieren (in der RHS) EBNF Regeln 37 1.1.1 Control form: Aufreihung § Aufreihung («sequence») § Folge von Zeichen («Buchstabe», «Ziffern», …) § Von links nach rechts gelesen § Reihenfolge der Zeichen ist wichtig § Aufreihung Beispiel 38 buchstabe_d ⟸ D buchstabe_2 ⟸ 2 buchstabe_8 ⟸ 8 raum_1 ⟸ buchstabe_d buchstabe_2 buchstabe_8 Beschreibung: Menge von Regeln § Aufreihung § Regel von links nach rechts gelesen § Reihenfolge der Zeichen ist wichtig § Aufreihung Beispiel – verschiedene Mengen, selbes Symbol 39 Menge1 buchstabe_8 ⟸ 8 raum_1 ⟸ buchstabe_d buchstabe_2 buchstabe_8 buchstabe_2 ⟸ 2 buchstabe_d ⟸ D Menge3 Menge4 raum_1 ⟸ D 2 8 buchstabe_d ⟸ D buchstabe_8 ⟸ 8 raum_1 ⟸ buchstabe_d buchstabe_2 buchstabe_8 buchstabe_2 ⟸ 2 Menge2 1.1.2 Kombinieren mit Entscheidungen § Auswahl – aus Alternativen § Eine Menge von Alternativen § Reihenfolge unwichtig § Durch | (gesprochen senkrechter Strich) («stroke») getrennt § Alternativen folgen den EBNF Bestimmungen für die RHS (Rechte- Seite) § Auswahl Beispiel digit ⟸ 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 raum ⟸ E 12 | D 28 40 buchstabe_d ⟸ D buchstabe_2 ⟸ 2 buchstabe_8 ⟸ 8 buchstabe_e ⟸ E buchstabe_1 ⟸ 1 raum_1 ⟸ buchstabe_d buchstabe_2 buchstabe_8 raum_2 ⟸ buchstabe_e buchstabe_1 buchstabe_2 raum ⟸ raum_1 | raum_2 41 Wofür wir ( und ) brauchen § A B | C § Was ist legal? § AB und C oder § AC und AB § Um Unklarheit zu vermeiden verwenden wir ( und ) § A ( B | C ) § (A B ) | C § Klammer schafft Klarheit 43 Kombinieren mit Optionen § Option § Element(e) in [ und ] (eckige Klammern) («square bracket») § Element muss EBNF Bestimmungen für die RHS folgen § Kann gewählt werden, muss aber nicht § Drei Beispiele § initials ⟸ T [ R ] G § raum ⟸ M L [ ( D 28 ) | ( E 12 ) ] § zahl ⟸ 0 x 0 [ 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 ] 44 Beispiel § Oft Auswahl (..|..) und Option ([ .. ]) kombiniert § EBNF Beschreibung zahl digit ⟸ 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 vorzeichen ⟸ [ + | - ] zahl ⟸ vorzeichen digit § 1, +2, -3, +0, 4 … sind legale Symbole § Wie drücken wir aus, dass nicht gewählt wurde? § 𝛆 (Ausgesprochen «epsilon») – die leere Zeichenfolge § 𝛆 erscheint nicht in Symbolen 45 Ist +4 legal? Ist 4 legal? 1. zahl ⟸ vorzeichen digit 2. zahl ⟸ + digit 3. zahl ⟸ + 4 47 1. zahl ⟸ vorzeichen digit 2. zahl ⟸ 𝛆 digit 3. zahl ⟸ 4 digit ⟸ 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 vorzeichen ⟸ [ + | - ] zahl ⟸ vorzeichen digit Wenn nicht gewählt wird § raum ⟸ M L [ ( D 28 ) | ( E 12 ) ] § [ … ] kann gewählt werden, muss aber nicht § M L ist mögliches Symbol § Vielfältige Kombinationsmöglichkeiten zahlen ⟸ [ 0 | 1 ] [ 2 | 3 ] Z Möglich sind: 02Z 03Z 12Z 13Z Z 48 Wenn nicht gewählt wird § raum ⟸ M L [ ( D 28 ) | ( E 12 ) ] § [ … ] kann gewählt werden, muss aber nicht § M L ist mögliches Symbol § Vielfältige Kombinationsmöglichkeiten zahlen ⟸ [ 0 | 1 ] [ 2 | 3 ] Z Möglich sind: 02Z 03Z 12Z 13Z 49 Wenn nicht gewählt wird § raum ⟸ M L [ ( D 28 ) | ( E 12 ) ] § [ … ] kann gewählt werden, muss aber nicht § M L ist mögliches Symbol § Vielfältige Kombinationsmöglichkeiten zahlen ⟸ [ 0 | 1 ] [ 2 | 3 ] Z Möglich sind: 02Z 03Z 12Z 13Z 0Z 1Z 2Z 3Z 50 Wenn nicht gewählt wird § raum ⟸ M L [ ( D 28 ) | ( E 12 ) ] § [ … ] kann gewählt werden, muss aber nicht § M L ist mögliches Symbol § Vielfältige Kombinationsmöglichkeiten zahlen ⟸ [ 0 | 1 ] [ 2 | 3 ] Z Möglich sind: 02Z 03Z 12Z 13Z 0Z 1Z 2Z 3Z Z 51","libVersion":"0.5.0","langs":""}