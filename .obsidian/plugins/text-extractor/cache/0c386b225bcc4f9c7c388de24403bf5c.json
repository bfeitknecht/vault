{"path":"sem2a/AuW/UE/u/s/AuW-u02-s.pdf","text":"ETH Z¨urich Institute of Theoretical Computer Science Prof. Rasmus Kyng Prof. Angelika Steger FS 2024 Algorithmen und Wahrscheinlichkeit Theorie-Aufgaben 3 — L¨osung Aufgabe 1 – Jass-Karten (a) Der wohl leichteste und eﬃzienteste Algorithmus besteht daraus, ‘Ja’ auszugeben und den Algorithmus zu beenden. Die Korrektheit folgt aus Aufgabenteil (b). (b) Wir modellieren das Problem graphentheoretisch: Wir konstruieren einen bipartiten Graphen G, mit Knotenklassen W und S. Die Klasse W besteht aus 9 Knoten, namentlich den neun Werten 6, 7, 8, 9, 10, Under, Ober, K¨onig, Ass. Die Klasse S besteht ebenfalls aus neun Knoten, n¨amlich den neun Stapeln S1, . . . , S9. F¨ur Wi ∈ W und Si ∈ S f¨ugen wir die Kante {Wi, Si} genau dann ein, wenn der Wert Wi im Stapel Si vorkommt. Der so konstruierte Graph G ist oﬀensichtlich bipartit. Es ist nun leicht einzusehen, dass eine Kartenauswahl, die aus jedem Stapel eine Karte enth¨alt und eine vollst¨andigen Strasse ergibt, genau einem perfekten Matching zwischen W und S entspricht. Es bleibt also zu beweisen, dass G ein perfektes Matching enth¨alt und dieses algo- rithmisch eﬃzient zu ﬁnden. Wir beweisen zun¨achst die Existenz eines perfekten Matchings. Da unser Graph G bipartit ist, gen¨ugt es zu zeigen, dass G Halls Bedingung erf¨ullt - also dass f¨ur alle X ⊆ W gilt, dass |NG(X)| ≥ |X|. Betrachten wir also eine Menge X ⊆ W von Werten. Nach Deﬁnition des Graphen G m¨ussen f¨ur jedes Wi ∈ X alle vier Karten vom Wert Wi in den Stapeln aus NG(X) enthalten sein. Die Stapel aus NG(X) m¨ussen zusammen also mindestens 4|X| Karten enthalten. Andererseits enthalten sie genau 4|NG(X)| Karten, da ja jeder Stapel genau 4 Karten enth¨alt. Also ist 4|NG(X)| ≥ 4|X|, woraus wie gew¨unscht |NG(X)| ≥ |X| folgt. Damit ist Halls Bedingung erf¨ullt, und G enth¨alt nach dem Satz von Hall ein perfektes Matching. Ausserdem k¨onnen wir dieses mit dem in der Vorlesung diskutierten Algorithmus in Zeit O(n · m) ﬁnden, bzw. sogar in Zeit O(√n · m). Das gefundene Matching l¨asst sich leicht in eine vollst¨andige Strasse ¨uberf¨uhren. Ein alternativer Beweis k¨onnte statt G auch einen Multigraphen konstruieren, der Kanten mehrfach enth¨alt, wenn ein Wert mehrfach auf einem Stapel vorkommt. Der so entstehen- de Multigraph ist 4-regul¨ar, wir k¨onnen also im Prinzip den Satz von K¨onig (Satz 1.49 im Skript) anwenden. Dazu m¨ussten wir jedoch erst zeigen, dass der Satz von K¨onig auch f¨ur Multigraphen gilt, was ¨ahnlich aufwendig ist wie die direkte Anwendung des Satzes von Hall. Tats¨achlich funktioniert der in der Vorlesung angegebene Algorithmus (Satz 1.49) auch in Multigraphen, sodass wir auf diese Weise sogar einen Laufzeit O(m) erreichen, wobei m hier die Zahl der Spielkarten ist (vorausgesetzt, dass die Zahl der Werte eine Zweierpotenz ist).","libVersion":"0.3.2","langs":""}