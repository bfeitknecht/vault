{"path":"sem4/CN/PV/exams/CN-FS21.pdf","text":"Final Exam 252-0064-00L Computer Networks 2021 Summer 2021: Thursday, 12 August 2021, 09:30 - 11:30, HIL G41 and G61 Last Name, First Name: Student Identiﬁcation Number: Student Signature: Rules and guidelines: • Place your identiﬁcation card (legi) in a corner of your desk such that the assistant, who will check your identity during the exam, can do so while keeping their distance and without disturbing you. • Once the exam starts, make sure you have received all pages of the exam. The exam should have 24 pages total, including two blank pages for notes. Do not separate the exam sheets. • Do not forget to ﬁll in your name, student identiﬁcation number, and signature on this page. With your signature you certify that you solved these problems on your own, that you turned in your solution, and that there were no environmental or other factors that disturbed you during this exam or that diminished your performance. • You must answer questions using black or blue ink. Illegible answers may not get any credit. • The use of any additional material other than your pen and a dictionary is not allowed. • You have 120 minutes to complete this exam. • As a general guideline, one point should correspond to one minute. Thus you should write answers that are clear and concise. Generally, you do not need to completely ﬁll the space provided for solutions. In addition, if you need more space your answer is probably too long. • You are not required to score all points to get the maximum grade. • If you believe a question is not clear and can be interpreted in multiple ways, clearly state assump- tions you made in your solution. • We will not answer any content-related questions during the exam. If you think you spotted a mistake, you need to go to the bathroom, or need other assistance, please raise your hand and an assistant will come to assist you. • You are free to leave whenever you have ﬁnished the exam. But to avoid disturbing your colleagues, nobody can leave the room during the last 30 minutes. • Your answers can be given either in English (preferred) or German. Question: 1 2 3 4 5 6 7 8 Total Points: 6 16 28 10 12 21 17 10 120 Score: 1 Guidelines and Grading for Multiple-Choice Questions This exam uses both single-choice questions and multiple-choice questions: Single-Choice (SC) Questions • The options of SC questions are marked with letters A, B, . . . . • Exactly one option is correct. • Mark the correct option by circling it (e.g., A ). • If you need to replace your solution, cross out the wrong choice clearly; then write the correct solution on the left side and circle it. • Grading: You receive full marks if and only if you selected the single correct choice. Multiple-Choice (MC) Questions • The options of MC questions are shown with checkboxes. • Your task is to select all true statements: there is no limit on their number (0–# of choices). • Mark the true statements with a check mark (□✓). • If you need to replace your solution, cross out the wrong choice clearly; then draw the correct checkbox (□ or □✓) on the left side. • Grading: For n correctly marked choices and m incorrectly marked choices (a choice is marked correctly if and only if a true statement is checked or a false statement is unchecked) the total number of points is max{0, 0.5 · (n − m)}. For example, if there are 4 choices overall, you receive 2 points if all choices are marked correctly, 1 point if 3 choices are marked correctly, and 0 points otherwise. 1. The Basics (6 points) Server Client 3 3 3 4 2 2 1 12 Figure 1: Capacity in a network (for each edge the capacity in Mbps is given) (a) (1 point) Maximum throughput. The maximum possible throughput from Server to Client over the network shown in Fig. 1 is: A. 3 Mbps B. 4 Mbps C. 5 Mbps D. 6 Mbps (b) (1 point) Multiplexing. Suppose that you have M users sharing a B Mbps link. When online, each user will require S Mbps bandwidth. The probability of a user at any point being online follows a Bernoulli distribution with p = Ponline. What is the probability that exactly m users are online at the same time? A. (B S)(Ponline)S(1 − Ponline) B−S B. ∑B x=0 (B S)(Ponline) S(1 − Ponline)B−S C. (M m)(Ponline)m(1 − Ponline) M −m D. ∑M x=0 (M m)(Ponline) m(1 − Ponline)M −m Page 2 (c) (2 points) Types of delay. Which statement(s) is/are true? □ Keeping packet size ﬁxed, transmission delay increases as the distance between the endpoints increases. □ Propagation delay is a function of link length and its physical properties. □ Keeping the distance between the endpoints ﬁxed, propagation delay increases as the size of the packets increases. □ Keeping packet size ﬁxed, propagation and transmission delays do not change when the amount of traﬃc in a wire increases. (d) (2 points) Packet vs Circuit switching. Which statement(s) is/are true? □ If most of the Internet transmitted data at constant rates for long periods of time, circuit switching would be better applicable. □ If links fail often, packet switching is a more reliable alternative than circuit switching. □ It is possible to set up a virtual circuit on top of a packet-switched network. □ Considering the same bandwidth, latency, and number of hops, a circuit-switched network will have a higher overhead than a packet-switched network when sending a single small packet. Page 3 2. The Application Layer (16 points) (a) (2 points) DNS I. Which of the following statements about DNS is/are correct? □ In recursive resolution, the server returns the IP address of another server that it thinks can resolve the query. □ DNS can use UDP as the transport-layer protocol using the well-known port 53. □ DNS can use TCP as the transport-layer protocol. □ DNS is scalable and available but not extensible: it is impossible even for any of its governing bodies to add or remove TLDs. (b) (2 points) DNS II. Fill in the blanks with up to three words each: (i) DNS servers responses to former queries to reduce resolution times; authoritative name servers can inﬂuence this behavior by associating a to each record. (ii) To scale DNS, root servers are replicated across the globe, and operators rely on such that routers could deliver the query packets to the nearby servers. (iii) The resource record type provides a mapping from one domain to an- other domain without providing any IP address. (c) (2 points) HTTP/Web. Which of the following statements about HTTP/Web is/are correct? □ HTTP is human-readable. □ HTTP is a stateful protocol, thus enabling applications like web-shop shopping carts. □ gzip/WebP-like compression mechanisms can reduce web-page load times. □ If the network bandwidth is high, reducing network round-trip times between clients and servers cannot have any signiﬁcant impact on web-page load times. (d) (2 points) CDNs. Which of the following statements on content delivery networks (CDN) is/are correct? □ A DNS-based CDN always routes users to geographically nearest servers. □ A BGP anycast-based CDN relies on Internet routing, and does not guarantee that speciﬁc users are mapped to speciﬁc physical servers. □ CDNs use a combination of pull caching and push replication in order to speed-up Web content delivery. □ CDN can speed up delivery of some uncacheable content. Page 4 N1N5 N4 N2 N3 19 10 5410 10 FIN 3 N6 10 Figure 2: Dependency graph (e) (1 point) Dependency graphs. Within a dependency graph, the critical path decides the minimum amount of time it takes to fully load all dependencies. This question is in relation to the dependency graph shown in Fig. 2. Which one is the critical path? A. FIN-N1-N3-N5-N6 B. FIN-N1-N2-N4-N5-N6 C. FIN-N1-N6 (f) (1 point) Fetching web pages. Alice wants to fetch m (with m a large number) web-page objects from a given server. Assuming both inﬁnite bandwidth and inﬁnite initial TCP con- gestion window, how many RTTs would it take to retrieve all m objects using HTTP/1.0, if it sends a new request once the response for the previous request is received, and opens new TCP connections for the retrieval of each object. Answer: (g) (1 point) HTTP pipelining. In HTTP/1.1, pipelining was introduced. This meant that multiple HTTP requests could be requested one after the other, without having to wait for the response. How many RTTs would it take to retrieve all m objects, as in the previous question (inﬁnite bandwidth and inﬁnite initial TCP window), over a single persistent TCP connection using HTTP/1.1? Answer: (h) (3 points) Video streaming. Which statement(s) are true? □ In a DASH architecture, video segments are usually a few seconds long. □ Any two videos encoded at the same resolution have, in general, the same bitrate, regardless of the video content. □ In a purely rate-based algorithm, the higher the buﬀer health, the higher (typically) the quality downloaded. □ In a purely buﬀer-based algorithm, the higher the buﬀer health, the higher (typically) the quality downloaded. □ User-device screen resolution is not useful information for bitrate adaptation. □ In a DASH architecture, ABR algorithms usually run on the client side. (i) (2 points) ABR metrics. List and shortly motivate, in one sentence each, three metrics that a good ABR algorithm should optimize for. (There exist more than 3, but only 3 are required.) 1. 2. 3. Page 5 3. The Transport Layer (28 points) Earth Mars NASA headquarters One-way delay (at c-speed): ~ 182 seconds Curiosity rover (R TT = 182s × 2 = 364 seconds) Figure 3: Earth-to-Mars communication (a) (4 points) Earth-to-Mars communication. The distance between Earth and Mars through- out this question is asserted to be constant. i. (2 points) The one-way delay from Earth to Mars is approximately 182 seconds when they are at their closest (at the speed of light) (see Fig. 3). If Earth wants to achieve a rate of 100 megabit/s to Mars, what is the minimum congestion-window size needed in megabit? megabit ii. (1 point) If NASA sent an astronaut to Mars orbit to control the rover from there, which type of delay would they most signiﬁcantly reduce? Fill in the single word in the blank: delay iii. (1 point) In Linux, the minimum retransmission timeout (RTO) is 0.2 seconds. What should be the minimum RTO value for communication between Earth and Mars? Fill in the blank: The minimum retransmission timeout should be set to at least seconds. (b) (2 points) Reliability aspects. Name the 4 goals of reliable transfer (one word each). 1. 2. 3. 4. (c) (3 points) Congestion-control fairness. Which statement(s) is/are true? □ Additive increase multiplicative decrease (AIMD) converges to a fair state for two senders sharing the same single link at equal end-to-end RTT. □ AIMD always converges to a fair allocation between two senders regardless of the loss, latency, or bandwidth of each of the senders. □ By having multiplicative increase, a ﬂow can quickly ramp up to a high congestion window. □ Multiplicative increase multiplicative decrease (MIMD) converges to a fair state. □ In multiplicative increase (MI) with a multiplication factor of 2× (indicating a dou- bling of the congestion window every RTT) the congestion window size is increased by two packets for every in-order acknowledgement packet received. □ Both AIMD and AIAD converge to a fair state, but AIMD is preferred because it converges faster. Page 6 (d) (3 points) Acknowledgement. Which statement(s) is/are true? □ With individual ACKs, missing packets (gaps) are implicitly inferred rather than explicitly conveyed by the receiver. □ Individual ACKs are sensitive to reordering. □ Cumulative ACKs indicate that packets up to a certain sequence number have arrived. □ In cumulative acknowledgement, duplicate ACKs are a sign of losses or reordering. □ Selective ACKs is a non-mandatory option that helps prevent unnecessary network congestion. □ With individual ACKs, the loss of an ACK packet causes an unnecessary retransmis- sion. (e) (1 point) Retransmission timeout I. Fill in the two blanks with a single word each (either “small” or “large”). A too retransmission timeout will result in loss being detected late. A too retransmission timeout will result in excessive retransmission. (f) (1 point) Retransmission timeout II. Which statement(s) is/are true? □ The optimal retransmission timeout can always be known in advance. □ When its retransmission timeout expires, the sender is completely sure that the re- ceiver did not receive the data packet. (g) (2 points) TCP sending behavior. Which statement(s) is/are true? □ Suppose you have two ﬂows sending a very large ﬁle, starting at the same time, and each sending data using a link with inﬁnite bandwidth and without congestion. Under these conditions, the ﬂow with the lower RTT will have a higher congestion window. □ The size of the TCP rwnd never changes throughout the duration of the connection. □ Flow control is the process of managing the sending rate to not overwhelm the receiver. □ Host A is sending a large ﬁle over a TCP connection to host B. Assume host B has no data to send host A. Host B will not send acknowledgments to host A because host B cannot piggyback the acknowledgments on data. (h) (1 point) TCP. When TCP is in the slow start phase with a congestion window of size cwnd (with cwnd < ssthresh 2 ) and a new ACK (for MSS bytes) is received, the new congestion window is set to size: A. 1 B. cwnd 2 C. cwnd + 1 D. cwnd + 1 cwnd (i) (1 point) Maximum window size. Consider that only a single TCP (Reno) connection uses one 40Mbps (4 ∗ 107 bits per second) link which does not buﬀer any data. Suppose that this link is the only congested link between the sending and receiving hosts. Assume that the TCP sender has a huge ﬁle to send to the receiver, and the receiver’s receive buﬀer is much larger than the congestion window. We also make the following assumptions: each TCP segment size is 500 bytes (= 4000 bit); the two-way propagation delay (= RTT) of this connection is 0.05 seconds; and this TCP connection is always in congestion-avoidance phase, that is, ignore slow start. What is the maximum window size (in segments) that this TCP connection can achieve? A. 50 B. 350 C. 500 D. 1200 E. 2000 F. 3000 Page 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 0 5 10 15 20 Figure 4: Congestion window size in packets (y-axis) against time in number of RTTs (x-axis) (j) (2 points) TCP phase switches. A TCP connection uses fast-retransmit/recovery, timeouts, congestion avoidance and slow start. Figure 4 shows an example of the change in the size of the congestion window of such a TCP connection over time (in RTTs). (The initial ssthresh is set to 16 packets). (The duration of the timeout is 4 RTTs.) At the time points in the table, a certain event happened, which caused TCP to switch from congestion avoidance to slow start or from slow start to congestion avoidance. Derive from the ﬁgure, which events happened when, and ﬁll them into the table: the possible events are (a) ssthresh reached (SSR), (b) timeout occurred (TIMEOUT), or (c) a fast-retransmit/recovery (FAST). Exactly one event type occurred at each time point. Each event type can have occurred zero or more times overall. The grading of this question is based only on the table (no explanation is required). Time point in RTTs Event 4 7 17 24 Page 8 (k) (3 points) Go-Back-N. Consider a Go-Back-N sender and receiver directly connected by a 5 Mbps link with a one-way propagation delay of 50 milliseconds. (There is no out-of-order buﬀering because it is Go-Back-N.) The retransmission timer is set to 2 seconds and the window has a length of 2 segments. The sender’s timeout timer is reset each time an ACK is received, even if it is a duplicate. An ACK is transmitted as soon as the last bit of the corresponding data segment is received and the size of the ACK is negligibly small. 4 segments are to be sent, and each segment contains 10 000 bits. The ﬁrst transmission of the 3rd segment is dropped. All other transmissions of segments and acknowledgments are successful. Fill in the table below with the acknowledgement times of the segments. The acknowledgement time is the moment at which the sender has a segment cumulatively acknowledged and as such can move the window. Hint: We suggest drawing a time sequence diagram (e.g., Fig. 5) before ﬁlling in the table. However, the grading of this question is based only on the table (no explanation is required). Segment Acknowledgement time (ms) 1 2 3 4 2310 21 A1 A2 0ms Figure 5: Time sequence diagram template Page 9 Figure 6: Link sharing over multiple users (l) (3 points) Sharing of a bottleneck link. Consider the topology shown in Fig. 6. Links A–R, B–R and C–R have identical delay and bandwidth and suﬀer no congestion, the hosts all use the same AIMD congestion control, and want to send ﬁles of inﬁnite size. Transmitting hosts A, B, and C all have to share the same link to send data to host D. Calculate the share in percentage of the link capacity of R–D that each host gets (considering a long time after the connections have been established) in each of the following cases. In all of them, A, B, and C are transmitting data. i. (1 point) Each host uses a single TCP ﬂow. A: % B: % C: % ii. (1 point) A and B use only one TCP ﬂow, and C uses two parallel TCP ﬂows. A: % B: % C: % iii. (1 point) A and B each use one TCP ﬂow. C uses a UDP-based application which transmits data at a constant rate of 10% of the capacity of link R–D. A: % B: % C: % (m) (2 points) QUIC. Which statement(s) is/are true? □ QUIC is able to establish an encrypted connection in 1 RTT. □ When using QUIC, losing one packet from a particular stream halts all streams that are using the same connection. □ QUIC handles mobility by using a “connection ID”, which is built only from the destination IP address. □ QUIC encrypts its entire header to prevent middleboxes from reading it. Page 10 4. Algorithms (10 points) (a) (2 points) Linear programming. Which of the following statement(s) about linear programs is/are correct? □ A and B are real variables. Relationship |A| ≤ B cannot be expressed as a set of linear constraints. □ No integer linear program can be solved in polynomial time. □ A and B are real variables. Relationship A = B can be expressed as a set of linear constraints. □ If a problem is solvable by a linear program, then there may still be another algorithm that is of lower time complexity than the linear program approach. (b) (2 points) Max-ﬂow min-cut. Max-ﬂow min-cut algorithms have many useful applications. Provide two use-cases for leveraging max-ﬂow min-cut algorithms by network providers and network operators. (There may be more possible use-cases, but only two are required.) 1. 2. (c) (2 points) Load balancing. Suppose a switch has N possible output ports to send the packets of arriving ﬂows out on. It uses a hash of the packet header together with a unique switch ID to decide the output port for each ﬂow: output port = hash(srcip, srcport, dstip, dstport, protocol, switchID) mod N Suppose a scenario in which one of the ports goes oﬄine, reducing N to N − 1. In expectation, what fraction of the ﬂows are disrupted, meaning their packets start being sent out on a diﬀerent port than the ﬂow was assigned before the change? A. 2 / N B. 1 C. (N − 2) / (N − 1) D. 1 / N E. (N − 1) / N (d) (2 points) Bloom ﬁlter. Which of the following statement(s) is/are correct? □ A query to a Bloom ﬁlter cannot result in a false positive answer. □ A query to a Bloom ﬁlter can result in a false negative answer. □ Bloom ﬁlters are useful for implementing cache ﬁltering, i.e., quickly identifying with high probability whether an object is in cache. □ A query of the type “is X a member?” to a hash table can result in a false positive. (e) (2 points) Counting Bloom ﬁlter. Suppose you use a counting Bloom ﬁlter to count the number of packets being forwarded for each ﬂow. The Bloom ﬁlter hash functions operate on the ﬂows’ 5-tuple. For each forwarded packet, it increments all the Bloom ﬁlter entries it hashes to. For this application, assume that we never delete a counted packet, so no Bloom ﬁlter entries need to be decremented. You can ﬁnd [ X ] of the true count for a particular ﬂow (5-tuple) by observing the smallest of the counter values of all positions it hashes to. What should be ﬁlled in for blank X? A. a lower bound B. an upper bound Page 11 5. Network-Layer Forwarding (12 points) (a) (4 points) DNS Request Consider a host (IP address 192.168.0.42) connected to a private home network via Ethernet sending a DNS request to a public resolver (9.9.9.9). The home router (private IP address 192.168.0.1, public IP address 203.0.113.31) performs network address translation (NAT). i. (1 point) Between host and router, order the following headers from outermost (left) to innermost (right): DNS, Ethernet, IP, UDP. ii. (1 point) For the packet between host and router, what are source and destination IP addresses? source IP address destination IP address iii. (1 point) For the packet between router and DNS resolver, what are source and destination IP addresses? source IP address destination IP address iv. (1 point) For the response packet between DNS resolver and router, what are source and destination IP addresses? source IP address destination IP address (b) (2 points) Helper Protocols There are two important helper protocols for IPv4: ARP and DHCP. i. (0.5 points) Assuming a cold boot without static network conﬁguration and empty cache, which protocol is used ﬁrst? ii. (0.5 points) What is the purpose of ARP? iii. (1 point) Name three things a host learns via DHCP. 1. 2. 3. Page 12 (c) (6 points) IP Preﬁxes In the following table, ﬁll in all missing ﬁelds. For the number of addressable hosts, you can also use exponential notation (e.g., 1025 = 2 10 + 1). network address broadcast address preﬁx length subnet mask addressable hosts 192.168.0.0 510 10.0.255.255 255.255.0.0 10.0.0.0 20 127.255.255.255 9 Page 13 6. Routing (21 points) (a) (9 points) Intra-AS Routing Consider the following AS-internal network consisting of several connected IP routers with unique identiﬁers A–E. For each task, all routers are running the same routing protocol (either a link-state protocol or a distance-vector protocol) and each link has a cost metric, which is used to ﬁnd the shortest route. Each router initially knows its neighbors and the link cost to each neighbor. Additionally, each router knows the identiﬁers of all other routers. In each interval, a router can (1) process all update messages received so far and prepare the updates messages to send to its neighbors, (2) send an arbitrary number of update messages, then (3) receive an arbitrary number of update messages, and ﬁnally (4) update its routing table. For the link-state protocol, an update message consists of a router ID (A–E), an incrementally increasing sequence number, and a list of connected neighboring routers with the respective link cost. Link-state update messages are sent initially (at the ﬁrst interval) and whenever a node detects a link failure to a neighbor. Note that ﬂooding of link-state updates requires multiple intervals: if a node receives a ﬂooding message, it only sends it to its neighbors in the next interval. Duplicate link-state messages with the same sequence number are discarded. For the distance-vector protocol, an update message consists of a router ID and a vector of distances to all routers (or a distance of inﬁnity if no route to this router is known). Distance-vector protocols consider a distance of 64 as inﬁnite, which means that any path in the network has a distance (cost) of at most 64. Distance-vector update messages are sent at each interval to all neighbors. A B C D E F 1 1 10 1 1 1 mA mB mA mC mC mD mD mF mD mE mB mE Figure 7: AS-internal topology with the update messages sent in the ﬁrst interval i. (5 points) Fill out the following table from the perspective of A until the network is converged (you might not need all rows of the table). At the end of each interval, write for which routers A has discovered a route, and if there is a route from A to F, write the cost of this route. Note that the ﬁrst update messages are sent and received in interval 1. Interval Link-State Protocol Distance-Vector Protocol Discovered Cost to reach F Discovered Cost to reach F 0 A, B, C — A, B, C — 1 2 3 4 Page 14 ii. (2 points) At the end of the 10 th interval (after the nodes have converged to the same routing table), the link between D and F fails, which is detected by D and triggers D to send an update message at the 11 th interval with an incremented sequence number. Answer the following two questions for both routing protocols: Does A eventually learn that it is no longer connected to F? If yes, does A eventually learn which link failure caused the loss of connectivity? Link State: Distance Vector: iii. (2 points) Let’s now consider an arbitrary topology with N nodes and a graph diameter 1 of M . After a node or link failure, we have a new topology with N ′ nodes and a graph diameter of M ′. Can you give a tight upper bound on the number of intervals needed until the link-state routing algorithm is converged after this failure? 1The diameter of a graph is the longest shortest path between any two nodes, i.e., maxu,v d(u, v) for u, v ∈ V , where d(u, v) is the shortest distance between u and v. Page 15 (b) (12 points) BGP Traﬃc Engineering HicHoc AS7 ISP 1 AS1 ISP 2 AS2 AS11 AS8 AS29 AS13 AS666 m1 m2 m3 provider customer peer peer Figure 8: A small part of an Internet topology, where each circle represents an AS. The line styles indicate diﬀerent business relationships between ASes. HicHoc has hired you as their network engineer, and your goal is to work on their BGP an- nouncements to save costs and improve their security. The company is multi-homed, i.e., has provider connections to two diﬀerent ISPs, namely ISP 1 and ISP 2. You will be operating the address space 112.75.16.0/23 owned by the company. Figure 8 shows relevant parts of the Internet topology. For this task, we assume that all ASes take rational decisions according to the standard BGP model presented in the lecture. The links from HicHoc to its providers ISP 1 and ISP 2 have diﬀerent price rates for traﬃc. To optimize costs, HicHoc sends the announcements m1 and m2 to ISP 1 and ISP 2, respectively: m1 = {ROUTE : 112.75.16.0/23 AS-PATH : AS7 } m2 = {ROUTE : 112.75.16.0/23 AS-PATH : AS7, AS7, AS7 } i. (2 points) ISP 2 will prefer the announcement from HicHoc, despite receiving an announce- ment with a shorter path from ISP 1. Why is this the case? ii. (2 points) AS8 will receive two competing BGP announcements for 112.75.16.0/23. Com- plete the AS paths in these messages: Path A: AS2, , AS7 Path B: AS11, , AS7 Page 16 iii. (2 points) Given these announcements, denote the path taken by a packet sent by a host in AS29 to the server IP 112.75.16.91 using AS numbers: AS29 → → AS7 iv. (1 point) Recall that these announcements were engineered to reduce costs. Which of the links must be more expensive for HicHoc, the one to ISP 1 or the one to ISP 2? v. (3 points) HicHoc is under attack! AS666 has issued the following announcement to AS13: m3 = {ROUTE : 112.75.16.0/24 AS-PATH : AS666 } On what path will traﬃc from AS29 to 112.75.16.91 be routed? AS29 → vi. (2 points) It is simple for HicHoc to detect this attack, since the malicious announcement will also be distributed to HicHoc. How could the attacker have prevented this, while still achieving the same impact for AS29? Fill in the ﬁelds in the improved attack message m ′ 3 below. m ′ 3 = {ROUTE : AS-PATH : } 7. The Link Layer (17 points) (a) (5 points) Error Correction i. (2 points) Construct a Hamming code with a distance of 3 for the 4-bit data string 0110 and write the three check bits in the table below: Bit 0 1 1 0 Position 7 6 5 4 3 2 1 ii. (2 points) You are given the following 7-bit message, which consists of a 4-bit data string 0101 and an interleaved Hamming code 001 at positions 4, 2, 1 as shown in the table below. Did a bit-ﬂip error occur during transmission? If yes, which bit was ﬂipped and must be corrected? (the correct answer without derivation is suﬃcient) Bit 0 1 0 0 1 0 1 Position 7 6 5 4 3 2 1 iii. (1 point) In general, how many errors can an error correcting code with Hamming distance 3 reliably correct? Page 17 (b) (12 points) Spanning-Tree Protocol (STP) In this question, we revisit the spanning-tree protocol. Throughout the whole question, we refer to the network topology in Fig. 9, where network nodes are represented as circles containing the node ID (to be distinguished from the node address introduced later), network links are represented as black solid lines, and links contained in the spanning tree are marked with a thick, red and dotted line. 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 Figure 9: Network topology with spanning tree (printed twice for your convenience) i. (7 points) In the network topology of Fig. 9, assign unique node addresses (ranging from letter A to letter I) to the network nodes such that the spanning-tree protocol discussed in the lecture produces the spanning tree shown in the ﬁgure. You may assume (i) that if a letter precedes another letter in the alphabet, it corresponds to a lower address, and (ii) that each link has equal cost. Please provide two assignments, which diﬀer in the location of their spanning-tree root. Each assignment must include three elements: • The assignments must be ﬁlled in the squares below, such that the assigned address letter of a node appears in the same position as the node in the topology. • You should mark the root of the spanning tree by underlining the corresponding letter. • Each assignment should include the number of forwarding rounds needed until STP convergence can be determined. For example, your solution should have the following format: N Q L O K M P J R X rounds Please ﬁll in your solution here: rounds rounds Page 18 ii. (2 points) How many potential locations for the root node does the spanning tree in this task possess? Explain your reasoning. Assume in the following that each node sends the same traﬃc volume T to each other node. iii. (1 point) Identify one link in the network which carries the least traﬃc and quantify how much traﬃc this links carries in percent of total sent traﬃc. iv. (1 point) Identify one link in the network which carries the most traﬃc, and quantify how much traﬃc this links carries in percent of total sent traﬃc. v. (1 point) Finally, explain the fundamental ﬂaw of the spanning-tree protocol which is il- lustrated by the contrast between the two links identiﬁed previously. 1 2 3 4 5 6 7 8 9 Figure 10: Network topology with spanning tree (printed again for your convenience) Page 19 8. Happy Eyeballs (10 points) Today, most hosts in the Internet are dual-stack, meaning they can use both IPv4 and IPv6 network layer protocols. Many servers also support IPv6 connectivity. Therefore, once a host resolves a domain name, it can request both IPv4 and IPv6 addresses. This is great, because multiple options increase the reliability of a connection. However, there are some challenges: • IPv6 is less reliable than IPv4, as the adoption of IPv6 is still ongoing, and many networks do not support this protocol yet. • For the same reason, the deployment of IPv6 servers has not yet reached the same geographical coverage as IPv4. Thus, the latency to IPv6 servers is usually higher. • Despite these drawbacks, the Internet Engineering Task Force (IETF) is pushing for a wider adoption of IPv6, and therefore would like to favor the use of this newer protocol over IPv4. These constraints make the operation of dual-stack hosts non-trivial: assuming a host has both IPv6 and IPv4 addresses for the same domain, which IP version should they attempt to use? And what if one fails? We explore three possible approaches illustrated in Fig. 11 in the following. Assumptions Assume the following for all subquestions: • 0 < RTTv4 < RTTv6 < 1 s. RTT is the round-trip time and contains the network delay and the server processing delay. • The server is always reachable over IPv4. Client Server IPv6 SYN IPv6 SYN IPv6 SYN IPv6 SYN IPv6 SYN IPv6 SYN IPv4 SYN IPv4 SYN ACK tOUT 1 2 × tOUT 1 . . . tOUT 6 RTTv4 Test (a) “IPv6 ﬁrst” algorithm. Client Server IPv6 SYN IPv4 SYN IPv4 SYN ACK RTTv4 Test (b) “Same-time” algorithm. Client Server IPv6 SYN IPv4 SYN IPv4 SYN ACK 300 ms RTTv4 Test (c) “Happy eyeballs” algorithm. Figure 11: Failure scenarios for IPv6: For all the three algorithms presented, we show here what happens if the IPv6 address is unreachable. Page 20 (a) (2 points) “IPv6 ﬁrst” algorithm The IETF’s ﬁrst try is to push fully in favour of IPv6. Therefore, the ﬁrst algorithm proposed for the use of dual-stack hosts is the following: (i) try to connect with IPv6; (ii) if it is unreachable, connect with IPv4. Here and in the following, assume TCP is used as transport protocol. i. (1 point) TCP tries to connect 6 times before the connection is timed-out. The timer delay between the retries starts at t OUT 1 = 2 seconds, and doubles at every retry. Only after the last (t OUT 6 ) timer is expired, the connection setup over IPv4 is initiated. This is shown in Fig. 11a. How much time Test does it take until the connection is established (i.e., the SYN ACK is received) if the IPv6 address is unreachable? Express the time as a function of RTTv4 and/or RTTv6 as needed. Test = ii. (1 point) What if IPv6 is available on the whole path and the server is reachable? Test = (b) (3 points) “Same-time” algorithm We propose a second algorithm to avoid the high number of retries in case IPv6 is unavailable: (i) initiate the TCP handshake over IPv6 and IPv4 at the same time, and (ii) continue the handshake using the ﬁrst one that returns the SYN ACK. This is shown in Fig. 11b. i. (1 point) What is Test if the IPv6 address is unreachable? Test = ii. (1 point) What if the IPv6 address is reachable? Test = iii. (1 point) However, this is algorithm is undesirable, as it has negative side-eﬀects on the network. Explain why. (c) (2 points) “Happy Eyeballs” algorithm The third and ﬁnal version is as follows: (i) initiate the handshake over IPv6; (ii) after 300 ms initiate the handshake over IPv4, unless an IPv6 SYN ACK is received before; and (iii) continue the handshake using the ﬁrst one that returns the SYN ACK. This is shown in Fig. 11b. i. (1 point) What is Test if the IPv6 address is unreachable? Test = ii. (1 point) What if the IPv6 address is reachable? Test = Page 21 (d) (3 points) IETF Perspectives i. (1 point) Take the perspective of the IETF. Brieﬂy explain two advantages of Happy Eye- balls compared to each of the two other algorithms (diﬀerent from the network issue that you identiﬁed in subquestion b.iii). Advantage compared to “IPv6 ﬁrst”: Advantage compared to “Same-time”: ii. (2 points) You run a measurement, and ﬁnd that for 99 % of IPv6 servers, RTTv6 < 100 ms. How can you use this information to modify the “Happy Eyeballs” algorithm to improve its viability? Motivate your changes. Page 22 Extra Page Please use this page for notes or in case you run out of space elsewhere in the exam; in that case, clearly state which question your solution belongs to and also mark this at the corresponding question. Page 23 Extra Page Please use this page for notes or in case you run out of space elsewhere in the exam; in that case, clearly state which question your solution belongs to and also mark this at the corresponding question. Page 24","libVersion":"0.5.0","langs":""}