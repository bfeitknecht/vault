{"path":"var/export/A&D-bf-u10.pdf","text":"10.1 Shortcutting closed Eulerian Walks We assume the connected graph H = (V , F ) on the same n = |V | vertices as the complete graph G = Kn has a closed eulerian walk T = (fi)k. weight of hamilton cycle in G at most that of closed eulerian walk in H for every edge in f ∈ F , check if the weight in H of that edge is more than that in G. if so, remove it and take the edge between those vertices in G 10.2 BFS a) iteration operation queue 0 q.push(A) q = [A] 1 q.pop() -> A q = [] 2 q.push(F) q = [F] 3 q.push(G) q = \u0000F, G\u0000 4 q.pop() -> F q = [G] 5 q.pop() -> G q = [] 6 q.push(B) q = [B] 7 q.push(H) q = \u0000B, H\u0000 8 q.push(I) q = \u0000B, H, I\u0000 9 q.pop() -> B q = \u0000H, I\u0000 10 q.pop() -> H q = [I] 11 q.push(E) q = \u0000I, E\u0000 12 q.pop() -> I q = [E] 13 q.push(C) q = \u0000E, C\u0000 14 q.pop() -> E q = [C] 15 q.push(D) q = \u0000C, D\u0000 16 q.pop() -> C q = [D] 17 q.pop() -> D q = [] b) Let T = (V , ET ) be the shortest path tree for G, rooted at the vertex A ∈ V . A B C D E F G HI c) k 0 1 2 3 4 5 Sk {A} {F , G} {B, I, H} {C, E} {D} ∅ d) The critical edges of G are given below. e) The enter-number and leave-number are given below for every vertex in V . v\u0000\u0000\u0000\u0000x A F G B H I E C D e\u0000ter 0 2 3 6 7 8 11 13 15 l\u0000ave 1 4 5 9 10 12 14 16 17 c1 = {A, F } c2 = {A, G} c3 = {G, B} c4 = {G, H} c5 = {G, I} c6 = {H, E} c7 = {I, C} f) g) 10.4 Number of Minimal Paths","libVersion":"0.3.2","langs":""}