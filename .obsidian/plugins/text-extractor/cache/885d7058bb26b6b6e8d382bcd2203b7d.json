{"path":"sem3/TI/UE/c/TI-c-u06.pdf","text":"Basil Feitknecht, 23-922-099, Camil Schmid, 23-944-234, Dennis Küenzi, 21-559-315 16 (a) We prove that the language L is not regular using lemma 3.3. For the sake of contradiction, let's suppose that L is regular. Then there exists a ﬁnite automaton A = (Q, {a, b, c}, δ, p0, F ) such that L(A)= L. Let k = |Q| denote the number of states in this ﬁnite automaton. Now we consider the words a, ab, ab2, … abk+1. Since these are more words that A has states, per pigeonhole principle there must exist i, j ∈ [k + 1] with i ≠ j such that for x = abi, y = abj the following holds. ^δ(q0, x)= ^δ(g0, y) Then, per lemma 3.3, ∀x ∈ {a, b, c}∗ the below holds. xz ∈ L(A) ⟺ yz ∈ L(A) However, for z = ci, this leads to a contradiction, since xz = abici ∈ L(A) but yz = abjci ∉ L(A), since i ≠ j. Hence the assumption is false and we have proven that L is not regular. □ (b) Let n0 = |Σ| = 3. Then, for some w ∈ L with |w| ≥ n0 and w = w1w2w3u, we show that the language L fulﬁlls the weakened pumping lemma. We make a case distinction on the word, since L is the union of two languages. Case w ∈ {ambncn ∣ m, n ∈ N, m ≥ 1} This is the case, where the word w contains at least one a, i.e. |w|a ≥ 1. From the construction of L, this implies that w1 = a. Let y = λ, x = w1 and z = w2w3u. Then |yx| ≤ n0, condition (i) holds. The second requirement (ii) also holds, since |x| ≥ 1. Now, we pump. All that remains is to show that the condition (iii) also holds, i.e. {yxkz ∣ k ∈ N} = {akw2w3u ∣ k ∈ N} ⊆ L. A simple case distinction on k leads to the following. For k = 0, we get words of the form w = yx0z = λλw2w3u. Per deﬁnition of L, we know that w = am−1bncn, since the ﬁrst symbol, which must be an a, is pumped to lambda, we have one less of it. This word is trivially in L for m > 1. For m = 1 , this word is in {b, c}∗ and hence also in L. For k ≠ 0, we have words w = λwk 1w2w3u. Then the pumped word w = am+kbncn must be in L also. Thus (i), (ii) and (iii) hold. Case w ∈ {b, c}∗ This is the case where the word w does not contain any symbol a, i.e. it contains only |w|b = i and |w|c = j. Let y = λ, x = w1 and z = w2w3u. Then we have |yx| ≤ n0, so condition (i) holds. Also |x| ≥ 1, thus requirement (ii) holds too. Then, no matter the symbol w1, when we pump, we get a word of only b and c. Thus ∀k ∈ N,  yxkz ∈ L and condition (iii) holds. Thus we have shown that L fulﬁlls the weakened pumping lemma. □ 1 7 Let M1, M2 be two non-deterministic ﬁnite automata such that L1 = L(M1) and L2 = L(M2). Speciﬁcally, M1 = (Q1, Σ, δ1, q0, F1) and M2 = (Q2, Σ, δ2, qc, F2). Then we construct a non-deterministic ﬁnite automaton M as a product of M1 and M2 such that L = L(M). Formally we deﬁne this as M = (Q, Γ, δ, q0, F ), where Q = Q1∪ Q2 denotes the ﬁnite set of states, Γ = {a, b, c} is the input alphabet, δ : Q × Γ → P(Q) the state transition function, q0 is the initial state and F = F2 is the set of accepted states. The state transition function δ of M is the union of δ1 and δ2, with the additional deﬁnition, that (q, c)∈ F1× {c} transitions to ⟨{qc}⟩∈ P(Q2). Informally this is correct because, per construction any word w ∈ L(M) has to have a preﬁx w1 that is accepted by M1, i.e. w1 ∈ L(M1), then have the inﬁx \"c\" and end in a suﬃx w2 that is accepted by M2, i.e. w2 ∈ L(M2). Thus M accepts exactly all words in L = L1⋅ {c} ⋅ L2. Since there exist a ﬁnite automaton that accepts L, we have shown that it is regular. □ 18 (a) To prove that there is a strategy that the taster can use to eat all chocolates, we must show that the set of chocolates served to her is equinumerous to the number of rounds. Let i ∈ N denote the i-th round of the game and Ci = {cj∈[ni]} be the set of |Ci| = ni ∈ N chocolates served in that round. Then C = ⋃i∈N Ci denotes the set of all chocolates served during the whole game. So we denote the j-th chocolate in the i-th round with cij = cj ∈ Ci. We deﬁne the lexicographic total order on C below. Then the strategy is to simply eat the chocolates in canonical order. cij ≤lex ci′j′ ⟺ i < i′ ∨ (i = i′ ∧ j < j′) Since this is the canonical order, we have an injection from C → N and thus it follows that C ∼ N and hence the strategy described above is correct. □ (b) The previously described strategy no longer works, since the number of chocolates served in a particular round is not ﬁnite anymore. We prove the statement by a diagonalization argument. We deﬁne the set C similar to before, where Ci = {cj∈N} denotes the countably inﬁnite set of chocolates served in round i ∈ N. The diagram below illustrates the order in which we eat the chocolates, where the rows denote the i-th round and the columns represent the j-th chocolate. In this way we enumerate over all chocolates served in all rounds, hence C ∼ N and thus the strategy is correct. □","libVersion":"0.3.2","langs":""}