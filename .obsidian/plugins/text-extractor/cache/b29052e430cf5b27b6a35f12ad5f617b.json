{"path":"sem2a/DDCA/VRL/slides/DDCA-L02b-electrical-engineering.pdf","text":"Carnegie Mellon 1 Digital Design and Computer Architecture Mohammad Sadrosadati Frank K. Gürkaynak Adapted from Digital Design and Computer Architecture, David Money Harris & Sarah L. Harris ©2007 Elsevier http://safari.ethz.ch/ddca Short Introduction to Electrical Engineering Carnegie Mellon 2 In This Lecture  Short Introduction to the Electrical Engineering ▪ Current, Voltage, Capacitance ▪ Transistors, CMOS ▪ Shameless promotion of the D-ITET  How to build logic gates  Moore’s Law  Power consumption Carnegie Mellon 3 Abstraction Abstraction Levels Examples Application Software Programs Operating Systems Device driversThis CourseArchitecture Instructions, Registers Micro architecture Datapath, Controllers Logic Adders, Memories Digital Circuits AND gates, NOT gates Analog Circuits Amplifiers Devices Transistors, Diodes Physics Electrons Carnegie Mellon 4 Abstraction Abstraction Levels Examples Application Software Programs Operating Systems Device drivers Architecture Instructions, Registers Micro architecture Datapath, Controllers Logic Adders, MemoriesTodayDigital Circuits AND gates, NOT gates Analog Circuits Amplifiers Devices Transistors, Diodes Physics Electrons Carnegie Mellon 5 The Electrical Engineering Perspective  What areas are there in Electrical Engineering? What are they good for ?  This course covers the basics, we will not go to much detail.  Those who are more interested are welcome to visit classes from the D-ITET in later semesters. ▪ VLSI 1,2,3,4 (5th – 8th) semester Carnegie Mellon 6 Many Microchips in a SystemPictureof iPhone5s from http://www.ifixit.com/Teardown/iPhone-5-Teardown/10525 Carnegie Mellon 7 Subsystems In iPhone (Example)  Battery / power subsystem  Processor / Memory  Antenna / Radio frequency communication  Telecommunication en/decoding  Audio subsystem  Camera and Display driver  External Interfaces (touch screen, cards, data transfer) Carnegie Mellon 8 What Specializations Are At D-ITET?  Transmitting and Receiving Electromagnetic Waves ▪ Design antennas to receive and transmit electromagnetic waves ▪ Specialized circuits that can send and receive signals over long distances  Communication Theory ▪ Find out efficient ways of encoding data to improve data transmission over communication channels Carnegie Mellon 9 What Specializations Are At D-ITET?  Audio / Video signal processing ▪ Enable talking even in noisy environments ▪ Reduce the amount of data that needs to be transmitted for video sequences  Analog Electronics ▪ Convert analog signals to digital domain for further processing ▪ Reproduce the analog signal from a sequence of digital values  Digital Electronics The topic of this lecture Carnegie Mellon 10 The Goal Of Circuit Design Is To Optimize:  Area ▪ Net circuit area is proportional to the cost of the device  Speed / Throughput ▪ We want circuits that work faster, or do more  Power / Energy ▪ Mobile devices need to work with a limited power supply ▪ High performance devices dissipate more than 100W/cm2  Design Time ▪ Designers are expensive ▪ The competition will not wait for you Carnegie Mellon 11 Requirements Depend On Application Carnegie Mellon 12 (My) Principles For Engineering  Good engineers are lazy ▪ They do not want to work unnecessarily, be creative  They know how to ask the question “WHY?” ▪ Take nothing for granted  Engineering is not religion ▪ Use what works best for you  Keep it simple and stupid ▪ Engineers’ job is to manage complexity Carnegie Mellon 13 Basic Electric Relations Carnegie Mellon 14 Charging a Capacitor Takes Time Carnegie Mellon 15 Building Blocks For Microchips  Conductors ▪ Metals: Aluminum, Copper  Insulators ▪ Glass (SiO2), Air  Semiconductors ▪ Silicon (Si), Germanium (Ge) Carnegie Mellon 16 Semiconductor Carnegie Mellon 17 N-type Doping Carnegie Mellon 18 P-type Doping Carnegie Mellon 19 What Is So Great About Semiconductors?  You can “engineer” its properties ▪ Make it P type by injecting type-III elements (B, Ga, In) ▪ Make it N type by injecting elements from type-V (P,As)  Starting with a pure semiconductor, you can combine P and N regions next to each other  Allows you to make interesting electrical devices ▪ Diodes ▪ Transistors ▪ Thrystors Carnegie Mellon 20 The Story About Transistors Carnegie Mellon 21 The Story About Transistors Carnegie Mellon 22 The Story About Transistors - Switch OPEN Carnegie Mellon 23 The Story About Transistors - Switch CLOSED Carnegie Mellon 24 pMOS Is Just The Dual Of The nMOS Carnegie Mellon 25 pMOS Is Just The Dual Of The nMOS Carnegie Mellon 26 nMOS + pMOS = CMOS Carnegie Mellon 27 nMOS + pMOS = CMOS When One Type MOS works, the other is the load Carnegie Mellon 28 What Is So Good About CMOS?  No input current ▪ Capacitive input, no resistive path from the input.  No current when output is at logic levels ▪ Little static power, current is needed only when switching  Electrical properties determined directly by geometry ▪ A transistor that is 2 times larger drives twice the current  Very simple to manufacture ▪ pMOS and nMOS can be manufactured on the same substrate Carnegie Mellon 29 CMOS Gates: NOT Gate VDD A Y GND N1 P1 NOT Y = A A Y 0 1 1 0 A Y A P1 N1 Y 0 1 Carnegie Mellon 30 CMOS Gates: NOT Gate VDD A Y GND N1 P1 NOT Y = A A Y 0 1 1 0 A Y A P1 N1 Y 0 ON OFF 1 1 OFF ON 0 Carnegie Mellon 31 CMOS Gates: NAND Gate A B Y N2 N1 P2 P1 NAND Y = AB A B Y 0 0 1 0 1 1 1 0 1 1 1 0 A B Y A B P1 P2 N1 N2 Y 0 0 0 1 1 0 1 1 Carnegie Mellon 32 CMOS Gates: NAND Gate A B Y N2 N1 P2 P1 NAND Y = AB A B Y 0 0 1 0 1 1 1 0 1 1 1 0 A B Y A B P1 P2 N1 N2 Y 0 0 ON ON OFF OFF 1 0 1 ON OFF OFF ON 1 1 0 OFF ON ON OFF 1 1 1 OFF OFF ON ON 0 N1 and N2 are connected in series; both must be ON to pull the output to GND. P1 and P2 are in parallel; only one must be ON to pull the output up to VDD. Carnegie Mellon 33 CMOS Gate Structure  The general form used to construct any inverting logic gate, such as: NOT, NAND, or NOR. ▪ The networks may consist of transistors in series or in parallel. ▪ When transistors are in parallel, the network is ON if either transistor is ON. ▪ When transistors are in series, the network is ON only if all transistors are ON. pMOS pull-up network output inputs nMOS pull-down network Carnegie Mellon 34 CMOS Gate Structure  In a proper logic gate: ▪ One of the networks should be ON and the other OFF at any given time.  Use the rule of conduction complements: ▪ When nMOS transistors are in series, the pMOS transistors must be in parallel. ▪ When nMOS transistors are in parallel, the pMOS transistors must be in series.pMOS pull-up network output inputs nMOS pull-down network Carnegie Mellon 35 Logic Gates  Perform logic functions: ▪ inversion (NOT), AND, OR, NAND, NOR, etc.  Single-input: ▪ NOT gate, buffer  Two-input: ▪ AND, OR, XOR, NAND, NOR, XNOR  Multiple-input gates: Carnegie Mellon 36 Single-Input Logic Gates NOT Y = A A Y 0 1 1 0 A Y BUF Y = A A Y 0 0 1 1 A Y Carnegie Mellon 37 Single-Input Logic Gates NOT Y = A A Y 0 1 1 0 A Y BUF Y = A A Y 0 0 1 1 A Y NOT is also called an “inverter” Might seem useless “what does it do?” Triangle represents a “buffer”, a “o” represents inversion Carnegie Mellon 38 Two-Input Logic Gates AND Y = AB A B Y 0 0 0 0 1 0 1 0 0 1 1 1 A B Y OR Y = A + B A B Y 0 0 0 0 1 1 1 0 1 1 1 1 A B Y Carnegie Mellon 39 Two-Input Logic Gates AND Y = AB A B Y 0 0 0 0 1 0 1 0 0 1 1 1 A B Y OR Y = A + B A B Y 0 0 0 0 1 1 1 0 1 1 1 1 A B Y Y=AB, Y=A AND B Y=A∩B (intersection), (therefore the representation) Y=A+B Y=A OR B Y=A∪B (Union) (therefore the representation) Carnegie Mellon 40 Common Logic Gates Carnegie Mellon 41 Multiple-Input Logic Gates  3, 4 (or even more) input AND, OR, XOR gates  Compound gates ▪ AND-OR ▪ OR-AND ▪ AND-OR-INVERT ▪ OR-AND-INVERT  Other cells ▪ Multiplexers (we will see them soon) ▪ Adders (also coming soon) Carnegie Mellon 42 Logic Levels  Define discrete voltages to represent 1 and 0  For example, we could define: ▪ 0 to be ground or 0 volts ▪ 1 to be VDD or 5 volts  What about 4.99 volts? Is that a 0 or a 1?  What about 3.2 volts?  As chips have progressed to smaller transistors, VDD has dropped to 3.3 V, 2.5 V, 1.8 V, 1.5 V, 1.2 V, or even lower to save power and avoid overloading the transistors. Carnegie Mellon 43 Logic Levels  Define a range of voltages to represent 1 and 0  Define different ranges for outputs and inputs to allow for noise in the system  What is noise? Carnegie Mellon 44 What is Noise?  Anything that degrades the signal ▪ E.g., resistance, power supply noise, coupling to neighboring wires, etc.  Example: a gate (driver) could output a 5 volt signal but, because of resistance in a long wire, the signal could arrive at the receiver with a degraded value, for example, 4.5 volts Driver Receiver Noise 5 V 4.5 V Carnegie Mellon 45 The Static Discipline  Given logically valid inputs, every circuit element must produce logically valid outputs  Discipline ourselves to use limited ranges of voltages to represent discrete values Carnegie Mellon 46 Logic Levels Forbidden Zone NML NMH Input CharacteristicsOutput Characteristics VO H VDD VO L GND VIH VIL Logic High Input Range Logic Low Input Range Logic High Output Range Logic Low Output Range Driver Receiver Carnegie Mellon 47 Noise Margins Forbidden Zone NML NMH Input CharacteristicsOutput Characteristics VO H VDD VO L GND VIH VIL Logic High Input Range Logic Low Input Range Logic High Output Range Logic Low Output Range NMH = VOH – VIH NML = VIL – VOLDriver Receiver Carnegie Mellon 48 Moore’s Law  Coined by Gordon Moore: ▪ In 1965 ▪ Co-founder of Intel Number of transistors that can be manufactured doubles roughly every 18 months.  In other words: it increases 100 fold over 10 years. Carnegie Mellon 49 Let’s talk about Moore’s Law Gordon Moore, Electronics Letters 1965, IEDM 1975 Carnegie Mellon 50 Moore’s Law or Self-fulfilling prophecy  It started as an observation ▪ Has been predicated to stop many times (even by Gordon Moore)  It is catchy ▪ Every 2 years (or 18 months or..) the number of transistors (functions) double ▪ Not terribly accurate  Good direction to follow ▪ In two years 2x transistors  Easy to sort of cheat ▪ Is the circuit area the same, is it the date it was prototyped or released Carnegie Mellon 51 50 years of processor trend data (Karl Rupp) VLSI 2: From Netlist to Complete System on Chip 51 https://github.com/karlrupp/microprocessor-trend-data Power Wall Speed Wall Carnegie Mellon 52 How Do We Keep Moore’s Law  Manufacturing smaller structures ▪ Some structures are already a few atoms in size  Developing materials with better properties ▪ Copper instead of Aluminum (better conductor) ▪ Hafnium Oxide, air for Insulators ▪ Making sure all materials are compatible is the challenge  Optimizing the manufacturing steps ▪ How to use 193nm ultraviolet light to pattern 20nm structures  New technologies ▪ FinFET, Gate All Around transistor, Single Electron Transistor… Carnegie Mellon 53 Power Consumption  Power = Energy consumed per unit time  Two types of power consumption: ▪ Dynamic power consumption ▪ Static power consumption Carnegie Mellon 54 Dynamic Power Consumption  Power to charge transistor gate capacitances  The energy required to charge a capacitance, C, to VDD is CVDD2  If the circuit is running at frequency f, and all transistors switch (from 1 to 0 or vice versa) at that frequency, the capacitor is charged f/2 times per second (discharging from 1 to 0 is free).  Thus, the total dynamic power consumption is: Pdynamic = ½CVDD 2f Carnegie Mellon 55 Static Power Consumption  Power consumed when no gates are switching  It is caused by the quiescent supply current, IDD, also called the leakage current  Thus, the total static power consumption is: Pstatic = IDDVDD Carnegie Mellon 56 Power Consumption Example  Estimate the power consumption of a wireless handheld computer ▪ VDD = 1.2 V ▪ C = 20 nF ▪ f = 1 GHz ▪ IDD = 20 mA Carnegie Mellon 57 Power Consumption Example  Estimate the power consumption of a wireless handheld computer ▪ VDD = 1.2 V ▪ C = 20 nF ▪ f = 1 GHz ▪ IDD = 20 mA Ptotal = Pdynamic + Pstatic = ½CVDD 2f + IDDVDD = ½(20 nF)(1.2 V)2(1 GHz) + (20 mA) (1.2 V) = 14.4 W Carnegie Mellon 58 What Did We Learn?  What is a transistor? ▪ It is a switch that can be controlled electrically  How are logic gates built?  What is Moore’s Law, why is it interesting  What does the power consumption depend on? ▪ Activity (what does the circuit do) ▪ Clock Frequency ▪ Voltage ▪ Total switched capacitance","libVersion":"0.3.2","langs":""}