{"path":"sem1/DMath/PV/summaries/DMath-summary-jannis.pdf","text":"3 Sets, Relations, and Functions 3.2 Sets and Operations on Sets Definition 3.1. The cardinality, denoted |A| of a set is the amount of elements it contains. Definition 3.2. A = B def ⇐⇒ ∀x(x ∈ A ↔ x ∈ B). Lemma 3.1. For any (sets) a and b, {a} = {b} ⇒ a = b Definition 3.3. The set A is a subset of the set B, denoted A ⊆ B, if every element of A is also an element of B, i.e., A ⊆ B def ⇐⇒ ∀x(x ∈ A → x ∈ B) Lemma 3.2. A = B ⇐⇒ (A ⊆ B) ∧ (B ⊆ A). Lemma 3.3. For any sets A, B, and C, A ⊆ B ∧ B ⊆ C ⇒ A ⊆ C Definition 3.4. The union of two sets A and B is defined as A ∪ B def = {x|x ∈ A ∨ x ∈ B} and their intersection is defined as A ∩ B def = {x|x ∈ A ∧ x ∈ B} Definition 3.5. The difference of sets B and A, denoted B\\A is the set of elements of B without those that are elements of A: B\\A def = {x ∈ B|x ̸ ∈A} Theorem 3.4. For any sets A, B, and C, the following laws hold: Idempotence: A ∩ A = A; A ∪ A = A; Commutativity: A ∩ B = B ∩ A; A ∪ B = B ∪ A; Associativity: A ∩ (B ∩ C) = (A ∩ B) ∩ C; A ∪ (B ∪ C) = (A ∪ B) ∪ C; Absorption: A ∩ (A ∪ B) = A; A ∪ (A ∩ B) = A; Dirstibutivity: A ∩ (B ∪ C) = (A ∩ B) ∪ (A ∩ C); A ∪ (B ∩ C) = (A ∪ B) ∩ (A ∪ C); Consistency: A ⊆ B ⇐⇒ A ∩ B = A ⇐⇒ A ∪ B = B 1 Definition 3.6. A set A is called empty if it contains no elements, i.e., if ∀x¬(x ∈ A). Lemma 3.5. There is onl one empty set (which is often denoted as ∅ or {}). Lemma 3.6. The mepty set is a subset of every set, i.e., ∀A(∅ ⊆ A). Definition 3.7. The power set of a set A denoted P(A), is the set of all subsets of A: P(A) def = {S|S ⊆ A} Remark 3.1. For a finite set with cardinality k, the power set has cardinality 2k (hence the name ‘power-set‘ and the alternative notation 2A) Definition 3.8. The Cartesian product A × B of two sets A and B is the set of all ordered pairs with the first component form A and the second component from B: A × B = {(a, b)|a ∈ A ∧ b ∈ B} Remark 3.2. For finite sets, the cardinality of the Cartesian producto of some sets is the product of their cardinalities: |A × B| = |A| · |B| 3.3 Relations Definition 3.9. A (binary) relation ρ from a set A to a set B (also called an (A, B)- relation) is a subset of A × B. If A = B, then ρ is called a relation on A. Definition 3.10. The inverse of a relation ρ fro A to B is the relation ̂ρ from B to A defined by ̂ρ def = {(b, a)|(a, b) ∈ ρ} Definition 3.11. Let ρ be a relation from A to B and let σ be a relation from B to C. Then the composition of ρ and σ, denoted ρ ◦ σ, is the relation from A to C defined by ρ ◦ σ def = {(a, c)|∃ ((a, b) ∈ ρ ∧ (b, c) ∈ σ)} The n-fold composition of a relation ρ on a set A with itself is denoted ρn. Definition 3.12. For any set A, the identity relation on A, denoted idA (or simply id), is the relation idA = {(a, a)|a ∈ A}. Lemma 3.7. The composition of relations is associative i.e., we have ρ ◦ (σ ◦ ϕ) = (ρ ◦ σ) ◦ ϕ. Lemma 3.8. Let ρ be a relation form A to B and let σ be a relation form B to C. Then the inverse ̂ρσ of ρσ is the relation ̂σ̂ρ. 2 Definition 3.13. A relation ρ on a set A is called reflexive if aρa is true for all a ∈ A, i.e., if id ⊆ ρ Definition 3.14. A relation ρ on a set A is called irreflexive if a ̸ ρa for all a ∈ A, i.e., if ρ ∩ id = ∅. Definition 3.15. A relation ρ on a set A is called symmetrix if aρb ⇐⇒ bρa is true for all a, b ∈ A, i.e., if ρ = ̂ρ Definition 3.16. A relation ρ on a set A is called antisymmetric if aρb ∧ bρa ⇒ a = b is true for all a, b ∈ A, i.e. if ρ ∩ ̂ρ ⊆ id Definition 3.17. A relation ρ on a set A is called transitive if aρb ∧ bρc ⇒ aρc is true for all a, b, c ∈ A Lemma 3.9. A relation ρ is transitive ⇐⇒ ρ2 = ρ Definition 3.18. The transitive closure of a relation ρ on a set A, denoted ρ∗, is ρ ∗ = ⋃ n∈N\\{0} ρ n 3.4 Equivalence Relations Definition 3.19. An equivalence relation is a relation on a set A that is reflexive sym- mectric, and transitive. 3 Definition 3.20. For an equivalence relation θ on a set A and for a ∈ A, the set of elements of A that are equivalent to a is called the equivalence class of a and is denoted as [a]θ: [a]θ def = {b ∈ A|bθa} Lemma 3.10. The intersection of two equivalence relations (on the same set) is an equivalnce relation. Definition 3.21. A partition of a set A is a set of mutually disjoint subsets of A that cover A, i.e., a set {Si|i ∈ I} of sets Si (for some index set I) satisfyng Si ∩ Sj = ∅ for i ̸= j and ⋃ i∈I Si = A Definition 3.22. The set of equivalence classes of an equivalence relation θ, denoted by A/θ def = {[a]θ|a ∈ A} is called the quotiont set of A by θ, or simply A modulo θ, or A mod θ. Theorem 3.11. The set A/θ of equivalence classes of an equivalence relation θ on A is a partition of A. 3.5 Partial Order Relations Definition 3.23. A partial order (or simply an order relation) on a set A is a relation that is reflexive, antisymmetric, and transitive. A set A together with a partial order ⪯ on A is called a partially ordered set (or simply poset) and is denoted as (A; ⪯) Definition 3.24. For a poset (A; ⪯), two elements a and b are called comparable if a ⪯ b or b ⪯ a; otherwise they are called incomparable. Definition 3.25. If any two elements of a poset (A; ⪯) are comparable, then A is called totally ordered (or linearly ordered) by ⪯. Definition 3.26. In a poset (A; ⪯) an element b is said to cover an element a if a ≺ b and there exists no c with a ≺ c and c ≺ b (i.e., between a and b). Definition 3.27. The Hasse diagram of a (finite) poset (A; ⪯) is the directed graph whose vertices are labeled with the elements of A and where there is an edge from a to b if and only if b covers a. 4 Definition 3.28. The direct product of posets (A; ⪯) and (B; ⊑), denoted (A; ⪯) × (B; ⊑), is the set A × B with the relation ≤ (on A × B) defined by (a1, b1) ≤ (a2, b2) def ⇐⇒ a1 ⪯ a2 ∧ b1 ⊑ b2 Theorem 3.12. (A; ⪯) × (B; ⊑) is a partial ordered set. Theorem 3.13. For given posets (A; ⪯) and (B; ⊑), the relation ≤lex defined on A × B by (a1, b1) ≤lex (a2, b2) def ⇐⇒ a1 ≺ a2 ∨ (a1 = a2 ∧ b1 ⊑ b2) Definition 3.29. Let (A; ⪯) be a poset, and let S ⊆ A be some subset of A. Then 1. a ∈ A is a minimal (maximal) element of A if there exists no b ∈ A with b ≺ a (b ≻ a) 2. a ∈ A is the least (greatest) element of A if a ⪯ b (a ⪰ b) for all b ∈ A. 3. a ∈ A is a lower (upper) bound of S if a ⪯ b (a ⪰ b) for all b ∈ S. 4. a ∈ A is the greatest lower (least upper) bound of S if a is the greatest (least) element of the set of all lower (upper) bounds of S. Definition 3.30. A poset (A; ⪯) is well-ordered if it is totaly ordered and if every non- empty subset of A has a least element. Definition 3.31. Let (A; ⪯) be a poset. If a and b (i.e., the set {a, v} ⊆ A) have a greatest lower bound, then it is called the meet of a and b, often denoted a ∧ b. If a and b have a least upper bound, then it is called the join of a and b, often denoted a ∨ b. Definition 3.32. A poset (A; ⪯) in which every paor of elements has a meet and a join is called a lattice. 3.6 Functions Definition 3.33. A function f : A → B from a domain A to a codomain B is a relation from A to B with the special properties (using the relation notation af b): 1. f is totally defined ∀a ∈ A ∃b ∈ B af b, 2. f is well-defined ∀a ∈ A ∀b, b′ ∈ B (af b ∧ af b′ → b = b′). 5 Definition 3.34. The set of all functions A → B is denoted as BA. Definition 3.35. A partial function A → B is a relation from A to B such that ondition 2. above holds. Definition 3.36. For a function f : A → B and a subset S of A, the image of S under f , denoted f (S), is the set f (S) def = {f (a)|a ∈ S} Definition 3.37. The subset f (A) of B is called the image (or range) of f and is alson denoted Im(f ) Definition 3.38. For a subset T of B, the preimage of T denoted f −1(T ), is the set of values in A that map into T : f −1(T ) def = {a ∈ A|f (a) ∈ T } Definition 3.39. A function f : A → B is called 1. injective (or one-to-one or an injection) if for a ̸= a′ we have f (a) ̸= f (a′), i.e., no two distinct values are mapped to the same funciton value (there are no ”collisions”). 2. surjective (or onto) if f (A) = B, i.e., if for every b ∈ B, b = f (a) for some a ∈ A (every value in the codomain is taken on for some argument). 3. bijective (or bijection)if it is both injective and surjective. Definition 3.40. For a bijective function f , the inverse (as a relation, see 3.9) is called the inverse function of f , usually denoted as f −1. Definition 3.41. The composition of a function f : A → B and a function g : B → C, denoted by g ◦ f or simply gf , is defined by (g ◦ f )(a) = g(f (a)). Lemma 3.14. Function composition is associative, i.e., (h ◦ g) ◦ f = h ◦ (g ◦ f ). 3.7 Countable and Uncountable Sets 6 Definition 3.42. . (i) Two sets A and B equinumerous, denoted A ∼ B, if there exists a bijection A → B. (ii) The set B dominates the set A, denoted A ⪯ B, if A ∼ C for some subset C ⊆ B or, equivalently, if there exists an injective function A → B. (iii) A set A is called countable if A ⪯ N, and uncountable otherwise. Lemma 3.15. . (i) The relation ∼ is an equivalence relation. (ii) The relation ⪯ is transitive: A ⪯ B ∧ B ⪯ C ⇒ A ⪯ C. (iii) A ⊆ B ⇒ A ⪯ B. Theorem 3.16. A ⪯ B ∧ B ⪯ A ⇒ A ∼ B Theorem 3.17. A set A is coutnable if and only if it is finite or if A ∼ N. Theorem 3.18. The set {0, 1}∗ def = {ϵ, 0, 1, 00, 01, 10, 11, 000, . . . } of finite binary sequences is countable. Theorem 3.19. The set N × N (= N2) of ordered pairs of natual numbers is coutable. Corollary 3.20. The Cartesial product A × B of two countable sets A and B is couable, i.e., A ⪯ N ∧ B ⪯ N ⇒ (A × B) ⪯ N Corollary 3.21. The rational number Q are countable. Theorem 3.22. Let A and Ai, for i ∈ N be countable sets. (i) For any n ∈ N, the set An of n-tuples over A is countable. (ii) The union ⋃ i∈NAi of a countable list A0, A1, . . . of countable sets is countable. (iii) The set A∗ of finite sequence of elements from A is countable. Definition 3.43. Let {0, 1}∞ denote the set of semi-infinite binary sequences or, equiva- lently, the set of functions N → 0, 1. Theorem 3.23. The set {0, 1}∞ is uncountable. 7 Definition 3.44. A function f : N → {0, 1} is called computable if there is a program that, for every n ∈ N, when given n as input, outputs f (n). Corollary 3.24. There are uncomputable functions N → {0, 1} 8 4 Number Theory 4.2 Divisors and Division Definition 4.1. For integers a and b we say that a devides b, denoted a|b, if there exists an integer c such that b = ac. In this case, a is called a divisor of b, and b is called a multiple of a. If a ̸= 0 and a divisor c exists it is called the quotient when b is divided by a, and we write c = b a pr c = b/a. We write a ̸ |b if a does not divide b. Theorem 4.1 (Euclid). For all integers a and d ̸= 0 there exist unique integers q and r satisfying a = dq + r and 0 ≤ r < |d| Definition 4.2. For integer a and b (not both 0), an integer d is called a greatest common divisor of a and b if d divides both a and b and if every common divisor of a and b divides d, i.e., if d|a ∧ d|b ∧ ∀c ((c|a ∧ c|b) ← c|d) Definition 4.3. For a, b ∈ Z (not both 0) one denotes the unique positive greatest common divisor by gcd(a, b) and usually calls it the greatest common divisor. If gcd(a, b) = 1, then a and b are called relatively prime. Lemma 4.2. For any integers m, n, and q, we have gcd(m, n − qm) = gcd(m, n) Definition 4.4. For a, b ∈ Z, the ideal generated by a and b, denoted (a, b), is the set (a, b) def = {ua + vb|u, v ∈ Z} Similarly, the ideal generated by a single integer a is (a) def = {ua|u ∈ Z} Lemma 4.3. For a, b ∈ Z there exists d ∈ Z such that (a, b) = (d). Lemma 4.4. Let a, b ∈ Z (not both 0). If (a, b) = (d), then d is a greatest common divisor of a and b. Corollary 4.5. For a, b ∈ Z (not both 0), there exist u, v ∈ Z gcd(a, b) = ua + vb Definition 4.5. The least common multiple l of two positive integers a and b, denoted l = lcm(a, b), is the common multiple of a and b which divides every common multiple of a and b, i.e., a|l ∧ b|l ∧ ∀m ((a|m ∧ b|m) → l|m) 9 4.3 Factorization into Primes Definition 4.6. A positive integer p > 1 is called prime if the only positive divisor of p are 1 and p. An integer greater than 1 that is not a prime is called composite. Theorem 4.6. Every positive integer can be written uniquely (up to the order in which factors are listed) as the product of primes. Lemma 4.7. If p is prime which divides the product x1x2 · · · xn of some integers x1, . . . , xn, then p divides one of them, i.e., p|xi for some i ∈ {1, . . . , n}. Remark 4.1. Since we can write write any integers a and b as factors of primes a = ∏ i p ei i and b = ∏ i pfi i we can write gcd like this gcd(a, b) = ∏ i p min(ei,fi) i and lcm like this lcm(a, b) = ∏ i p max(ei,fi) i It’s easy to see that gcd(a, b) · lcm(a, b) = ab because for all i min(ei, fi) + max(ei, fi) = ei + fi 4.5 Congruence and Modular Arithmetic Definition 4.8. For a, b, m ∈ Z with m ≥ 1, we say that a is congruent to b modulo m if m divides a − b. We write a ≡ b(modm) or simply a ≡m b, i.e., a ≡m b def ⇐⇒ m|(a − b) Lemma 4.13. For any m ≥ 1, ≡m is an equivalence relation on Z. Lemma 4.14. If a ≡m b and c ≡m d, then a + c ≡m b + d and ac ≡m bd Corollary 4.15. Let f (x1, . . . , xk) be a multi-variable polynomial in k variables with integer coefficients, and let m ≥ 1. If ai ≡m bi for 1 ≤ i ≤ k, then f (a1, . . . , ak) ≡m f (b1, . . . , bk) Lemma 4.16. For any a, b, m ∈ Z with m ≥ 1, (i) a ≡m Rm(a). (ii) a ≡m b ⇐⇒ Rm(a) = Rm(b). Corollary 4.17. Let f (x1, . . . , xk) be a multi-variate polynomial in k variables with integer coefficients and let m ≥ 1. Then Rm (f (a1, . . . , ak)) = Rm (f (Rm(a1), . . . , Rm(ak))) . 10 Lemma 4.18. The congruence equation ax ≡m 1 has a solution x ∈ Zm if and only if gcd(a, m) = 1. The solution is unique. Definition 4.9. If gcd(a, m) = 1, the unique solution x ∈ Zm to the congruence equation ax ≡m 1 is called the multiplicative inverse of a modulo m. One also uses the notation x ≡m a−1 or x ≡m 1 a . Theorem 4.19. Let m1, . . . , mr be pairwise relatively prime integers and let M = ∏r i=1 mi. For every list a1, . . . , ar with 0 ≤ ai < mi for 1 ≤ i ≤ r, the system of congruence equations x ≡m1 a1x ≡m2 a2 . . . x ≡mr ar for x has a unique solution x satisfying 0 ≤ x < M . 11 5 Algebra 5.1 Introduction Definition 5.1. An operation on a set S is a function Sn → S, where n ≥ 0 is called the ”arity” of the operation. Definition 5.2. An algebra (or algebraic structure or Ω-algebra) is a pair ⟨S; Ω⟩ where S is a set (the carrier of the algebra and Ω = (ω1, . . . , ωn)) is a list of operations on S. 5.2 Monoids and Groups Definition 5.3. A left [right] neutral element (or identity element) of an algebra ⟨S; ∗⟩ is an element e ∈ S such that e ∗ a = a [a ∗ e = a] for all a ∈ S. If e ∗ a = a ∗ e = a for all a ∈ S, then e is simply called neutral element. Lemma 5.1. If ⟨S; ∗⟩ has both a left and a right neutral element, then they are equal. In particular ⟨S; ∗⟩ can have at most one neutral element. Definition 5.4. A binary operation ∗ on a set S is associative if a ∗ (b ∗ c) = (a ∗ b) ∗ c for all a, b, c ∈ S. Definition 5.5. A monoid is an algebra ⟨M ; ∗, e⟩ where ∗ is associative and e is the neutral element. Definition 5.6. A left [right] inverse element of an element a in an algebra ⟨S; ∗, e⟩ with neutral element e is an element b ∈ S such that b ∗ a = e [a ∗ b = e]. If b ∗ a = a ∗ b = e, hen b is simply called an inverse of a. Lemma 5.2. In a monoid ⟨M ; ∗, e⟩, if a ∈ M has a left and right inverse, then they are equal. In particular, a has at most one inverse. Definition 5.7. A group is an algebra ⟨G; ∗,̂, e⟩ satisfying the following axioms: G1 ∗ is associative. G2 e is a neutral element: a ∗ e = e ∗ a = a for all a ∈ G. G3 Every a ∈ G has an inverse element ̂a, i.e., a ∗ ̂a = ̂a ∗ a = e. Definition 5.8. A group ⟨G; ∗⟩ (or monoid) is called commutative or abelian if a∗b = b∗a for all a, b ∈ G. Lemma 5.3. For a group ⟨G; ∗,̂, e⟩, we have for all a, b, c ∈ G: 12 (i) ̂(̂a) = a, (ii) ̂a ∗ b = ̂b ∗ ̂a, (iii) Left cancellation law: a ∗ b = a ∗ c =⇒ b = c (iv) Right cancellation law: b ∗ a = c ∗ a =⇒ b = c (v) The equation a ∗ x = b has a unique solution x for any a and b. So does the equation x ∗ a = b. 5.3 The Structure of Groups Definition 5.9. The direct product of n groups ⟨G1; ∗1⟩, . . . , ⟨Gn; ∗n⟩ is the algebra. ⟨G1 × · · · × Gn; ⋆⟩ where the operation ⋆ is component-wise: (a1, . . . , an) ∗ (b1, . . . , b2) = (a1 ∗1 b1, . . . , an ∗n bn) Lemma 5.4. ⟨G1 × · · · × Gn; ⋆⟩ is a group, where the neutral element and the inverstion operation are component-wise in the respective groups. Definition 5.10. For two groups ⟨G; ∗,̂, e⟩ and ⟨H; ⋆,̃, e′⟩, a function ψ : G → H is called a group homomorphism if, for all a and b, ψ(a ∗ b) = ψ(a) ⋆ ψ(b) If ψ is a bijection from G to H, then it is called an isomorphism, and we say that G and H are isomorphic and write G ≃ H Lemma 5.5. A group homomorphism ψ from ⟨G; ∗,̂, e⟩ to ⟨H; ⋆,̃, e′⟩ satisfies (i) ψ(e) = e′, (ii) ψ(̂a) = ˜ψ(a) Definition 5.11. A subset H ⊆ G if a group ⟨G; ∗,̂, e⟩ is called a subgroup of G if ⟨H; ∗,̂, e⟩ is a group, i.e., if H is closed with respect to all operations: (i) a ∗ b ∈ H for all a, b ∈ H, (ii) e ∈ H, and (iii) ̂a ∈ H for all a ∈ H. Definition 5.12. Let G be a group and let a be an element of G. The order of a, denoted ord(a), is the least m ≥ 1 such that am = e, if such an m exists, and ord(a) is said to be infinite otherwise, written ord(a) = ∞. Lemma 5.6. In a finite grou G, every element has a finite order. 13 Definition 5.13. For a finite group G, |G| is called the order of G. Definition 5.14. For a group G and a ∈ G, the group generated by a, denoted ⟨a⟩, is defined as ⟨a⟩ def = {a n|n ∈ Z} Remark 5.1. The group generated by ⟨a⟩ is the smallest subgroup of G containing the element a ∈ G. Definition 5.15. A group G = ⟨g⟩ generated by an element g ∈ G is called cyclic, and g is called a generator of G. Theorem 5.7. A cyclic group of order n is isomorphic to ⟨Zn; ⊕⟩ (and hence commuta- tive/abelian) Theorem 5.8 (Lagrange). Let G be a finite group and let H be a subgroup of G. Then the order of H divides the order of G, i.e. |H| divides |G|. Corollary 5.9. For a finite group G, the order of every element devides the group order, i.e., ord(a) divides |G| for every a ∈ G. Corollary 5.10. Let G be a finite group. Then a|G| = e for every a ∈ G. Corollary 5.11. Every group of prime order is cyclic, and in such a group every element except the natural element is a generator. Definition 5.16. Z∗ m def = {a ∈ Zm| gcd(a, m) = 1}. Definition 5.17. The Euler function φ(m) = |Z∗ m| Lemma 5.12. If the prime factorization of m is m = ∏r i=1 pei i , then φ(m) = r∏ i=1(pi − 1)pei−1 i Theorem 5.13. ⟨Z∗ m; ⊙,−1 , 1⟩ is a group. Corollary 5.14 (Fermat,Euler). For all m ≥ 2 and all a with gcd(a, m) = 1, a φ(m) ≡m 1 In particular, for every prime p and every a not divisible by p, ap−1 ≡p 1 14 Theorem 5.15. The group Z∗ m is cyclic if and only if m = 2, m = 4, m = pe, or m = 2pe, where p is an odd prime and e ≥ 1. 5.4 Application: RSA Public-Key Encryption Theorem 5.16. Let G be some finte group (multiplicatively written), and let e ∈ Z be relatively prime to |G| (i.e. gcd(e, |G|) = 1). The function x ↦→ xe is a bijection and the (unique) e-th root of y ∈ G, namely x ∈ G satisfying xe = y, is x = yd where d is the muliplicative inverse of e modulo |G|, i.e., ed ≡|G| 1 5.5 Rings and Fields Definition 5.18. A ring ⟨R; +, −, 0, ·, 1⟩ is an algebra for which R1 ⟨R; +, −, 0⟩ is a commutative group, R2 ⟨R; ·, 1⟩ is a monoid, and R3 left and right distributive law: a(a + b) = (ab) + (ac) and (b + c)a = (ba) + (ca) for all a, b, c ∈ R. A ring is called commutative if multiplication is commutative (ab = ba) Lemma 5.17. For any ring ⟨R; +, −, 0, ·, 1⟩, and for all a, b ∈ R, (i) 0a = a0 = 0 (ii) (−a)b = −(ab) (iii) (−a)(−b) = ab (iv) If R is non trivial (i.e. if it has more tha one element), then 1 ̸= 0. Definition 5.19. The characteristic of a ring is the order of 1 in the additive group if it is finitem and otherwise the characteristic is defined to be 0 (not infinite). Definition 5.20. An element u of a ring R is claled a unit if u is invertible, i.e., uv = vu = 1 for some v ∈ R. (We write v = u−1.) The set of units of R is denoted by R∗. Lemma 5.18. For a ring R, R∗ is a multiplicative group (the group of units of R). Definition 5.21. For a, b ∈ R we say that a divides b, denoted a|b, if there exists c ∈ R such that b = ac. In this case, a is called a divisor of b and b is called a multiple of a. 15 Lemma 5.19. In any commutative ring, (i) If a|b and b|c, then a|c, i.e., the relation | is transitive, (ii) If a|b, then a|bc for all c, and (iii) If a|b and a|c, then a|(b + c). Definition 5.22. For ring elements a and b (not both 0), a ring element d is called a greatest common divisor of a and b if d divides both a and b and if every common divisor of a and b divides d, i.e., if d|a ∧ d|b ∧ ∀ ((c|a ∧ c|b) → c|d) Definition 5.23. An element a ̸= 0 of a commutative ring R is called a zerodivisor if ab = 0 for some b ̸= 0 in R. Definition 5.24. An integral domain is a (nontrivial) commutative ring without zerodivi- sors: ∀a∀b(ab = 0 → a = 0 ∨ b = 0). Lemma 5.20. In an integral domain, if a|b, then c with b = ac is unique (and is denoted by c = b a or c = b/a and called quotient). Definition 5.25. A polynomial a(x) over a commutative ring R in the indeterminate x is a formal expression of the form a(x) = adxd + · · · + a0x0 = d∑ i=1 aixi for some non-negative integer d, with ai ∈ R. The degree of a(x), denoted deg(a(x)), is the greatest i for which ai ̸= 0. The special polynomial 0 (i.e., all the ai are 0) is defined to have degree ”minus infinity”. Let R[x] denote the set of polynomials in x over R. Theorem 5.21. For any commutative ring R, R[x] is a commutative ring. Lemma 5.22. . (i) If D is an integral domain, then so is D[x]. (ii) The units of D[x] are the constant polynomials that are units of D: D[x]∗ = D∗. Definition 5.26. A field is a nontrivial commutative ring F in which every nonzero ele- ment is a unit, i.e., F ∗ = F \\{0}. 16 Theorem 5.23. Zp is a field if and only if p is prime. Theorem 5.24. A field is an integral domain. 5.6 Polynomials over a Field Definition 5.27. A polynomial a(x) ∈ F [x] is called monic if the leading coefficient is 1. Definition 5.28. A polynomial a(x) ∈ F [x] with degree at least 1 is called irreducible if it is divisible only by constant polynomials and by constant multiples of a(x). Definition 5.29. The monic polynomial g(x) of largest gegree such that g(x)|a(x) and g(x)|b(x) is called the greatest common divisor of a(x) and b(x), denoted gcd(a(x), b(x)). Theorem 5.25. Let F be a field. For any a(x) and b(x) ̸= 0 in F [x] there exist a unique q(x) (the quotient) and a unique r(x) (the remainder) such that a(x) = b(x) · q(x) + r(x) and deg(r(x)) < deg(b(x)). Definition 5.30. In an integral domain, a and b are called associates, denoted a ∼ b, if a = ub for some unit u. Definition 5.31. In an integral domain, a non-unit p ∈ D\\{0} is irreducible if, whenever p = ab, then either a or b is a unit. Lemma 5.26. a ∼ b ⇐⇒ a|b ∧ b|a Definition 5.32. A Euclidean domain is an integral domain D together with a so-called degree function d : D\\{0} → N such that (i) For every a and b ̸= 0 in D there exist q and r such that a = bq + r and d(r) < d(b) or r = 0. (ii) For all nonzero a and b in D, d(a) ≤ d(ab) Theorem 5.27. In a Euclidean domain every element can be factored uniquely (up to taking associates) into irreducible elements. 17 5.7 Polynomials as Functions Lemma 5.28. Polynomials evaluation is compatible with the ring operations: • If c(x) = a(x) + b(x), then c(α) = a(α) + b(α) for any α. • If c(x) = a(x) · b(x), then c(α) = a(α) · b(α) for any α. Definition 5.33. Let a(x) ∈ R[x]. An element α ∈ R for whch a(α) = 0 is called a root of a(x). Lemma 5.29. For a field F , α ∈ F is a root of a(x) if and only if x − α divides a(x). Corollary 5.30. A polynomial a(x) of degree 2 or 3 over a field F is irreducible if and only if it has no root. Theorem 5.31. For a field F , a nonzero polynomial a(x) ∈ F [x] of degree d has at most d roots. Lemma 5.32. A polynomial a(x) ∈ F [x] of degree at most d is uniquely determined by any d + 1 values of a(x), i.e., by a(α1), . . . , a(αd+1) for any distinct α1, . . . , αd+1 ∈ F . Lemma 5.33. Congruence modulo m(x) is a equivalence relation on F [x], and each equivalence class has a unique representation of degree less than deg(m(x)). Definition 5.34. Let m(x) be a polynomial of degree d over F . Then F [x]m(x) def = {a(x) ∈ F [x]| deg(a(x)) < d} Lemma 5.34. Let F e a finite field with q elements and let m(x) be a polynomial of degree d over F . Then |F [x]m(x)| = qd. Lemma 5.35. F [x]m(x) is a ring with respect to addition and multiplication modulo m(x). Lemma 5.36. The congruence equation a(x)b(x) ≡m(x) 1 (for a given a(x)) has a solution b(x) ∈ F [x]m(x) if and only if gcd(a(x), m(x)) = 1. The solution is unique. In other words, F [x] ∗ m(x) = {a(x) ∈ F [x]m(x)| gcd(a(x), m(x)) = 1} Theorem 5.37. The ring F [x]m(x) is a field if and only if m(x) is irreducible. Theorem 5.38. For every prime p and every d ≥ 1 there exists an irreducible polynomial of degree d in GF(p)[x]m(x). In particular, there exists a finite field with pd elements. 18 Theorem 5.39. There exists a finite field with q elements if and only if q is a power of a prime. Moreover, any two finite fields of the same size q are isomorphic. Theorem 5.40. The muliplicative group of every finite field GF(q) is cyclic. 5.8 Application: Error-Correcting Codes Definition 5.35. A (n−k)-encoding function E for some alphabet A is an injecive function that mpas a list (a0, . . . , ak−1) ∈ Ak of K (information) symbols to a list (c0, . . . , cn−1) ∈ An of n > k (encoded) symbols in A, called codeword: E : Ak → A n : (a0, . . . , ak−1) ↦→ E((a0, . . . , ak−1)) = (c0, . . . , cn−1) Definition 5.36. An (n, k)-error-correcting code over the alphabet A with |A| = q is a subset of An of cardinality qk. Definition 5.37. The Hamming distance between two strings of equal length over a finite alphabet A is the number of positions at which the two strings differ. Definition 5.38. The minimum distance of an error-correcring code C, denoted dmin(C), is the minimum of the Hamming distance between any two codewords. Definition 5.39. A decoding function D for an (n, k)-encoding function is a function D : An → Ak. Definition 5.40. A decoding function D is t-error correcting for encoding function E if for any (a0, . . . , ak−1) D ((r0, . . . , rn−1)) = (a0, . . . , ak−1) for any (r0, . . . , rn−1) with Hamming distance at most t from E ((a0, . . . , ak−1)). A code C is t-error correcting if there eists E and D with C = Im(E) where D is t-error correcting. Theorem 5.41. A code C with minimum distance d is t correcting if and only if d ≥ 2t+1. Theorem 5.42. Let A = GF(q) and let α0, . . . , αn−1 be arbitrary distinct elements of GF(q). Consider the encoding function E((a0, . . . , ak−1)) = (a(α0), . . . , a(αn−1)) where a(x) is the polynomial a(x) = ak−1xk−1 + · · · + a0x0 19 This code has minimum distance n − k + 1. 6 Logic 6.2 Proof Systems Definition 6.1. A proof system is a quadruple Π = (S, P, τ, ϕ), where S is the set of all possible statements, P is the set of all possible proofs, τ : S → {0, 1}, and ϕ : S ×P → {0, 1} Definition 6.2. A proof system Π = (S, P, τ, ϕ) is sound if no false statement has a proof, i.e., if for all s ∈ S for which there exists p ∈ P with ϕ(s, p) = 1, we have τ (s) = 1. Definition 6.3. A proof system Π = (S, P, τ, ϕ) is complete if every true statement has a proof, i.e., if for all s ∈ S whit τ (s) = 1, there exists p ∈ P with ϕ(s, p) = 1. 6.3 Elementary General Concepts in Logic Definition 6.4. The syntax of a logic defines an alphabet Λ (of allowed symbols) and specifies which strings in λ∗ are formulas (i.e., are syntactically correct). Definition 6.5. The semantics of alogic defines (among other things) a function free which assigns to each formula F = (f1, . . . , fk) ∈ Λ∗ a subset free(F ) ⊆ {1, . . . , k} of indices. If i ∈ free(F ), then the symbol fi is said to occur free in F . Definition 6.6. An interpretation consists of a set Z ⊆ Λ of symbols of Λ, a domain (a set of possible values) for each symbol in Z, and a function that assigns to each symbol in Z a value in its associated domain. Definition 6.7. An interpretation is suitable for a formula F if it assigns a value to all symbols β ∈ Λ occurring free in F . Definition 6.8. The semantics of a logic also defines a function σ assigning to each formula F , and each interpretation A suitable for F , a truth value σ(F, A) in {0, 1}. In treatments of logic one often writes A(F ) instead of σ(F, A) and calls A(F ) the truth value of F under interpretation A. Definition 6.9. A (suitable) interpretation A for which a formula F is true, (i.e., A(F ) = 1) is called a model for F , and one also writes A |= F More generally, for a set M of formulas, a (suitable) interpretation for which all formulas 20 in M are true is called a model for M , denoted as A |= M If A is not a model for M one write A ̸ |=M . Definition 6.10. A formula F (or set M of formulas) is called satisfiable if there exists a model for F (or M ), and unsatifiable otherwise. The symbol ⊥ is used for an unsatisfiable formula. Definition 6.11. A formula F is called a tautology or valid if it is true for every suitabke interpretation. The symbol ⊤ is used for a tautology. Definition 6.12. A formula G is a logical consequence of a formula F (or a set M of formulas), denoted F |= G (or M |= G) if very interpretation suitable for both F (or M ) and G, which is a model for F (for M ), is also a model for G. Definition 6.13. Two formulas F and G are equivalent, denoted F ≡ G, if every inter- pretation suitable for both F and G yields the same truth value for F and G, i.e., if each one is a logical consequence of the other: F ≡ G def ⇐⇒ F |= G and G |= F Definition 6.14. If F is a tautology, one also write |= F . Definition 6.15. If F and G are formulas, then also ¬F , (F ∧ G), and (F ∨ G) are formulas. Remark 6.1. (F → G) def ⇐⇒ (¬F ∨ G) (F ↔ G) def ⇐⇒ ((F ∧ G) ∨ (¬F ∧ ¬G)) Definition 6.16. A((F ∧ G)) = 1 def ⇐⇒ A(F ) = 1 and A(G) = 1 A((F ∨ G)) = 1 def ⇐⇒ A(F ) = 1 or A(G) = 1 A(¬F ) = 1 def ⇐⇒ A(F ) = 0 21 Lemma 6.1. For any formulas F ,G, and H we have (i) F ∧ F ≡ F and F ∨ F ≡ F (idempotence); (ii) F ∧ G ≡ G ∧ F and F ∨ G ≡ G ∨ F (commutativity); (iii) (F ∧ G) ∧ H ≡ F ∧ (G ∧ H) and (F ∨ G) ∨ H ≡ F ∨ (G ∨ H) (associativity); (iv) F ∧ (F ∨ G) ≡ F and F ∨ (F ∧ G) (absorption); (v) F ∧ (G ∨ H) ≡ (F ∧ G) ∨ (F ∧ H) (distributive law); (vi) F ∨ (G ∧ H) ≡ (F ∨ G) ∧ (F ∨ H) (distributive law); (vii) ¬¬F ≡ F (double negation); (viii) ¬(F ∧ G) ≡ ¬F ∨ ¬G and ¬(F ∨ G) ≡ ¬F ∧ ¬G (de Morgan’s law); (ix) F ∨ ⊤ ≡ ⊤ and F ∧ ⊤ ≡ F (tautology rules); (x) F ∨ ⊥ ≡ F and F ∧ ⊥ ≡ ⊥ (unsatisfiability rules); (xi) F ∨ ¬F ≡ ⊤ and F ∧ ¬F ≡ ⊥; Lemma 6.2. A formula F is a tautology if and only if ¬F is unsatisfiable. Lemma 6.3. The following three statements are equivalent: (i) {F1, . . . , Fk} |= G (ii) (F1, . . . , Fk) → G is a tautology (iii) {F1, . . . , Fk, ¬G} is unsatisfiable. 6.4 Logical Calculi Definition 6.17. A dervation rule or inference rule is a rule for deriving a formula from a set of formulas (called the precondition or premises). We write {F1, . . . , Fk} ⊢R G if G can be derived from the set {F1, . . . , Fk} by rule R. Definition 6.18. The application of a derivation rule R to a set M of forumulas means. Assigning a formula F ∈ M to any placeholder in R and adding the resulting formula G to the set M . Definition 6.19. A (logical) calculus K is a finite set of derivation rules K = {R1, . . . , Rm}. Definition 6.20. A derivation of a formula G from a set M of formulas in a calculus K is a finite sequence (of some length n) of applications of rules inK, leading to G. More precisely, we have • M0 := M , 22 • Mi := Mi−1 ∪ {Gi} for 1 ≤ i ≤ n, where N ⊢Ri Gi for some N ⊆ Mi−1 and for some Rj ∈ K, and where • Gn = G. We write M ⊢K G if three is a derivation of G from M in the calculus K. Definition 6.21. A derivation rule R is correct if for every set M of formulas and every formula F , M ⊢R F implies M |= F . Definition 6.22. A calculus K is sound or correct if for every set M of formulas and every formula F , if F can be derived from M then F is also a logical consequence of M : M ⊢K F =⇒ M |= F and K is complete if for every M and F , if F is a logical consequence of M then F can also be derived from M : M |= F =⇒ M ⊢K F 6.5 Propositional Logic Definition 6.23 (Syntax). An atomic formula is a symbol of the form Ai with i ∈ N. A formula is defined as follows: • An atomic formula is a formula. • If F and G are formulas, then also ¬F , (F ∧ G), and (F ∨ G) are formulas. Definition 6.24 (Semantics). For a set Z of atomic formulas, an interpretation A, called truth assignment, is a function A : Z → {0, 1}. A truth assignment A is suitable for a formula F if Z contains all atomic formulas appearing in F . The semantics (i.e., the truth value of A(F ) of a formula F under interpretation A) is defined by A(F ) = A(Ai) for any atomic formula F = Ai, and by Definition 6.16 A((F ∧ G)) = 1 def ⇐⇒ A(F ) = 1 and A(G) = 1 A((F ∨ G)) = 1 def ⇐⇒ A(F ) = 1 or A(G) = 1 A(¬F ) = 1 def ⇐⇒ A(F ) = 0 Definition 6.25. A literal is an atomic formula or the negation of an atomic formula. 23 Definition 6.26. A formula F is in conjunctive normal form (CNF) if it is a conjunction of disjunctions of literals, i.e., if it is of the form F = (L11 ∨ · · · ∨ L1m1) ∧ · · · ∧ (Ln1 ∨ · · · ∨ Lnmn) for some literals Lij. Definition 6.27. A formula F is in disjunctive normal form (DNF) if it is a disjunction of conjunctions of literals, i.e., if it is of the form F = (L11 ∧ · · · ∧ L1m1) ∨ · · · ∨ (Ln1 ∧ · · · ∧ Lnmn) for some literals Lij. Theorem 6.4. Every formula is equivalent to a formula in CNF and also to a formula in DNF. Definition 6.28. A clause is a set of literals. Definition 6.29. The set of clauses associated to a formula F = (L11 ∨ · · · ∨ L1m1) ∧ · · · ∧ (Ln1 ∨ · · · ∨ Lnmn) in CNF, denoted as K(F ), is the set F def = {{L11, . . . , L1m1}, . . . , {Ln1, . . . , Lnmn}} The set of clauses associated with a set M = {F1, . . . , Fk} of formulas is the union of their clause sets: K(M ) def = k⋃ i=1 K(Fi) Definition 6.30. A clause K is a resolvent of clauses K1 and K2 if there is a literal L such that L ∈ K1, ¬L ∈ K2, and K = (K1\\{L}) ∪ (K2\\{¬L}) Lemma 6.5. The resolution calculus is sound, i.e., if K ⊢Res K then K |= K. Theorem 6.6. A set M of formulas is unsatisfiable if and only if K(M ) ⊢Res ∅. 6.6 Predicate Logic (First-order Logic) 24 Definition 6.31 (Syntax of predicate logic). • A variable symbol is of the form xi with i ∈ N • A function symbol is of the form f (k) i with i, k ∈ N, where k denotes the number of arguments of the function. Funcion symbols for k = 0 are called constants. • A predicate symbol is of the form P (k) i with i, k ∈ N, where k denotes the number f arguments of the predicate. • A term is defined inductively: A variable is a term and if t1, . . . , tk are terms, then f (k) i (t1, . . . , tk) are terms, then f (k) i (t1, . . . , tk) is a term. For k = 0 one writes no parentheses. • A formula is defined inductively: – For any i and k, if t1, . . . , tk are terms, then P (k) i (t1, . . . , tk) is a formula, called an atomic formula. – If F and G are formulas, then ¬F , (F ∧ G), and (F ∨ G) are formulas. – If F is a formula, then, for any i, ∀xiF and ∃xiF are formulas. Definition 6.32. Every occurrence of a varible in a formula is either bound or free. If a veriable x occurs in a (sub-)formula of the form ∀xG or ∃xG, then it is bound, otherwise it is free. A formula is closed if it contains no free variables. Definition 6.33. For a formula F , a variable x and a term t, F [x/t] denotes the formula obtained from F by subtituting every free occurence of x by t. Definition 6.34. An interpretation or structure is a tuple A = (U, ϕ, ψ, ξ) where • U is a non-empty universe, • ϕ is a function assigning to each function symbol (in a certain subset of all function symbols) a function, where for a k-ary function symbol f , ϕ(f ) is a function U k → U , • ψ is a function assigning to each predigcate symbol (in a certain subset of all predicate symbols) a function, where for a k-ary predicate symbol P , ψ(P ) is a function U k → {0, 1}, and where • ξ is a function assigning to each variable symbol (in a certain subset of all variable symbols) a value in U . Definition 6.35. A interpretation (structure) A is suitable for a formula F if it defines all functions symbols, predicate symbols, and freely occuring variables of F . 25 Definition 6.36 (Semantics). For aninterpretation (structure) A = (U, ϕ, ψ, ξ), we define the value (in U ) of the terms and the truth value of formulas under that structure. • The value A of a ter t is defined recursively as follows: – If t is a veriable, i.e. t = xi, then A(t) = ξ(xi). – If t is of the form f (t1, . . . , tk) for terms t1, . . . , tk and a k-ary predicate symbol P , then A(t) = ϕ(f )(A(t1), . . . , A(tk)). • The truth value of a formula F is defined recursively by Definition 6.16 and – If F is of the form F = P (t1, . . . , tk) for term t1, . . . , tk and a k-ary predicate symbol P , then A(F ) = ψ(P )(A(t1), . . . , A(tk)). – If F is of the form ∀xG or ∃xG, then let A[x→u] for u ∈ U be the same structure as A except that ξ(x) is overwritten by u (i.e.,ξ(x) = u): A(∀xG) = { 1 if A[x→u](G) = 1 for all u ∈ U 0 else A(∃xG) = { 1 if A[x→u](G) = 1 for some u ∈ U 0 else Definition 6.37. For any formulas F , G, and H, where x does not occur free in H, we have (i) ¬(∀xF ) ≡ ∃x¬F ; (ii) ¬(∃xF ) ≡ ∀x¬F ; (iii) (∀xF ) ∧ (∀xG) ≡ ∀x(F ∧ G); (iv) (∃xF ) ∨ (∃xG) ≡ ∃(F ∨ G); (v) ∀x∀yF ≡ ∀x∀yF ; (vi) ∃x∃yF ≡ ∃x∃yF ; (vii) (∀xF ) ∧ H ≡ ∀(F ∧ H); (viii) (∀xF ) ∨ H ≡ ∀(F ∨ H); (ix) (∃xF ) ∧ H ≡ ∃(F ∧ H); (x) (∃xF ) ∨ H ≡ ∃(F ∨ H); Lemma 6.7. If one replaces a sub-formula G of a formula F by an equivalent (to G) formula H, then the resulting formula is equivalent to F . Lemma 6.8. For a formula G in which y does not occure we have • ∀xG ≡ ∀yG[x/y], • ∃xG ≡ ∃yG[x/y], 26 Definition 6.38. A formula in which no variable occurs both as a bound and as a free variable and in which all variables appreaing after the quantifiers are distinct is said to be rectified form. Definition 6.39. A formula of the form Q1x1 · · · QnxnG where the Qi are arbitrary quantifiers (∀ or ∃) and G is a formula free of quantifiers, is said to be in prenex form. Theorem 6.9. For every formula there is an equivalent formula in prenex form. Lemma 6.10. For any formula F and any term t we have ∀xF |= F [x/t] 27","libVersion":"0.5.0","langs":""}