{"path":"sem1/EProg/extra/slides/EProg_s10_invarianten.pdf","text":"252 - 0027 Ei n f ü h r u n g in di e Pr o g r a m m i e r u n g 2. 0 Ei n f a c h e Ja v a Pr o g r a m m e Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ür i c h 119 Üb e r s i c h t § 2. 8 Noc h m a l s Sc h l e i f e n § 2. 8. 1 Ku r z fo r m e n ( fü r Ak t u a l i s i e r u n g ) § 2. 8. 2 Ku r z fo r m e n und be di ng t e (« s h o r t - ci r cu i t » ) Au s f ü h r u n g § 2. 8. 3 Te r m i n i e r u n g vo n Sc h l e i f e n § 2. 8. 4 I n p u t We r t e zu r Sc h l e i f e n k o n t r o l l e § 2. 8. 5 In v a r i a n t e n 120 2. 8. 3 Te r m i n i e r u n g vo n Sc h l e i f e n 121 Ei n e tr i v i a l e Auf g a be ... § Sc h r e i b e n Si e ei n e Me t h o d e printNumbers di e di e Za h le n vo n 1 bi s N dur c h Ko m m a ge t r e n n t au sg i b t . Bei s p i el : Obergrenze N eingeben : 5 so l l t e er g eb en : 1, 2, 3, 4, 5 122 Lö sung sa nsa tz public static void printNumbers () { Scanner console = new Scanner( System.in ); System.out.print (\" Obergrenze N eingeben : \"); int max = console.nextInt (); for ( int i = 1; i <= max; i ++) { System.out.print ( i + \", \"); } System.out.println (); // to end the line of output } 123 We l c h e Sc h l e i f e n lie f e r n ge w ü n s c h t e n Ou t p u t ? public static void printNumbers () { Scanner console = new Scanner( System.in ); System.out.print (\" Obergrenze N eingeben : \"); int max = console.nextInt (); // Option A for (int i = 1; i <= max; i ++) { System.out.print ( i + \", \"); } System.out.println (); // to end the line of output // Option B for (int i = 1; i <= max; i ++) { System.out.print (\", \" + i ); } System.out.println (); // to end the line of output } }// printNumbers Po l l 124 Ga r t e nz a un Ana lo gie § Wi r ge b e n n Za h le n au s ab e r br a uc he n nur n - 1 Ko m m a s . § Äh n l i c h de m Ba u ei n es We i d e z a u n e s mi t Pf o s t e n und Qu e r s t r e b e n § We n n wi r – wi e in d e r 1 . fe h l e r h a f t e n Lö s ung – Pf o s t e n und St r e b e n in s t a llie r e n da nn ha t de r le t z t e Pf o s t e n in d e r Luf t hä ng e nde St r e b e n . fo r ( Lä n g e de s Za u n s ) { Be t on i e r e Pf o s t e n . In s t a l l i e r e Qu e r s t r e b e n . } 129 Ga r t e nz a un Ana lo gie § Wi r ge b e n n Za h le n au s ab e r br a uc he n nur n - 1 Ko m m a s . § Äh n l i c h de m Ba u ei n es We i d e z a u n e s mi t Pf o s t e n und Qu e r s t r e b e n § We n n wi r – wi e in d e r 2 . fe h l e r h a f t e n Lö s ung – St r e b e n und Pf o s t e n in s t a llie r e n da nn ha t de r er s t e Pf o s t e n in d e r Luf t hä ng e nde St r e b e n . fo r ( Lä n g e de s Za u n s ) { In s t a l l i e r e Qu e r s t r e b e n . Be t on i e r e Pf o s t e n . } 130 Sc h l e i f e § Fü g e n Si e ei n e An w e i s u n g au sse r h al b de r Sc h l e i f e hi nz u um de n er s t en « Pf o s t e n » zu pl a z i e r e n Be t on i e r e Pf o s t e n . fo r ( Lä n g e de s Za u n s - 1) { In s t a l l i e r e Qu e r s t r e b e n . Be t on i e r e Pf o s t e n . } 131 Lö sung en ba s ie r e nd au f die s e r Ide e System.out.print (1); for ( int i = 2 ; i <= max; i ++) { System.out.print ( \", \" + i ); } System.out.println (); // to end the line Al t e r n a t i v e : 1 . od e r le t z t e r Du r c h l a u f dur c h di e Sc h l e i f e ka n n ve r ä n d e r t we r d e n : for ( int i = 1; i <= max - 1 ; i ++) { System.out.print ( i + \", \" ); } System.out.println (max); // to end the line 132 Lö sung ( ei n e Mög l i c h k ei t ) public static void printNumbers () { Scanner console = new Scanner( System.in ); System.out.print (\" Obergrenze N eingeben : \"); int max = console.nextInt (); System.out.print (1); for ( int i = 2; i <= max; i ++) { System.out.print (\", \" + i ); } System.out.println (); // to end the line } 133 «o f f - by - on e» E r r or ( Um - Ei n s - Da n e b e n - Fe h l e r ) § Di e Sc h l e i f e wu r d e ei n ma l zu v i e l ( od e r ei n ma l zu w e n i g ) dur c hl a uf e n . § « Za u n p f a h lp r o b le m » – es gi b t so g ar ei n e D W i k i p e d i a Se i t e ( In h a lt oh n e Ge w ä hr ) 134 Te r m i n i e r u n g vo n L o o p s § Ve r w a n d e l n Si e d i e Me t h o d e printNumbers in ei n e ne ue Me t h o d e printPrimes di e a l l e Pr i m z a hl e n ( dur c h Ko m m a ge t r e n n t ) b i s zu r Ob e r g r e n z e ma x au sg i b t ( ma x ≥ 2 ) . § Be i s p i e l : printPrimes mi t Ei ng a be 50 er g i b t : 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47 § Ei n e Pr i m z a hl p ka n n in ge n a u zw e i Fa k t o r e n ze r l e g t we r d e n : p und 1 135 import java.util .*; class PrintPrimes1 { public static void main (String[] args ) { Scanner console = new Scanner( System.in ); System.out.print (\"Input max: \"); int max = console.nextInt (); if (max >= 2) { printPrimes (max); } } public static void printPrimes ( int limit) // Prints all prime numbers up to limit, limit >= 2 System.out.print (\"2\"); for ( int candidate = 3; candidate <= limit; candidate++) { if ( /* isPrime (candidate) */ ) { System.out.print (\", \" + candidate); } } System.out.println (); // to end output } } 137 public static void printPrimes ( int limit) { // Prints all prime numbers from 2 up to the given limit // limit >= 2 System.out.print (\"2\"); for ( int candidate = 3; candidate <= limit; candidate++) { // Determine if candidate is prime // Count factors! 2: prime, >2 not prime int count = 0; for ( int j = 1; j<=candidate; j++ ) { if (candidate % j == 0) { count++; } } if (count == 2) { System.out.print (\", \" + candidate); } } System.out.println (); // to end output } 139 2. 8. 4 I n p u t We r t e zu r Sc h l e i f e n Ko n t r o l l e § In t e r e s s a n t e s Bei s p i el ei n es unbe s t i m m t e n Lo o p s § Ka n d i d a t fü r wh i l e - Sc h l e i f e § We r t wi r d ni c h t ( nur ) zu r Ber ec h n u n g ve r w e n d e t so n d e r n ko n t r o l l i e r t au c h de n L o o p ( d. h. di e Te r m i n i e r u n g ) § We r t is t ( zu s ä t z l i c h ) Hi n w e i s 141 § Hi n w e i s z e i c h e n (S e n t i n e l ) (« s e n t i n e l » ): E i n W e r t d e r d a s En d e ei n e Re i h e an z e i g t § se n t in e l lo o p : Sc h l e i f e de r e n Ru m p f au s g e f ü h rt wi r d bi s ei n Se n t i n e l ge s e h e n wu r d e § Bei s p i el : Ei n Pr o gr a m m so l l Za h le n ei n l es en bi s de r Ben u t z er ei n e 0 ei n g i b t ; da nn so l l di e Su m m e al l e r ei n g eg eb en en Za h le n au sg e g e b e n we r d e n . § (I n di e s e m Be i s p i e l is t 0 d a s Hi n w e i s z e i c h e n /d e r S e n t i n e l . ) We r t e die Hi n w ei se si n d … 142 § Bei s p i el : Ei n Pr o gr a m m so l l Za h le n ei n l es en bi s de r Ben u t z er ei n e 0 ei n g i b t ; da nn so l l di e Su m m e al l e r ei n g eg eb en en Za h le n au sg e g e b e n we r d e n . § (I n di e s e m Be i s p i e l is t 0 d a s Hi n w e i s z e i c h e n /d e r S e n t i n e l ) Enter a number (0 to quit): 10 Enter a number (0 to quit): 20 Enter a number (0 to quit): 30 Enter a number (0 to quit): 0 The sum is 60 We r t e die Hi n w ei se si n d … 143 Fe h l e r h a f t e Lö sung § Wa s is t an di e s e m Pr o gr a m m sc h l e c h t ? Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but 0 while (number != 0) { System.out.print (\"Enter a number (0 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); 144 Ei n an d e r e s Hi n w ei s z ei c h en … § Än d e r n Si e d as Pr o gr a m m so da s s - 1 d e r S e n t i n e l is t . Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but 0 while (number != - 1) { System.out.print (\"Enter a number (0 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); 145 Ei n an d e r e s Hi n w ei s z ei c h en … § Än d e r n Si e d as Pr o gr a m m so da s s - 1 d e r S e n t i n e l is t . § Ex a m pl e l o g o f e x e c ut i o n: Enter a number ( - 1 to quit): 15 Enter a number ( - 1 to quit): 25 Enter a number ( - 1 to quit): 10 Enter a number ( - 1 to quit): 30 Enter a number ( - 1 to quit): - 1 The total is 79 146 Ei n an d e r e s Hi n w ei s z ei c h en … § Se tz e n Si e de n S e n t i ne l a uf - 1: Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but - 1 while (number != - 1 ) { System.out.print (\"Enter a number ( - 1 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); § Je tz t is t da s R e s ul t fa l s c h . Wa r u m ? The total is 79 147 Fe h l e r h a f t e Lö sung – 0 à - 1 § Wa s is t an di e s e m Pr o gr a m m fa l s c h ? Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but 0 while (number != 0) { System.out.print (\"Enter a number ( 0 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); § Wa s is t an di e s e m Pr o gr a m m fa l s c h ? Scanner console = new Scanner( System.in ); int sum = 0; int number = 1; // \"dummy value\", anything but - 1 while (number != - 1 ) { System.out.print (\"Enter a number ( - 1 to quit): \"); number = console.nextInt (); sum = sum + number; } System.out.println (\"The total is \" + sum); 148 Da s P r o b l e m mi t die s e m Pr o g r am m § Uns e r Pr o gr a m m fo l g t di e s e m Mu s t e r : su m m e = 0 wh i l e ( i n p u t is t ni c h t de r s e n t i ne l ) { dr uc k e pr o m p t ; l e s e i nput ad d i er e in p u t zu su m m e } § Bei m le t z t e n Du r c h l a u f dur c h de n Rum p f wi r d de r S e n t i ne l - 1 zu r Su m m e ad d i e r t : 150 Da s P r o b l e m mi t die s e m Pr o g r am m § Bei m le t z t e n Du r c h l a u f dur c h de n Rum p f wi r d de r S e n t i ne l - 1 zu r Su m m e ad d i e r t : dr uc k e pr o m p t ; l e s e i nput ( - 1) ad d i er e in p u t ( - 1) zu su m m e § Bei s p i el in k o r r e k t e r Te r m i n i e r u n g (of f - by - on e e r r or , Za u n p f a h lp r o b le m ): § Mü s s e n N Za h l e n le s e n ab er nur di e er s t en N - 1 ad d i er en . 151 Lö sung su m m e = 0 dr uc k e pr o m p t ; l e s e i nput // se t z e n ei n es pf o s t e ns wh i l e ( i n p u t is t ni c h t de r s e n t i ne l ) { addi e r e in p u t zu su m m e // i n s t a l l a t i o n que r s t r e be dr uc k e pr o m p t ; l e s e i nput // se t z e n ei n es pf o s t e ns } § Sc h l e i f e n mi t ei n em Se n ti n e l fo l g e n of t di e s e m Mu s t e r . 152 Be i s p i e l mi t Se n t i n e l Scanner console = new Scanner( System.in ); int sum = 0; // pull one prompt/read (\"post\") out of the loop System.out.print (\"Enter a number ( - 1 to quit): \"); int number = console.nextInt (); while (number != - 1) { sum = sum + number; // moved to top of loop System.out.print (\"Enter a number ( - 1 to quit): \"); number = console.nextInt (); } System.out.println (\"The total is \" + sum); 154 do - while - Sc h l e i f e § do - wh i l e - Sc h l e i f e : Fü h r t te s t am Ende de s Sc h l e i f e n r u m p f e s aus um zu en t s c h ei d en , ob ei n we i t e r e r Dur c hl auf nö t i g is t § St e l l t si c h e r da s s de r Ru m p f { … } mi n d e s t e n s ei n m al au s g e f ü h rt wi r d . do { st a t e m e nt ( s ) ; } while ( te s t ); // naechste Anweisung An w e i s u n g ( e n ) im Lo o p au s f ü h re n Is t te s t wa h r ? An w e i s u n g na c h Lo o p au s f ü h re n ja ne i n 155 do - while - Sc h l e i f e § Bei s p i el : // Example: prompt until correct PIN is typed int input; do { System.out.print (\"Type your PIN: \"); input = console.nextInt (); } while (input != userPinCode ); An w e i s u n g ( e n ) im Lo o p au s f ü h re n Is t te s t wa h r ? An w e i s u n g na c h Lo o p au s f ü h re n ja ne i n 156 Üb e r s i c h t § 2. 8 Noc h m a l s Sc h l e i f e n § 2. 8. 1 Ku r z fo r m e n ( fü r Ak t u a l i s i e r u n g ) § 2. 8. 2 Ku r z fo r m e n und be di ng t e (« s h o r t - ci r cu i t » ) Au s f ü h r u n g § 2. 8. 3 Te r m i n i e r u n g vo n Sc h l e i f e n § 2. 8. 4 I n p u t We r t e zu r Sc h l e i f e n k o n t r o l l e § 2. 8. 5 In v a r i a n t e n 157 2. 8. 5 I n v a ri a n t e n 158 Aus s a g e n übe r P r o gr a m m ( s e gm e n t ) e § Zu w e i su n g e n , « i f » - An w e i s u n g e n § (G ü lt ig e ) H o a r e - Tr i p e l § Fo l g e n v o n A n w e i s u n g e n § Ge n a u s o § Sc h l e i f e n § Di e m e i s t e n P r o g r a m m e v e r b r i n g e n d i e m e i s t e Z e i t i n S c h l e i f e n § Sc h w i e r i g e r a l s F o l g e n v o n A n w e i su n g e n : m e h r f a c h e A u s fü h r u n g d e s Ru m p f e s 159 Sc h l e i f e n § Fo ku s a u f « w h i l e » - Lo o p § Al l g e m e i n e r a l s « fo r » - Lo o p § Zu sä t z l i c h : K e i n e ni c h t - lo k a le n Ko n t r o l l t r a n s f e r s § Al s o o h n e break und continue § Kö n n t e n S i e b e r e i t s k e n n e n ( g e b r a u c h e n w i r a b e r n o c h n i c h t ) ni c h t - lo k a le r Ko n t r o l l t r a n s f e r : nac h Au s f ü h r u n g de r An w e i s u n g A is t di e näc hs t e aus g e f ühr t e An w e i s u n g X ni c h t di e An w e i s u n g B, d i e im Pr o g r a mm t e x t auf A fo l g t § Ko n t r o l l t r a n s f e r na c h if - Bl o ck od e r Loop T es t is t lo k a le r Tr a n s f e r § Ko n t r o l l t r a n s f e r au s de r M i t t e de s L o o p s is t ni c h t - lo k a le r Tr a n s f e r 160 Be i s p i e l ( in f o r m e ll ) Wa s is t di e Gr undi de e ? Se h e n wi r uns ei n en Lo o p a n : ( int Va r i a b l e , ke i n Ov e r f l ow / U n d e r f l ow ) 161 // y = 0; i = 0; // // while ( i != x) { // i = i+1; // y = y+i ; // } // // Be i s p i e l ( in f o r m e ll ) Wa s is t di e Gr undi de e ? Se h e n wi r uns ei n en Lo o p a n : 163 // x >= 0 y = 0; i = 0; // // while ( i != x) { // i = i+1; // y = y+i ; // } // // y == sum(1,x) Be i s p i e l ( i n f o r m e l l ) § Mü s s e n d e n L o o p z u s a m m e n f a s s e n ( u m A u s s a g e a m E n d e de s Pr o gr a m m s z u un t e r s uc he n) § In v a r ia n t e : Z u s a m m e n f a s s u n g d e s L o o p B o d y § De c k t a b ke i n e It e r a t i o n ( v o r 1 . Au s f ü h r u n g , k e i n e Au s f ü h r u n g d e s Lo o p B o dy ) § De c k t a b k It e r a t i o n e n 166 // x >= 0 y = 0; i = 0; // x >= 0 ∧ y == 0 ∧ i == 0 // invariant: y == sum(1,i) while ( i != x) { // y == sum(1,i) ∧ i != x i = i+1; // y == sum(1,i - 1) y = y+i ; // y == sum(1,i - 1)+ i } // i == x ∧ y == sum(1,i) // y == sum(1,x) 167 // x >= 0 y = 0; i = 0; // x >= 0 ∧ y == 0 ∧ i == 0 // invariant: y == sum(1,i) while ( i != x) { // y == sum(1,i) ∧ i != x i new = i+1; // y == sum(1,i new - 1) y new = y+i new ; // y new == sum(1,i new - 1)+ i new i = i new y = y new ; } // i == x ∧ y == sum(1,i) // y == sum(1,x) 172 Be o b a c h t u n g e n § Um Au s s a g e n übe r di e Au s f ü h r u n g de s L o o p s zu ma c h en br a uc he n wi r ei n e In v a r ia n t e § De r Ru m p f de r Sc h l e i f e kö n n t e be l i e bi g of t au s g e f ü h rt we r d e n § Di e P r e c o n d i t i o n für di e Sc h l e i f e mu s s d i e In v a r ia n t e im p liz ie r e n § Pr e c o n d i t i o n m u s s st ä r k e r al s ( od e r gl e i c h st a r k wi e ) d ie In v a r i a n t e se i n 174 § In v a r ia n t e und de r Sc h l e i f e n Te s t ( we n n er wa h r is t ) mü s s en st a r k ge n u g se i n u m zu ze i g e n , da s s di e P o s t c o ndi t i o n de s Rum p f s au ch di e In v a r ia n t e im p liz ie r t § In v a r ia n t e und de r Sc h l e i f e n Te s t ( we n n er fa l s c h is t ) mü s s en st a r k ge n u g se i n um di e Po s t c o n d i t i o n de r Sc h l e i f e zu ze i g e n . 175 Ho a r e Lo g ik § Ge g e be n se i ei n Tr i p e l für ei n en wh i l e - lo o p {P} while(B) S; {Q} Ei n so l c h e s Tr i p e l is t gül t i g we n n es ei n e In v a r ia n t e I gi b t so da s s : § P ⇒ I In v a r ia n t e gi l t zu Beg i n n § {I ∧ B} S {I} Na c h Au s f ü h r e n de s Rum p f e s gi l t di e In v a r ia n t e wi ed er § (I ∧ !B) ⇒ Q In v a r ia n t e (u n d Ve r l a s s e n de r Sc h l e i f e , d. h te s t B is t fa l s e ) im p liz ie r t Po s t c o n d i t i o n Q. 176 § Fü r ei n gül t i g e s Ho ar e Tr i p e l ei n er Sc h l e i f e {P} while(B) S; {Q} si n d Sc h l e i f e n t e s t B , Sc h l e i f e n r u m p f S und di e Sc h l e i f e n - in v a r ia n t e I au f e i n an d e r ab g e s ti m m t § S ka n n ei n e Fo l ge vo n An w e i s u n g e n se i n ( au c h ge s c h a c h t e l t e Lo o p s ) § Fü r ei n e Po s t c o n d i t i o n Q gi b t es (o f t , ma n c h ma l ) ve r s c h i e d e n e Sc h l e i f e n , d i e fü r di e P r e c o ndi t i o n P da s se l b e Re s u l t be r e c hne n § Di e s e Sc h l ei f en ha be n da nn an d e r e In v a r i a n t e n und S t a t e m e n t s im Ru m p f § De f i n i t i o n al l g e m e i n ge n u g , de c k t au c h de n F a l l a b da s s de r Rum p f ke i n m a l dur c hl a uf e n wi r d 177 Be i s p i e l , ge n a u e r 178 {pre: x >= 0} y = 0; i = 0; while( i != x) { i = i+1; y = y+i ; } {P} while (B) S; {Q} § P ⇒ I In va r i a n te gi l t zu Be g i n n § {I ∧ B} S {I} Na ch Au s f ü h r e n des Ru m p fe s gi l t di e In va r i a n te wi e d e r § (I ∧ !B) ⇒ Q In va r i a n te und Ve r l a s s e n der Sc h l e i f e im p liz ie r t Q. 181 {pre: x >= 0} y = 0; i = 0; {pre: x >= 0 ∧ y == 0 ∧ i == 0} { inv : y == sum(1,i)} while( i != x) { i = i+1; y = y+i ; } {post: i == x ∧ y == sum(1,i)} (also: y == sum(1,x)) {P} while (B) S; {Q} § P ⇒ I In va r i a n te gi l t zu Be g i n n § {I ∧ B} S {I} Na ch Au s f ü h r e n des Ru m p fe s gi l t di e In va r i a n te wi e d e r § (I ∧ !B) ⇒ Q In va r i a n te und Ve r l a s s e n der Sc h l e i f e im p liz ie r t Q. P ⇒ I ?? sum(1,0) == 0 ( x>=0 ∧ y==0 ∧ i ==0) ⇒ y==sum(1,i) ( x>=0 ∧ y==0) ⇒ y==sum(1,0) (t r u e ) ⇒ 0==sum(1,i) ✓ 182 {pre: x >= 0} y = 0; i = 0; {pre: x >= 0 ∧ y == 0 ∧ i == 0} { inv : y == sum(1,i)} while( i != x) { // y == sum(1,i) ∧ i != x i = i+1; // S1 // y == sum(1,i - 1)+ i y = y+i ; // S2 } {post: i == x ∧ y == sum(1,i)} (also: y == sum(1,x)) {P} while (B) S; {Q} § P ⇒ I In va r i a n te gi l t zu Be g i n n § {I ∧ B} S {I} Na ch Au s f ü h r e n des Ru m p fe s gi l t di e In va r i a n te wi e d e r § (I ∧ !B) ⇒ Q In va r i a n te und Ve r l a s s e n der Sc h l e i f e im p liz ie r t Q. {I ∧ B} S {I} ⇒ I ?? S: S1;S2 P: y old == sum(1,i old ) ∧ i old != x Q: y == sum(1,i) {P} S {Q} gültig ✓ 183 {pre: x >= 0} y = 0; i = 0; {pre: x >= 0 ∧ y == 0 ∧ i == 0} { inv : y == sum(1,i)} while( i != x) { i = i+1; y = y+i ; } {post: i == x ∧ y == sum(1,i)} // Q für Loop {P} while (B) S; {Q} § P ⇒ I In va r i a n te gi l t zu Be g i n n § {I ∧ B} S {I} Na ch Au s f ü h r e n des Ru m p fe s gi l t di e In va r i a n te wi e d e r § (I ∧ !B) ⇒ Q In va r i a n te und Ve r l a s s e n der Sc h l e i f e im p liz ie r t Q. {I ∧ !B} ⇒ Q ?? Q: y == sum(1,x) (y == sum(1,i) ∧ i == x) ⇒ Q y == sum(1,x) ✓ Ei n an d e r e r Lo o p ( fü r da s sel b e Pr o b l e m ) Ei n an d e r e r Lo o p h a t ei n e an d e r e In v a r ia n t e 185 {pre: x >= 0} y = 0; i = 1 ; {pre: x >= 0 ∧ y==0 ∧ i == 1 } { inv : y == sum(1,i - 1 )} while( i != x +1 ) { y = y+i ; i = i+1; } {post: i =x +1 ∧ y == sum(1,i - 1 )} (also: y == sum(1,x)) In v a r ia n t e n he lf e n Bu g s zu fi n d en Di e se r Lo o p is t äh n l i c h ab e r ma c h t ni c h t wa s wi r wo l l e n : 186 {pre: x >= 0} y = 0; i = 1; {pre: x >= 0 ∧ y==0 ∧ i ==1} { inv : y == sum(1,i - 1)} while( i != x) { y = y+i ; i = i+1; } {post: i ==x ∧ y == sum(1,i - 1)} (also: y == sum(1,x)) Meh r Bu g s § Di e se r Lo o p en t h ä l t ei n ungül t i g e s Ho ar e T r i p l e 187 {pre: x >= 0} y = 0; i = 0; {pre: x >= 0 ∧ y==0 ∧ i ==0} { inv : y == sum(1,i)} while( i != x) { y = y+i ; i = i+1; // Invariante gilt nicht – warum ? } {post: i ==x ∧ y == sum(1,i)} In v a r ia n t e n …. § … dür f e n we d e r zu st a r k no c h zu sc h w a c h se in § We n n di e In v a r i a n t e zu st a r k is t , da nn is t sie ev t l . f a l s e § D. h . wi r kö n n e n ni c h t ze i g e n , da s s si e zu Be g i nn gü l ti g is t , od e r § Di e In v a ri a n t e is t ni c h t wa h r na c hde m de r Ru m p f au s g e fü h r t wu r d e § We n n di e In v a r i a n t e zu sc h w a c h is t § Dann ka n n di e Po s t c o n d i t i o n na c h de m Ve r l a s s e n de s L o o p s ev t l . ni c h t di e Po s t c o n d i t i o n de r Sc h l ei f e im p liz ie r e n § Un d / od e r es is t unm ö g l i c h zu ze i g e n da s s di e In v a ri a n t e na c h de r Au s f ü h r u n g de s Ru m p f es ( wi e d e r ) gi l t 189 In v a r i a n t e n … n i c h t z u s t a r k u n d n i c h t z u sc h w ac h § Da s is t de r Gr und wa r u m es ke i n e n vo l l a u t o m at i s c h e n We g gi b t , ei n e Lo o p In v a r ia n t e zu ko n s t r u i e r e n § Pr o g r a m m i e r e n ei n e kr e a t i v e Tä t i g k e i t § Fi n d e n de r In v a r i a n t e er f o r d er t nac hde nk e n ( od e r ma n c h ma l « ra t e n ») § Of t zu s a m m e n mi t de m Sc h r e i b e n de s Pr o g r a m m s § We n n es ke i n e n Be w e i s gi b t , da nn mu s s en t w ed er de r C o de , di e In v a r i a n t e , od e r be i de s ge ä n d e r t we r d e n . § Ma n c h m a l gi b t es ve r s c h i e d e n e In v a r ia n t e n , di e al l e ge n ü ge n ( d. h . si n d we d e r zu st a r k no c h zu sc h w ac h ), ab e r un t e r s c hi e dl i c h zw e c k m ä s s i g si n d 190 Ei n e Me t h od ol og i e § Hi e r is t ei n An s a t z wi e wi r Sc h l e i f e und In v a r ia n t e n en t wi c k el n kö n n e n § Ke i n vo l l s t ä n d i g e s Re z e p t § Ni c h t st u r zu be f o l g e n – ab e r be s s e r al s de r « sc h n e l l e » We g , er s t d en Co d e zu en t wi c k el n und da nn di e In v a r ia n t e zu su c h e n . 191 § [M ] et h o d o l o g y is t h e g e n e r a l r e s e a r c h s t r a t e g y t h a t o u t lin e s th e w a y i n w h i c h r e s e ar c h i s t o b e u n d e r t ak e n an d , am o n g ot h e r t h i n g s , i d e n t i f i e s t h e m e t h od s t o b e u s e d i n i t . § [W i ki p ed i a ] § Com p u t e r s c i e n c e u s a g e , i n g e n e r a l « a n a l y s i s of t h e b od y of m e t h od s an d p ri n c i p l es as s o c i a t ed w i t h a b r an c h o f k n o w l ed g e» [ dt o ] 192 Ei n e Me t h od ol og i e § Hi e r is t ei n An s a t z wi e wi r Sc h l e i f e und In v a r ia n t e n en t wi c k el n kö n n e n § Ke i n vo l l s t ä n d i g e s Re z e p t § Ni c h t st u r zu be f o l g e n – ab e r be s s e r al s de r « sc h n e l l e » We g , er s t d en Co d e zu en t wi c k el n und da nn di e In v a r ia n t e zu su c h e n . 193 Ei n e Me t h od ol og i e § Vo r s c h l a g ( funk t i o ni e r t übe r r a s c he nde r w e i s e of t ): 1. Be s t i m m e n Si e zu e r s t di e In v a r i a n t e und la s s e n Si e si e di e an d er en Sc h r i t t e le it e n (! ) § Wi e br i ng t uns je d e It e r a t i o n nä he r an d as Zi el ? § Wa s m u s s na c h je d e r It e r a t i o n ge l t e n ? 2. Sc h r e i b e n Si e ei n en Ru m p f de r di e In v a r i a n t e gü l t i g lä s s t 3. Be s t i m m e n Si e de n Lo o p T e s t s o , da s s Te s t - is t - fa l s e d i e Po s t c o n d i t i o n im p liz ie r t 4. Sc h r e i b e n Si e di e In i t i a l i s i e r u n g so da s s di e s e r Cod e d i e In v a r i a n t e si c h e r st e l l t . 195 Ei n e Me t h od ol og i e § Ei n An s a t z wi e wi r Sc h l e i f e und In v a r ia n t e n en t wi c k el n kö n n e n § Ke i n vo l l s t ä n d i g e s Re z e p t § Ni c h t st u r zu be f o l g e n – ab e r be s s e r al s de r « sc h n e l l e » We g , er s t d en Co d e zu en t wi c k el n und da nn di e In v a r ia n t e zu su c h e n . 196 Be i s p i e l Wi r su c h e n für po s i t i v e x und y de n Qu o t i e n t e n q , a l s o q==x/y . Di e Va r i a b l e n x und y ha be n de n Ty p int , y ≠ 0 , u n d d a s Er g e bni s ka n n ko r r e k t in ei n er int Va r i a b l e ge s p e i c h e r t we r d e n . 1. Be s t i m m e n Si e zu e r s t di e In v a r i a n t e und la s s e n Si e si e di e an d er en Sc h r i t t e le it e n 2. Id e e : Wi e d e r h o l t y vo n x su b tr a h i e r e n – fi n d e t wi e of t y in x en t h al t en is t § In v a r i a n t e : q sp e i c h e r t wi e of t y su b tr a h i e r t wu r d e , da nn is t q * y + r == x ( r de r R e s t , mög l i c h e r w e i s e r ≥ y ) § An d e r e In v a r i a n t e n si n d au c h mög l i c h … 197 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 2. Sc h r e i b e n Si e ei n en Ru m p f de r di e In v a r i a n t e gü l t i g lä s s t {inv: q* y+r == x } while ( ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } 198 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 3. Be s t i m m e n Si e d e n L o o p T e s t so , da s s Te s t - is t - fa l s e d i e P o s t c o n d i t i o n im p liz ie r t 4. Wi e o f t wo l l e n wi r y su b tr a h i e r e n ? {inv: q* y+r == x} while ( ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } 199 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 3. Be s t i m m e n Si e d e n L o o p T e s t so , da s s Te s t - is t - fa l s e d i e P o s t c o n d i t i o n im p liz ie r t 4. Wi e o f t wo l l e n wi r y su b tr a h i e r e n ? R e s t r ≥ 0 (d a x ≥ 0 , y > 0 ) {inv: q* y+r == x} while ( ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } 200 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 3. Be s t i m m e n Si e d e n L o o p T e s t so , da s s Te s t - is t - fa l s e d i e P o s t c o n d i t i o n im p liz ie r t 4. Wi e o f t wo l l e n wi r y su b tr a h i e r e n ? R e s t r ≥ 0 (d a x ≥ 0 , y > 0 ) {inv: q* y+r == x ∧ (r >= 0) } while ( ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } 201 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 3. Be s t i m m e n Si e d e n L o o p T e s t so , da s s Te s t - is t - fa l s e d i e P o s t c o n d i t i o n im p liz ie r t 4. Wi e o f t wo l l e n wi r y su b tr a h i e r e n ? R e s t r ≥ 0 (d a x ≥ 0 , y > 0 ) {inv: q* y+r == x ∧ (r >= 0) } while ( r > y ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } 202 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 3. Be s t i m m e n Si e d e n L o o p T e s t so , da s s Te s t - is t - fa l s e d i e P o s t c o n d i t i o n im p liz ie r t {inv: q* y+r == x ∧ (r >= 0) } while ( y <= r ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } {post: (q* y+r == x) ∧ (r >= 0) ∧ (r < y) } 203 Wi r su c h e n für x und y de n Qu o t i e n t e n q , a l s o q==x/y 4. Sc h r e i b e n Si e di e In i t i a l i s i e r u n g so da s s di e s e r Cod e d i e In v a r i a n t e si c h e r st e l l t . r = x; q = 0; {inv: q* y+r == x ∧ (r >= 0) } while ( y <= r ) { // inv holds r = r – y; // q counts how many times we could subtract y q = q + 1; // invariant holds again } 204 Wa s m u s s no c h ge l t e n ? § Di e In it ia lis ie r u n g ha t ei n e Pr e c o ndi t i o n: x >= 0 ∧ y > 0 {pre: x >= 0 ∧ y > 0 } r = x; q = 0; {inv: q* y+r == x ∧ (r >= 0) } while ( y <= r ) { r = r – y; q = q + 1; } {post: (q* y+r == x) ∧ (r >= 0) ∧ (r < y) } 205 Ko r r e k t h e i t Si e er i n n er n si c h : is t Ho ar e - Tr i p e l {P} S {Q} gül t i g da nn gi l t na c h Au s f ü h r u n g vo n S Au s s a g e Q , vo r a u s g e s e t z t da s s P da v o r ga l t § We n n wi r de n Pu n k t na c h S er r ei c h en … § Wa r u m er r ei c h en wi r ni c h t de n Punk t na c h Au s f ü h r u n g vo n S ? § S ka n n ni c h t au s g e f ü h rt we r d e n ( z. B . Di v i s i o n dur c h 0) § Au s f ü h r u n g vo n S br i c h t ab ( z. B . Er g e bni s ka n n ni c h t ge s p e i c h e r t we r d e n ) § S te r m i n i e r t ni c h t § … u n d vi e l e an d er e me h r 206 Ko r r e k t h e i t fü r {P} S {Q} § Bi s h er : Pa r t i e l l e Ko r r e k t h e i t ( ko r r e k t un t e r de r An n a h m e Te r m i n i e r u n g vo n S ) § Vo l l s t ä n d i g e r Ko r r e k t h e i t s b e w e i s er f o r d er t ei n en Be w ei s , da s s S te r m i n i e r t § Wi e ze i g e n wi r Te r m i n i e r u n g ei n er Sc h l e i f e ? 207 Te r m i n i e r u n g § Id e e : wi r bi l de n de n Zu s t an d ( na c h Au s f ü h r u n g ei n es Du r c h l a u f s dur c h di e Sc h l e i f e ) a u f ei n e ga n z e Za h l ≥ 0 ab so da s s di e s e Za h l dur c h je d e Au s f ü h r u n g de s Rum p f e s ve r k l e i n e r t wi r d § Wi r fi n d e n ei n en Be w e i s da s s de r Lo o p T e s t « f a l s e » er g i b t we n n di e s e Za h l zu 0 wi r d § Da m i t ze i g e n wi r Te r m i n i e r u n g : jed e Au s f ü h r u n g ve r k l e i n e r t di e Za h l , d. h . es gi b t nur en d l i c h vi e l e Sc h r i t t e , d i e d i e Za h l au f 0 br i ng e n . 208 Be i s p i e l e § Su m m i e r u n g vo n 1 .. x : Ab b i l d u n g au f (x - i ) § Am An f a n g po s i t i v ( x≥0 , i == 0 ) § Wi r d in jed er It e r a t i o n kl ei n er ( x un v e r ä nde r t , i = i+1 ) § We n n (x - i )==0 da nn is t x== i und Lo o p te r m i n i e r t § Qu o t i e n t - und - Re s t : Se i R == x % y Ab b i l d u n g au f (r – R) § Am An f a n g po s i t i v ( r == x, R < x ) § Wi r d in jed er It e r a t i o n im m e r kl ei n er ( r = r – y, y>0 ) § We n n ( r - R==0 ) da nn is t r==R und da m i t y≤r , u n d L o o p te r m i n i e r t § Is t di e Ab b i l d u n g s f u n k ti on 0 vo r Be g in n de s L o o p s dann ke i n e It e r a t i o n 209","libVersion":"0.3.1","langs":""}