{"path":"sem4/FMFP/PV/exams/FMFP-finals/FMFP-endterms/FMFP-FS19.pdf","text":"Computer Science Department D. Basin P. M¨uller Formal Methods and Functional Programming Part II Midterm Exam, SS19 May 9, 2019, 10:15 – 10:45 Student: Last Name: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . First Name: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Stud.-Nr.: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . General Comments: 1. This booklet consists of 4 pages. After the exam begins, check that your exam papers are complete (2 assignments and 1 page of background material). 2. Only write on the exam paper and extra paper sheets which are given by the assistants. Do not take any of this paper out of the exam: submit it all. Write your ﬁrst and last name and your student number on every sheet of paper that you write on. 3. This is a closed book exam: the only resources allowed are pen and paper. No laptops, no cell phones, no smart watches, no prepared notes. Do not use pencil and do not use red. 4. Write clearly in the sense of logic, language, and readability. Label all rule applications in your derivation trees. The clarity of your arguments and explanations aﬀects your grade. 5. You have 30 minutes to complete the exam. Assignment 1 2 ∑ Max 4 6 10 Points Formal Methods and Functional Programming, Part II Midterm Exam, SS19 2 Assignment 1 (4 Points) Let s ≡ s1;(s2;s3), where s1 ≡ t := x, s2 ≡ x := y, and s3 ≡ y := t. Using natural semantics (big-step semantics), prove that ∀σ, σ′. ⊢ ⟨s, σ⟩ → σ′ ⇒ σ′ = σ[t ↦→ σ(x)][x ↦→ σ(y)][y ↦→ σ(x)]. Formal Methods and Functional Programming, Part II Midterm Exam, SS19 3 Assignment 2 (6 Points) Prove the following statement about arithmetic expressions: ∀e, e ′, e ′′, x, y. y /∈ FV(e) ⇒ e[x ↦→ e ′][y ↦→ e′′] ≡ e[x ↦→ e ′[y ↦→ e′′]] Formal Methods and Functional Programming, Part II Midterm Exam, SS19 4 Syntax and Semantics of IMP Syntax The statements s (Stm) and arithmetic expressions e (Aexp) of the programming language IMP are given by the grammar s ::= skip ∣ ∣ x := e ∣ ∣ s;s ∣ ∣ if b then s else s end ∣ ∣ while b do s end e ::= n ∣ ∣ x ∣ ∣ e op e where n ranges over numerals (Numeral), x ranges over variables (Var), b ranges over boolean expressions (Bexp), and op ranges over arithmetic operators (Op). Free Variables and Substitution FV(e) =    ∅ if e ≡ n for some numeral n {x} if e ≡ x for some variable x FV(e1) ∪ FV(e2) if e ≡ e1 op e2 for some e1, e2, and op e[x ↦→ e′] ≡    n if e ≡ n for some numeral n e ′ if e ≡ y for some variable y with y ≡ x y if e ≡ y for some variable y with y ̸≡ x e1[x ↦→ e ′] op e2[x ↦→ e′] if e ≡ e1 op e2 for some e1, e2, and op Natural Semantics (Big-Step Semantics) (SkipNS) ⟨skip, σ⟩ → σ (AssNS) ⟨x := e, σ⟩ → σ[x ↦→ A[[e]]σ] ⟨s1, σ⟩ → σ′ ⟨s2, σ′⟩ → σ′′ (SeqNS) ⟨s1;s2, σ⟩ → σ′′ ⟨s1, σ⟩ → σ′ (IfTNS) ⟨if b then s1 else s2 end, σ⟩ → σ′ if B[[b]]σ = tt ⟨s2, σ⟩ → σ′ (IfFNS) ⟨if b then s1 else s2 end, σ⟩ → σ′ if B[[b]]σ = ﬀ ⟨s, σ⟩ → σ′ ⟨while b do s end, σ′⟩ → σ′′ (WhTNS) ⟨while b do s end, σ⟩ → σ′′ if B[[b]]σ = tt (WhFNS) ⟨while b do s end, σ⟩ → σ if B[[b]]σ = ﬀ","libVersion":"0.5.0","langs":""}