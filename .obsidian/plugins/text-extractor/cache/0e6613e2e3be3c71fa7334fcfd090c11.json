{"path":"sem1/AuD/extra/AuD_graph-theory_old&extensive.pdf","text":"Algorithmen und Datenstrukturen∗ Inhaltsverzeichnis Graphentheorie 2 Universelles Phänomen der Netzwerk . . . . . . . . . . . . . . . . . . 2 Jenseits von Netzwerken . . . . . . . . . . . . . . . . . . . . . . . . . . 3 Problemstellung: Kartenfärbung . . . . . . . . . . . . . . . . . . . . . 3 Problemstellung: Prüfungsplanung . . . . . . . . . . . . . . . . . . . . 4 Deﬁnition: Graph und verwandte Begriﬀe . . . . . . . . . . . . . . . . 4 Eigenschaft: Summe der Knotengrade . . . . . . . . . . . . . . . . . . 5 Isomorphie . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 Besondere Graphen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 Problemstellung: Knotenfärbung . . . . . . . . . . . . . . . . . . . . . 8 Diskussion: Kombinatorische Explosion . . . . . . . . . . . . . . . . . 9 Eigenschaft: Knotenfärbung und maximaler Knotengrad . . . . . . . 10 Diskussion: Beweise und Algorithmen . . . . . . . . . . . . . . . . . . 10 Einschub: Vollständige Induktion . . . . . . . . . . . . . . . . . . . . . . 11 Beispiel 1: Summenformel . . . . . . . . . . . . . . . . . . . . . . 12 Beispiel 2: Färbung und maximaler Knotengrad . . . . . . . . . 12 Beispiel 3: Summe der Knotengrade . . . . . . . . . . . . . . . . 13 Beispiel 4: Nicht-Bipartite Graphen . . . . . . . . . . . . . . . . . 13 Gerichtete Graphen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 Beispiel: Flussüberquerung und Zustandsübergänge . . . . . . . . . . 17 Deﬁnition: Wege und verwandte Begriﬀe . . . . . . . . . . . . . . . . 18 Deﬁnition: Erreichbarkeit und Distanz . . . . . . . . . . . . . . . . . . 19 Eigenschaft: Minimale Wege sind Pfade . . . . . . . . . . . . . . . . . 19 Problemstellung: Topologische Sortierung . . . . . . . . . . . . . . . . 20 Deﬁnition: Zusammenhang . . . . . . . . . . . . . . . . . . . . . . . . . 21 Eigenschaft: Zusammenhangskomponenten in ungerichteten Graphen 21 Deﬁnition: Baum . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 Eigenschaften: Bäume und Wälder . . . . . . . . . . . . . . . . . . . . 23 Problemstellung: Eulertour . . . . . . . . . . . . . . . . . . . . . . . . 24 ∗Herbstsemester 2018, ETH Zürich 1 Graphentheorie Graphen1 sind grundlegende mathematische Objekte, mit deren Hilfe viele interessante Zusammenhänge aus unterschiedlichen Anwendungsbereichen elegant beschrieben werden können. Universelles Phänomen der Netzwerk Ein Ziel der Graphentheorie ist Einsichten in das universelle Phänomen von Netzwerken2 zu liefern. Netzwerke beschreiben Verknüpfungen, die zwischen verschiedene Objekten bestehen. Sie sind von grosser Bedeutung in zahlreichen Anwendungsbereichen, wie die folgenden konkreten Beispiele aufzeigen. • Soziale Netzwerke: Personen sind durch ihre sozialen Kontakte miteinan- der verknüpft. • Strassennetzwerke: Orte sind durch Strassenverbindungen miteinander verknüpft. • Stromnetzwerke: Erzeuger und Verbraucher von Elektrizität sind durch elektrische Leitungen miteinander verknüpft. • Computernetzwerke (wie das Internet): Computer sind durch Datenver- bindungen miteinander verknüpft. • (Künstliche und natürliche) neuronale Netzwerke: Neuronen sind über Synapsen miteinander verknüpft. Eine herausragende Eigenschaft viele dieser Netzwerke ist ihre Grösse. Zum Bei- spiel hat das soziale Netzwerk auf Facebook mehrere Milliarden aktive Nutzern und viele hundert Milliarden Verknüpfungen zwischen Nutzern. Computer- netzwerke wie das Internet können diese Grösse sogar um mehrere Ordnungen überschreiten. Mit Netzwerken dieser Grösse umzugehen ist nur mit Hilfe von Computern möglich. Dabei ist es wichtig, möglichst eﬃziente Algorithmen zu verwenden, auf die wir in dieser Vorlesung hinarbeiten werden. Um solche Netzwerke zunächst besser zu verstehen, werden wir vereinfachte mathematisches Modelle betrachten, die Graphen genannt werden. Dieses Modell erfasst nur welche Objekte eines Netzwerks miteinander verknüpft sind. Wir ignorieren dabei was die Objekte repräsentiere (z.B., Personen, Computer, oder Neuronen) und wie die Verknüpfungen zwischen den Objekten zustande 1Graphen, wie sie in der Graphentheorie vorkommen, und Funktionsgraphen—wie aus dem Schulunterricht bekannt—haben nichts miteinander zu tun und sollten daher nicht miteinander verwechselt werden. 2Hier beziehen wir uns auf den Begriﬀ von Netzwerken, wie er umgangssprachlich verwendet wird. Es gibt auch einen mathematischen Begriﬀ von Netzwerken, der im Zusammenhang mit Netzwerkﬂüssen vorkommt und auf den wir uns hier nicht beziehen. kommen. Trotz dieser Vereinfachungen erlauben uns Graphen oft interessante Rückschlüsse, auf die zugrunde liegenden Netzwerke zu treﬀen. In einem Graphen, werden die miteinander verknüpften Objekte Knoten3 genannt und die Verknüpfungen zwischen Knoten werden Kanten4 genannt. Knoten u und v heisst adjazent5 falls zwischen ihnen eine Kante verläuft. Die Knoten, die eine Kante e miteinander verknüpft, heissen Endpunkte6 der Kante e. Ein Knoten u und eine Kante e heissen inzident,7 falls u ein Endknoten der Kante e ist. Jenseits von Netzwerken Mit Hilfe von Graphen können auch Problemstellungen dargestellt werden, die zunächst nichts mit Netzwerken zu tun haben. Ein interessanter Eﬀekt dabei ist, dass zunächst unterschiedliche Problemstellungen auf dasselbe Gra- phenproblem zurückgeführt werden können. In diesem Fall kann dann eine Lösungsidee für das zugrundeliegende Graphenproblem auf unterschiedliche Problemstellungen angewendet werden. Hierzu betrachten wir zwei Beispiele solcher Problemstellungen, nämlich Kar- tenfärbung und Prüfungsplanung. Beide Problemstellungen lassen sich auf dasselbe Graphenproblem zurückführen, nämlich Knotenfärbung. Problemstellung: Kartenfärbung Wir stellen uns eine Landkarte vor, auf der verschiedene Gebiete eingezeichnet sind z.B. Länder oder Kantone. Das Ziel ist es die verschiedenen Gebiete so einzufärben das benachbarte Gebiete unterschiedliche Farben haben. Auf diese Weise ist leichter zu erkennen, welche Teile der Landkarte zu demselben Gebiet gehört. Andererseits möchten wir vermeiden Farben zu verwenden, die nur schwer zu unterscheiden sind. Deshalb ist es auch wichtig, dass wir insgesamt möglichst wenig verschiedene Farben verwenden. Wir können diese Problemstellung durch Graphen darstellen. Dazu betrachten wir den Graph, dessen Knoten den Gebieten der Landkarte entsprechen. Ferner fügen wir Kanten zwischen allen Paaren von benachbarten Gebieten hinzu. Für diesen Graphen wollen wir die Knoten mit möglichst wenig verschiedenen Farben so einfärben, dass alle Paare von adjazenten Knoten unterschiedliche Farben bekommen. 3Englisch: vertex 4Englisch: edge 5Englisch: adjacent 6Englisch: end point 7Englisch: incident Problemstellung: Prüfungsplanung Wir stellen uns vor, dass an einer Hochschule Termine für eine Zahl von Prü- fungen P1, . . . , Pn festgelegt werden sollen. Es stehen nur wenige verschiedene Termine T1, . . . , Tk zu Verfügung. Falls ein Student sich für mehrere Prüfungen angemeldet hat, müssen diese alle an unterschiedlichen Terminen statt ﬁnden. Wir können diese Problemstellung ebenfalls durch Graphen darstellen. Wir betrachten dazu einen Graphen, dessen Knoten den Prüfungen P1, . . . , Pn entsprechen. Für jedes Paar von Prüfungen, für die mindestens ein gemeinsamer Student angemeldet ist, fügen wir eine Kanten zwischen den entsprechenden Knoten hinzu. Das Ziel ist die Termine T1, . . . , Tk so an die Knoten zuzuweisen, dass alle Paare von adjazenten Knoten unterschiedliche Termine bekommen. Wir können jetzt sehen das Kartenfärbung und Prüfungsplanung sich auf dasselbe Graphenproblem zurückführen lassen—der Unterschied, dass wir den Knoten in einem Fall Farben und im anderen Fall Termine zuweisen ist unwesentlich. Deﬁnition: Graph und verwandte Begriﬀe Ein Graph G \u0003 (V, E) besteht aus einer Menge von Knoten V und einer Menge von Kanten E, wobei jede Kante e ∈ E ein ungeordnetes Paar8 e \u0003 {u, v} von zwei Knoten u, v ∈ V mit u , v ist.9 Hier nehmen wir üblicherweise an, dass V nicht leer ist. Zwei Knoten u, v ∈ V heissen adjazent oder benachbart10, falls {u, v} ∈ E. Ein Knoten u und eine Kante e heissen inzident11, falls u ∈ e. Die Nachbarschaft12 NG(u) eines Knoten u ist die Menge aller Knoten, die adjazent zu u sind. Der Grad13 degG(u) :\u0003 |NG(u)| eines Knoten ist die Anzahl der benachbarten Knoten von u. Ein Knoten mit Grad 1 heisst Blatt14. Ein Knoten mit Grad 0 heisst isoliert. Zum Beispiel im folgenden Graph gilt: “G” ist isoliert, “F” ist ein Blatt, “A” und “E” haben Grad 2, “B” hat Grad 3, “C” und “D” haben Grad 4. 8Hier, stellen {u, v} und {v, u} dasselbe ungeordnete Paar da. 9Andere Deﬁnitionen erlauben manchmal Schleifen e \u0003 {u} (Englisch: loop) als Kanten, die einen Knoten mit sich selbst verbinden. 10Englisch: adjacent or neighboring 11Englisch: incident 12Englisch: neighborhood 13Englisch: degree 14Englisch: leaf A B C D F EG Ein Graph G′ \u0003 (V′, E′) heisst Teilgraph15 von G falls V′ ⊆ V und E′ ⊆ E. (Da G′ ein Graph ist, gilt hierbei, dass die Kanten in E′ jeweils zwei Knoten in V′ verbinden. Daher bildet nicht jede Knotenmenge V′ ⊆ V und Kantenmenge E′ ⊆ E einen Teilgraph von G.) Wir verwenden auch die Notation V(G) und E(G) für die Knotenmenge und Kantenmenge eines Graphen G. Eigenschaft: Summe der Knotengrade Der folgende Satz hält eine allgemeingültige Beziehung zwischen der Summe der Knotengrade und der Anzahl der Kanten fest. Satz: Jeder Graph G mit n Knoten v1, . . . , vn und m Kanten erfüllt degG(v1) + · · · + degG(vn) \u0003 m . Beweis: Wir verteilen 2m Goldtaler gerecht an die Kanten des Graphen, so dass jeder Kante zwei Taler bekommt. Nun verteilt jede Kante ihre Taler an ihre beiden Endpunkte. Auf diese Weise bekommt jeder Knoten von jeder seiner inzidenten Kanten genau einen Taler. Damit erhält jeder Knoten vi insgesamt degG(vi) Taler. Die Gesamtzahl der Taler können wir nun mit der Summe degG(v1) + · · · + degG(vn) berechnen. Da unsere Umverteilung der Taler die Gesamtzahl nicht verändert hat, gilt 2m \u0003 degG(v1) + · · · + degG(vn). □ Isomorphie Falls zwei Graphen G und G′ sich nur in der Bezeichnung ihrer Knoten un- terscheiden (wie in folgendem Beispiel), betrachten wir typischerweise diesen Unterschied als unwesentlich und möchten die Graphen als gleich behandeln. 15Englisch: subgraph G G′ B CD A 2 3 1 4 Um diese Idee zu formalisieren, führen wir den Begriﬀ der Isomorphie ein. Zwei Graphen G \u0003 (V, E) und G′ \u0003 (V′, E′) heissen isomorph, falls sie sich nur in der Bezeichnung ihrer Knoten unterscheiden, was formell bedeutet, dass eine bĳektive Abbildung f : V → V′ existiert, so dass ∀u, v ∈ V. {u, v} ∈ E ⇔ { f (u), f (v)} ∈ E′ . Besondere Graphen Ein Pfad16 Pℓ der Länge ℓ ≥ 1 besteht aus ℓ + 1 Knoten v1, . . . , vℓ+1 und ℓ Kanten {v1, v2}, {v2, v3} . . . , {vℓ , vℓ+1}. P₄ v₁ v₂ v₃ v₄ v₅ Wir erhalten einen Kreis17 Cℓ der Länge ℓ ≥ 3, indem wir zu einen Pfad Pℓ−1 der Länge ℓ − 1 eine Kante zwischen den Endpunkte vℓ−1, vℓ des Pfads hinzufügen. 16Englisch: path 17Englisch: cycle C₅ v₁ v₂ v₃ v₄ v₅ Ein Stern18 Sℓ mit ℓ ≥ 0 Spitzen besteht aus ℓ + 1 Knoten v0, v1, . . . , vℓ und ℓ Kanten {v0, v1}, {v0, v2}, . . . , {v0, vℓ }. S₄ v₁ v₀ v₂ v₃ v₄ Ein vollständiger Graph19 Kn besteht aus n ≥ 1 Knoten v1, . . . , vn und allen Kanten {vi , v j } mit i , j. 18Englisch: star 19Englisch: complete graph K₅ v₁ v₂ v₃ v₄ v₅ Zusammen mit dem Begriﬀ des Teilgraphen lassen sich aus diesen besonderen Graphen interessant Problemstellungen für allgemeine Graphen ableiten. Zum Beispiel können wir fragen, ob ein gegebener Graph einen Kreis als Teilgraph enthält. Hierfür werden wir später eﬃziente Algorithmen kennenlernen. Wenn wir allerdings fragen, ob ein gegebener Graph mit n Knoten einen Kreis der Länge n enthält,20 dann ist hierfür kein eﬃzienter Algorithmus bekannt und es wird vermutet dass es keinen geben kann.21 Problemstellung: Knotenfärbung Knotenfärbung ist eine wichtige Problemstellung für Graphen. Sie tritt in vielen Anwendungsbereichen auf. Wir haben zuvor gesehen, dass sich Kartenfärbung und Prüfungsplanung darauf zurückführen lassen. 20Ein Kreis, der alle Knoten eines Graphen enthält, wird Hamiltonkreis genannt. 21Die berühmte P , NP Vermutung impliziert, dass es keinen eﬃzienten Algorithmus geben kann, um zu entscheiden, ob ein Graph einen Hamiltonkreis enthält. Deﬁnition: Eine k-Färbung eines Graphen G \u0003 (V, E) ist eine Abbildung f : V → {1, . . . , k}. Eine Färbung heisst zulässig, falls alle Paare von benachbarten Knoten unterschiedliche Farben erhalten, also ∀{u, v} ∈ E. f (u) , f (v) . Ein Graph G heisst k-partit oder k-färbbar, falls eine zulässige k-Färbung existiert. (Hierbei werden 2-partite und 3-partite Graphen typischerweise bipartit und tripartit genannt.) Die chromatische Zahl22 χ(G) eines Graphen G ist die kleinste Zahl k so dass der Graph k-partit ist. Ein vollständiger Graph Kn hat chromatische Zahl n. Jeder Pfad Pℓ mit Länge ℓ ≥ 1 hat chromatische Zahl 2. Kreise C2k gerader Länge haben chromatische Zahl 2, wobei Kreise ungerader Länge chromatische Zahl 3 haben. Diskussion: Kombinatorische Explosion Eine wichtige Überlegung zur Knotenfärbung im Zusammenhang mit Algo- rithmen ist, dass die Zahl aller Färbung exponentiell schnell wächst und es damit für grössere Graphen unmöglich ist, alle Färbungen auszuprobieren, um eine zulässige zu ﬁnden. Dieses Phänomen wird oft kombinatorische Explosion genannt. Für einen Graphen mit n Knoten beträgt die Anzahl der k-Färbungen k n (da es für jeden der n Knoten k mögliche Farben gibt). Um das schnelle Wachstum der Funktion k n zu verdeutlichen, betrachten wir folgendes konkretes Beispiel: Für k \u0003 2 und n \u0003 50000 beträgt die Anzahl der k-Färbungen mehr als 1010000 (eine 1 gefolgt von 10000 Nullen). Zum Vergleich schätzt man, dass seit dem Urknall “nur” 1060 Planck-Zeiteinheiten23 vergingen. Also selbst ein unglaublich schneller Computer, der in jeder Planck-Einheit eine 2-Färbung ausprobiert, hätte nur einen verschwindend kleinen Anteil aller 2-Färbungen eines Graphen mit 50000 Knoten durchlaufen. Die Situation würde sich auch nicht merklich verändern, wenn man diese Aufgabe auf viele verschiedene Computer verteilt, da man schätzt, dass es “nur” 1080 Atome im Universum gibt, was wohl eine obere Schranke für die mögliche Anzahl an Computern wäre. Überraschenderweise ist es möglich zulässige 2-Färbungen bipartite Graphen zu ﬁnden ohne alle 2-Färbungen durchzuprobieren. Insbesondere werden wir im Laufe dieser Vorlesung Algorithmen kennenlernen, die die kombinatorische Explosion von 2-Färbungen umgehen und sehr schnell zulässige 2-Färbungen grosser bipartiter Graphen ﬁnden. 22Englisch: chromatic number 23Planck-Einheit ist die kleinst mögliche Zeiteinheit laut den aktuell bekannten Gesetzen der Physik Allerdings wird vermutet, dass es nicht immer möglich ist, diese kombinatorische Explosion zu umgehen. Diese Vermutung ist als P , NP Vermutung bekannt und zählt zu den bedeutendsten Vermutungen der Wissenschaften. Eine Konsequenz dieser Vermutung besagt informell, dass es tripartite Graphen gibt, für die es unmöglich ist eine zulässige 3-Färbung zu ﬁnden, ohne im wesentlichen alle 3-Färbungen durchzuprobieren. Eigenschaft: Knotenfärbung und maximaler Knotengrad Der folgende Satz stellt eine Beziehung zwischen dem maximalen Knotengrad und der chromatischen Zahl eines Graphen auf. Satz: Jeder Graph mit maximalem Knotengrad ∆ hat eine zulässige (∆ + 1)- Färbung. Wir werden diesen Satz erst später beweisen. (Als ein Beispiel zur vollstän- digen Induktion.) Später in der Vorlesung werden wir auch einen eﬃzienten Algorithmus kennenlernen, der eine zulässige (∆ + 1)-Färbung ﬁndet. Anders formuliert besagt der Satz, dass χ(G) ≤ ∆(G) + 1 für jeden Graphen gilt, wobei ∆(G) der maximale Knotengrad24 des Graphen G ist. Diese obere Schranke für die chromatische Zahl ist scharf in dem Sinn dass es Graphen G gibt, so dass Gleichheit χ(G) \u0003 ∆(G) + 1 gilt. Beispiele solcher Graphen sind vollständige Graphen Kn, für die χ(Kn) \u0003 n und ∆(G) \u0003 n − 1 gilt sowie ungerade Kreise C2k+1, die chromatische Zahl 3 und maximalen Knotengrad 2 haben. Allerdings gilt Gleichheit nicht für jeden Graphen.25 Zum Beispiel haben Pfade Pℓ und gerade Kreise C2k chromatische Zahl 2 und maximalen Knotengrad 2. Ein extremes Beispiel sind Sterne Sℓ, die chromatische Zahl 2 und maximalen Knotengrad ℓ haben. Diskussion: Beweise und Algorithmen Im folgenden Abschnitten, beschäftigen wir uns ausgiebig mit mathematischen Beweisen—zunächst hauptsächlich um allgemeine Eigenschaften von Graphen festzustellen. Allerdings spielen Beweise auch eine grosse Rolle im Bereich der Algorithmen, was wir an dieser Stelle kurz erläutern. Wenn wir Algorithmen untersuchen, werden wir uns zum Einen dafür inter- essieren, was für Eigenschaften ihre Ausgaben erfüllen, z.B. ob die Ausgaben korrekt sind oder anderen Qualitätsansprüchen gerecht werden. Zum Anderen, 24Englisch: maximum vertex degree 25Tatsächlich gilt die Gleichheit im wesentlichen nur für vollständige Graphen und ungerade Kreise. werden wir uns dafür interessieren, ob der Algorithmus eﬃzient ist, also selbst für grössere Eingaben mit einem akzeptablen Zeitaufwand auskommt.26 Man könnte beide Aspekte von Algorithmen auf pragmatische Weise betrachten, indem man z.B. den Algorithmus als Computerprogramm implementiert und auf möglichst vielen verschiedenen Eingaben ausführt. Auf diesen Eingaben könnten dann die gewünschten Eigenschaften wie Korrektheit und Eﬃzienz überprüft werden. Ein erhebliches Problem dieses pragmatischen Ansatz besteht darin, dass er im Allgemeinen keine Rückschlüsse darauf erlaubt, wie sich der Algorithmus auf Eingaben verhält, die nicht explizit getestet wurden. Konkret ist die Sorge, dass der Algorithmus zwar auf den getesteten Eingaben wie gewünscht funktioniert, es aber andere Eingaben gibt, auf denen der Algorithmus entweder falsche Ergebnisse liefert oder einen unverhältnismässig grossen Zeitaufwand hat. In dieser Vorlesung (wie in der theoretische Informatik allgemein), haben wir den Anspruch Algorithmen zu entwerfen, die auf allen Eingaben wie gewünscht funktionieren—also korrekt und eﬃzient sind. Da es unendlich viele solcher Eingaben gibt, ist es nicht möglich alle zu testen. Die einzig uns bekannte Möglichkeit alle Eingaben abzudecken, ist einen mathematischen Beweis dafür zu liefern, dass sich der Algorithmus auf allen Eingaben wie gewünscht verhält. Einschub: Vollständige Induktion Eine wichtige Strategie um Eigenschaften von Graphen und anderen diskreten Strukturen ist die vollständige Induktion27. Wir betrachten hierbei eine mathematische Aussage28 A(n), die von einer natür- lichen Zahl n abhängt. Ziel ist es zu beweisen, dass die Aussage A(n) für alle natürliche Zahlen n ∈ N gilt. Zum Beispiel könnte A(n) die Aussage sein, dass die Ungleichung χ(G) ≤ ∆(G) + 1 für alle Graphen mit n Knoten gilt. Andererseits könnte A(n) auch die Aussage sein, dass eine bestimmte arithmetische Identität gilt, wie zum Beispiel 1 + 2 + · · · + n \u0003 n · (n + 1)/2. Theorem (Vollständige Induktion): Sei A(n) eine mathematische Aussage, die von einer natürlichen Zahl n abhängt. Ein Beweis, dass die Aussage A(n) für alle n ≥ 1 gilt, kann in zwei Teilen erfolgen: • Induktionsanfang: Hier wird die Aussage A(n) lediglich für n \u0003 1 bewiesen. • Induktionsschritt: Hier wird für alle n ≥ 2 die Aussage A(n) bewiesen unter der Annahme, dass die Aussage A(n − 1) gilt. 26Wir werden erst später formalisieren, was es für einen Algorithmus mit akzeptablen Zeitaufwand auszukommen. An dieser Stelle ist die genaue Bedeutung davon noch unwesentlich. 27Englisch: mathematical induction 28In der Mathematik ist eine Aussage alles was in sinnvoller Weise ein Wahrheitswert (also “wahr” oder “falsch”) zugeordnet werden kann. Diese Strategie kann Beweise stark vereinfachen, da wir für den Beweis der Aussage A(n) verwenden können, dass die Aussage A(n − 1) gilt. Während des Beweises der Aussage A(n) für n ≥ 2 wird die Annahme, dass A(n − 1) gilt, die Induktionshypothese29 oder Induktionsannahme genannt. Beispiel 1: Summenformel Sei A(n) die Aussage, dass die Summe 1 + · · · + n der ersten n natürlichen Zahlen n · (n + 1)/2 beträgt. Für den Induktionsanfang zeigen wir die Aussage A(1). Die Summe der ersten n \u0003 1 Zahlen ist 1, was wir auch erhalten, wenn wir n · (n + 1)/2 \u0003 1 · (1 + 1/2) \u0003 1 für n \u0003 1 auswerten. Für den Induktionsschritt zeigen wir die Aussage A(n) für ein beliebiges n ≥ 2. Die Induktionshypothese ist, dass die Summe der ersten n − 1 Zahlen (n − 1) · n/2 beträgt. Die entscheidende Einsicht ist nun, dass die Summe der ersten n Zahlen berechnet werden kann, indem wir n zu der Summe der ersten n − 1 Zahlen addieren. Daher können wir die Induktionshypothese folgendermassen verwenden, 1 + · · · + n \u0003 (1 + · · · + n − 1) + n \u0003 (n − 1) · n/2 + n \u0003 (n + 1) · n/2 . Der letzte Schritt folgt durch Anwendung üblicher Rechenregeln.30 □ Beispiel 2: Färbung und maximaler Knotengrad Sei A(n) die Aussage, dass für alle Graphen G mit n Knoten die Ungleichung χ(G) ≤ ∆(G) + 1 gilt. Für den Induktionsanfang müssen wir alle Graphen mit n \u0003 1 Knoten betrachten. In dem Fall hat der Graph keine Kanten. Damit gilt χ(G) \u0003 1 und ∆(G) \u0003 0, was die gewünschte Ungleichung erfüllt. Für den Induktionsschritt betrachten wir einen beliebigen Graphen G \u0003 (V, E) mit n ≥ 2 Knoten. Sei v ∈ V ein beliebiger Knoten. Indem wir v und alle inzidenten Kanten entfernen, erhalten wir einen Teilgraphen G′ \u0003 (V′, E′) von G mit n − 1 Knoten. Per Konstruktion gilt ∆(G′) ≤ ∆(G). Laut Induktionshypothese gilt χ(G′) ≤ ∆(G′) + 1 ≤ ∆(G) + 1. Sei f ′ : V′ → {1, . . . , k} nun eine zulässige Färbung von G′ mit k \u0003 ∆(G) + 1 Farben. Da k grösser als der Grad von v in G ist, gibt es einen Farbe c ∈ {1, . . . , k} die nicht in der Nachbarschaft NG(v) 29Englisch: induction hypothesis 30Konkret verwenden wir das Distributivgesetz um (n − 1) · n/2 + n \u0003 (n − 1 + 2) · n/2 \u0003 (n + 1) · n/2 zu erhalten. vorkommt. Daher können wir f ′ zu einer zulässigen Färbung von G erweitern, indem wir v die Farbe c zuweisen. □ Beispiel 3: Summe der Knotengrade Sei G ein Graph mit n Knoten v1, . . . , vn und m Kanten. Dann gilt die Identität degG(v1) + · · · + degG(vn) \u0003 2m . In diesem Abschnitt beweisen wir diese Identität per Induktion über die Anzahl der Kanten m. Sei A(m) die Aussage, dass die obige Identität für alle Graphen mit m Kanten gilt. Für den Induktionsanfang müssen wir alle Graphen mit m \u0003 1 Kanten betrachten. In dem Fall hat der Graph genau zwei Knoten, jeweils mit Grad 1. Damit ist die Summe der Grade 2 \u0003 2m, wie gewünscht. Für den Induktionsschritt betrachten wir einen beliebigen Graphen G \u0003 (V, E) mit m ≥ 2 Kanten. Sei G′ \u0003 (V, E′) der Teilgraph, den wir erhalten indem wir einen beliebige Kante e \u0003 {vi , v j } ∈ E entfernen. Also gilt |E′| \u0003 m − 1 und per Induktionshypothese degG′(v1) + · · · + degG′(vn) \u0003 2(m − 1). Ferner haben alle Knoten in G′ denselben Grad wie in G bis auf vi und v j, deren Grad in G′ um eins kleiner als in G ist. Damit gilt degG(v1) + · · · + degG(vn) \u0003 2 + degG′(v1) + · · · + degG′(vn) \u0003 2 + 2(m − 1) \u0003 2m . □ Beispiel 4: Nicht-Bipartite Graphen Bei bipartiten Graphen kann man leicht kenntlich machen, dass eine zulässige 2-Färbung existiert, indem man alle Knoten der einen Farbe auf der linken Seite und alle Knoten der anderen Farbe auf der rechten Seite aufzeichnet. Wird der Graph so aufgezeichnet, ist ersichtlich, dass der Graph bipartit ist, da alle Kanten zwischen der linken und der rechten Seite verlaufen (und es keine Kanten gibt die innerhalb der linken Seite oder innerhalb der rechten Seite verlaufen). Kann man bei einem nicht-bipartiten Graph auch leicht kenntlich machen, dass keine zulässige 2-Färbung existiert? Die Herausforderung hierbei scheint zu sein, dass wir von exponentiell vielen 2-Färbung ausschliessen müssen, dass sie zulässig sind. Allgemein scheint es schwieriger die Nichtexistenz eines Objektes (hier: die Nichtexistenz einer zulässigen 2-Färbung) kenntlich zu machen als die Existenz eines Objektes.31 31Diese Idee wird durch die NP , coNP-Vermutung in der theoretischen Informatik formalisiert, welche mit der P , NP-Vermutung zusammenhängt. Der folgende Satz zeigt, dass es überraschenderweise für nicht-bipartite Graphen immer möglich ist, die Nichtexistenz einer 2-Färbung kenntlich zu machen, indem man einen Kreis ungerader Länge als Teilgraph hervorhebt. Satz: Ein Graph ist nicht bipartit genau dann wenn er einen Kreis ungerader Länge als Teilgraph enthält. Anders formuliert geht die Nichtexistenz einer 2-Färbung immer mit der Existenz eines ungeraden Kreises einher. Dieser Satz vereint zwei Aussagen, die wir getrennt voneinander beweisen werden. 1. Ein Graph ist nicht bipartit, wenn er einen Kreis ungerader Länge enthält. 2. Wenn ein Graph nicht bipartit ist, dann enthält er einen Kreis ungerader Länge. Um die erste Aussage zu beweisen, reicht aus zu verwenden, dass Kreise ungerader Länge nicht bipartit sind. Jede 2-Färbung des Graphen ist auch einen 2-Färbung des enthaltenen ungeraden Kreis und kann daher nicht zulässig sein. Um die zweite Aussage zu beweisen, müssen wir zeigen dass die Nichtexistenz einer zulässigen 2-Färbung bedeutet dass ein ungerader Kreis im Graphen existiert. Äquivalent dazu, müssen wir zeigen dass die Nichtexistenz eines ungerade Kreises im Graphen bedeutet dass eine zulässige 2-Färbung existiert. Wir werden diesen Satz mittels vollständiger Induktion beweisen. Sei A(n) die Aussage, dass alle Graphen mit höchstens n Knoten, die keinen Kreis ungerader Länge enthalten, bipartit sind. Für den Induktionsanfang müssen wir alle Graphen mit n \u0003 1 Knoten betrachten. Solche Graphen können keine Kante enthalten und sind damit trivialerweise bipartit. Für den Induktionsschritt müssen wir A(n) für ein allgemeines n ≥ 2 zeigen unter der Annahme, dass A(n − 1) gilt. Sei G \u0003 (V, E) ein Graph mit n Knoten, der keinen ungerade Kreis enthält. Wir müssen zeigen, dass G bipartit ist. Wir können dabei annehmen, dass G mindestens eine Kante enthält (da G ansonsten trivialerweise bipartit wäre). Sei v ∈ V ein beliebiger Knoten in G mit Grad deg(v) ≥ 1. Indem wir v mit seiner Nachbarschaft N(v) zu einem neuen Knoten v′ verschmelzen, erhalten wir einen neuen Graphen G′ \u0003 (V′, E′) mit n − deg(v) ≤ n − 1 Knoten.32 Da G keinen ungeraden Kreis hat, stellt sich heraus, dass G′ auch keinen ungeraden Kreis enthält. (Diesen wichtigen Schritt werden wir später sorgfältiger rechtfertigen.) Laut Induktionshypothese A(n − 1) ist demnach G′ bipartit. Sei f ′ : V′ → {1, 2} eine zulässige 2-Färbung von G′. Wir 32Konkret erhalten wir G′ indem wir v und die Nachbarn von v, sowie all inzidenten Kanten entfernen und einen neuen Knoten v′ hinzufügen, der mit allen Knoten verbunden ist, die einen Nachbarn von v als Nachbarn haben. erhalten die folgende zulässige 2-Färbung f von G, f (u) \u0003 ||| |||  f ′(v′) für u ∈ NG(v), 3 − f ′(v′) für u \u0003 v, f ′(u) sonst. Also erhalten die Knoten in der Nachbarschaft von v dieselbe Farbe wie v′ in der Färbung f ′, der Knoten v erhält die verbleibende Farbe, und alle anderen Knoten erhalten dieselbe Farbe wie in f ′. G G′ w₁ u₁u₂ w₂ u₃ w₃ u₄ v u₁u₂ u₃ u₄ v′ Um zu prüfen, dass f eine zulässige 2-Färbung ist, reicht es aus alle Kanten e ∈ E zu betrachten, die zu einem Nachbarn von v inzident sind. (Alle anderen Kanten existieren unverändert in G′.) Es gibt keine Kanten zwischen zwei Nachbarn von v, da G keinen ungeraden Kreis (der Länge 3) enthält. Also verläuft e entweder zwischen v und einem Nachbarn von v oder zwischen einem Nachbarn von v und einem Knoten in V′. Im ersten Fall haben die Endpunkte von e Farben f ′(v′) und 3 − f ′(v′) (laut Konstruktion von f ) und sind damit zulässig gefärbt. Im zweiten Fall entspricht e einer Kante e′ in G′, die inzident zu v′ ist, und die Endpunkte von e haben in f dieselbe Farben wie die Endpunkte von e′ in f ′. Da f ′ ein zulässige Färbung ist, sind damit auch die Endpunkte von e auch unterschiedlich gefärbt in f . Wir müssen noch begründen warum G′ keinen ungeraden Kreis enthält (was uns erlaubt die Induktionshypothese auf G′ anzuwenden). Dazu konstruieren wie zu jedem Kreis C′ in G′ einen Kreis C in G, so dass die Längen von C und C′ gleich sind oder sich genau um 2 unterscheiden. Da G keinen ungerade Kreis hat, folgt daraus, dass auch G′ keinen ungeraden Kreis enthält. Sei C′ ein beliebiger Kreis in G′. Für den Fall, dass C′ nicht den Knoten v′ enthält, dann ist C′ auch ein Kreis in G und wir können C \u0003 C′ wählen. Also müssen wir nur noch den Fall betrachten, dass v′ in C′ enthalten ist. Seien w1 und w2 die Knoten die unmittelbar vor und nach v′ in C′ vorkommen. Laut Konstruktion von G′ existieren Knoten u1 ∈ NG(w1) ∩ NG(v) und u2 ∈ NG(w2) ∩ NG(v). Falls u1 \u0003 u2, dann erhalten wir aus C′ einen Kreis C in G derselben Länge, indem wir v′ durch den Knoten u1 \u0003 u2 ersetzen. Falls u1 , u2, dann erhalten wir aus C′ einen Kreis C in G, indem wir v′ durch die Sequenz w1, v, w2 ersetzen. In diesem Fall ist die Länge von C um genau 2 grösser als die Länge von C′. □ Bemerkung: Es ist nützlich zu fragen, ob wir den Graphen G′ im Induktions- schritt auch einfacher konstruieren könnten. Zum Beispiel hätten wir wie im Beweis des Satz über Färbungen und maximalen Knotengrad einfach einen beliebigen Knoten entfernen können. Tatsächlich kann auf einen solchen Teil- graphen die Induktionshypothese leicht angewendet werden. Allerdings ist es im allgemeinen nicht möglich die Färbung eines solchen Teilgraphen zu einer Färbung des ganzen Graphen zu erweitern. In unserem Beweis wurde G′ so konstruiert, dass zum einen die Induktionshypothese anwendbar ist und zum anderen jede Färbung von G′ auf G erweitert werden kann. Gerichtete Graphen In manchen Netzwerken, haben Verknüpfungen eine Richtung. Zum Beispiel kann in einem Strassennetzwerk eine Einbahnstrasse nur in eine Richtung durchlaufen werden; auch in sozialen Netzwerken, wie dem “follower” Netzwerk von Twitter, bestehen viele Verbindungen nur in eine Richtung. Ein weiteres wichtiges Beispiel ist das Netzwerk der “hyperlinks” im “World Wide Web” (WWW), das eine grosse Bedeutung für Suchmaschinen wie Google hat, da es erlaubt indirekt Rückschlüsse auf die Relevanz und Qualität von Dokumenten zu ziehen. Wir modellieren Netzwerke in denen Verknüpfungen möglicherweise nur in eine Richtung verlaufen durch gerichtete Graphen. Deﬁnition: Ein gerichteter Graph G \u0003 (V, E) besteht (wie ein ungerichteter Graph) aus einer Knotenmenge V und einer Kantenmenge E, wobei jede Kante e ∈ E jedoch ein geordnetes Paar e \u0003 (u, v) zweier Knoten u, v ∈ V mit u , v ist. Wir nennen u den Fuss33 und v den Kopf 34 der gerichteten Kante e \u0003 (u, v). Falls der Graph G eine gerichtete Kante (u, v) ∈ E enthält, sagen wir u ist ein (direkter) Vorgänger35 von v in G und v ist ein (direkter) Nachfolger36 von u in G. Wir bezeichnen mit N − G(v) die Menge der Vorgänger von v und mit N + G(u) die Menge der Nachfolger von u. Die Anzahl der Vorgänger nennen wir Eingangsgrad37 33Englisch: tail 34Englisch: head 35Englisch: predecessor 36Englisch: successor 37Englisch: indegree deg− G(v) :\u0003 |N − G(v)| und die Anzahl der Nachfolger nennen wir Ausgangsgrad38 deg+ G(u) :\u0003 |N + G(u)|. Ein Knoten mit Eingangsgrad 0 nennen wir Quelle39 und ein Knoten mit Aus- gangsgrad 0 nennen wir Senke40. Jeder ungerichteten Graph G \u0003 (V, E) kann auch als ein gerichteter Graph betrachtet werden, indem wir jede ungerichtete Kante {u, v} durch die zwei gerichtete Kanten (u, v) und (v, u) ersetzen. Beispiel: Flussüberquerung und Zustandsübergänge In den nächsten Abschnitten werden wir einige neue Begriﬀe über gerichtete und ungerichtete Graphen einführen, die wir an dieser Stelle durch folgendes Rätsel motivieren. (Tatsächlich ist die graphentheoretische Lösung dieses Rätsels ein Spezialfall von Model Checking, für dessen Entwicklung Clarke, Emerson und Sifakis den Turing Award 2007 erhielten.) Ein Mann möchte zusammen mit einem Wolf, einer Ziege und einem Kohlkopf einen Fluss überqueren. Sein Boot fasst ausser ihm nur einen weiteren Passagier. Er kann weder den Wolf mit der Ziege noch die Ziege mit dem Kohl unbeaufsichtigt an einem Ufer lassen. Wir modellieren dieses Rätsel mit Hilfe eines Graphen. Jeder Knoten beschreibt einen möglichen Zustand des “Systems”, also auf welcher Seite des Flusses (~) sich der Mann (M), der Wolf (W), die Ziege (Z), und der Kohl (K) beﬁnden. Die Kanten des Graphen geben an welche Zustandsübergänge möglich sind durch eine Bootsfahrt über den Fluss. MWZK ~ WK ~ MZ MWK ~ Z K ~ MWZ W ~ MZK MZK ~ W Z ~ MWK MZ ~ WK MWZ ~ K ~ MWZK Ziel ist es vom Anfangszustand “MWZK~” (alle Beteiligten sind auf der einen Seite des Flusses) zum Zielzustand “~MWZK” (alle Beteiligten sind auf der anderen Seite des Flusses) zu gelangen. Eine Lösung entspricht einer Sequenz von Zuständen beginnend mit dem Anfangszustand und endend mit dem Zielzustand, so dass aufeinanderfolgende Zustände einem möglichen Zustands- übergang entsprechen. 38Englisch: outdegree 39Englisch: source 40Englisch: sink In dem obigen Graphen, entspricht eine Lösung also einer Sequenz von Knoten, so dass zwischen aufeinanderfolgenden Knoten eine Kante verläuft. Anhand des Graphen ist auch ersichtlich, dass eine Lösung existiert und dass die kürzeste Lösung mit 7 Überfahrten auskommt. Andere Rätsel dieser Art können auch dadurch gelöst werden, indem wir für alle möglichen Zustände Knoten einführen und für alle möglichen Zustands- übergänge Kanten hinzufügen. Deﬁnition: Wege und verwandte Begriﬀe In einem Graphen G \u0003 (V, E), besteht ein Weg41 mit Startknoten v0 und End- knoten vℓ der Länge ℓ ≥ 0 aus einer Sequenz v0, v1, . . . , vℓ von Knoten in V, so dass alle aufeinander folgenden Knoten vi , vi+1 durch eine gerichtete Kante (vi , vi+1) ∈ E verbunden sind. Ein Pfad42 ist ein Weg, in dem jeder Knoten höchstens einmal vorkommt. Ein geschlossener Weg43 ist ein Weg, so dass v0 \u0003 vℓ gilt. Ein Zyklus44 ist ein geschlos- sener Weg der Länge ℓ ≥ 2. Ein (einfacher) Kreis45 ist ein geschlossener Weg der Länge ℓ ≥ 3, so dass in der Sequenz v1, . . . , vℓ jeder Knoten höchstens einmal vorkommt. A B C D E F G In diesem Graph sind A, B, C, D, E, F und A, B, C, D, E, G, C, D, E, F zwei Wege von A nach F. Aber nur der erste Weg ist auch ein Pfad. Die Sequenzen C, D, E, F, E, G, C und E, F, E sind Zyklen, aber keine Kreise. Die Sequenz C, D, E, G, C ist ein Kreis. Bemerkung: Wir verwenden die Begriﬀe Weg, Pfad, Zyklus, und Kreis auch für ungerichtete Graphen, indem wir die Begriﬀe auf die entsprechenden gerichteten Graphen anwenden (wie im Abschnitt Gerichtete Graphen beschrieben). 41Englisch: walk 42Englisch: path 43Englisch: closed walk 44Englisch: circuit 45Englisch: (simple) cycle Deﬁnition: Erreichbarkeit und Distanz Ein Knoten v heisst erreichbar in einem Graphen G von einem Knoten u, falls G einen Weg von u nach v enthält. Die Distanz von u nach v in G ist die Länge des kürzesten Wegs von u nach v in G. Eigenschaft: Minimale Wege sind Pfade Falls ein Weg mit Startknoten v0 und Endknoten vℓ der Länge ℓ kein Pfad ist, kann der Weg abgekürzt werden ohne den Startknoten oder Endknoten zu verändern. Auf diese Weise können wir Wege solange abkürzen bis wir einen Pfad erhalten. Satz: Falls ein Graph einen Weg der Länge höchstens ℓ von v0 nach vℓ enthält für v0 , vℓ, so enthält er auch einen Pfad der Länge höchstens ℓ von v0 nach vℓ. Wir beweisen den Satz per Induktion. Sei A(ℓ) die Aussage, dass der Satz für eine bestimmte Länge ℓ ≥ 1 gilt. Die Aussage A(1) gilt, da jeder Weg der Länge 1 mit unterschiedlichem Start- und Endknoten ein Pfad sein muss. Sei ℓ ≥ 2. Für den Induktionsschritt zeigen wir, dass A(ℓ) gilt, wenn A(ℓ − 1) gilt. Sei v0, . . . , vℓ ein Weg der Länge ℓ von v0 nach vℓ. Falls dieser Weg kein Pfad ist, gibt es einen Knoten vi \u0003 v j mit i < j, der mehr als einmal vorkommt. Dann ist v0, . . . , vi , v j+1, . . . , vℓ ein Weg von v0 nach vℓ der Länge ℓ − (j − i) ≤ ℓ − 1. Laut Induktionshypothese gibt es daher einen Pfad von v0 nach vℓ der Länge höchstens ℓ. Bemerkung: An dieser Stelle könnten wir fragen, ob minimale Zyklen Kreise sind. Leider ist hier nicht leicht eine Verbindung zu formulieren, wie das folgende Beispiel zeigt. A B C Dieser Graph enthält zwar einen Zyklus A, B, C, B, A mit drei verschieden Knoten, aber keinen Kreis. Problemstellung: Topologische Sortierung Graphen können Abhängigkeiten zwischen verschiedene Vorgängen ausdrücken. Zum Beispiel stellt der folgende Graph Abhängigkeiten beim Anziehen ver- schiedener Kleidungsstücken dar. linke Socke linker Schuh rechte Socke rechter Schuh Hose Gürtel Unterhose Hemd Eine wichtige Problemstellung für solche Graphen ist eine Reihenfolge der Knoten zu ﬁnden, so dass alle Abhängigkeiten erfüllt werden. Zum Beispiel erfüllt die Reihenfolge “Unterhose”, “Hemd”, “Hose”, “Gürtel”, “linke Socke”, “linker Schuh”, “rechte Socke”, “rechter Schuh” alle oben dargestellten Abhän- gigkeiten beim Anziehen von Kleidungsstücken. Diese Reihenfolgen werden “topologische Sortierungen” genannt. Deﬁnition: Eine topologische Sortierung eines gerichteten Graphen G \u0003 (V, E) ist eine Aufzählung v1, . . . , vn aller Knoten in V, so dass für jede Kante (vi , v j) ∈ E gilt, dass i < j. Wenn wir die Knoten entsprechend einer topologischen Sortierung v1, . . . , vn von links nach rechts in einer Reihe anordnen, dann sind alle Kanten des Graphen von links nach rechts gerichtet. An dieser Stelle untersuchen wir die Frage, welche gerichtete Graphen eine topologische Sortierung haben. Später in der Vorlesung werden wir eﬃziente Algorithmen kennenlernen, die topologische Sortierungen berechnen können. Tatsächlich enthält der Beweis in diesem Abschnitt die Kernidee, die den eﬃzienten Algorithmen zugrunde liegt. Satz: Ein gerichteter Graph hat eine topologische Sortierung genau dann wenn er keinen Zyklus enthält. Ein gerichteter Graph ohne Zyklus wird azyklisch genannt. Um den Satz zu beweisen, zerlegen wir ihn in zwei Teile: 1. Jeder Graph, der eine topologische Sortierung hat, ist azyklisch. 2. Jeder azyklische Graph hat eine topologische Sortierung. Der erste Teil ist leicht einzusehen, da in einer topologische Sortierung jeder Weg von links nach rechts verläuft und damit nicht denselben Start- und Endknoten haben kann. Um den zweiten Teil zu zeigen, beweisen wir zunächst den folgenden Satz. Satz: Jeder azyklische Graph G \u0003 (V, E) mit mindestens einem Knoten enthält eine Senke. Beweis: Wir können annehmen, das G mindestens eine Kante hat (ansonsten sind alle Knoten Senken). Sei P ein Pfad maximaler Länge in G und sei v der Endknoten von P. Der Knoten v kann keinen Nachfolger in V(P) haben, da G azyklisch ist. Er kann auch keinen Nachfolger in V \\ V(P), da P ein Pfad maximaler Länge ist. Also kann v keine Nachfolger haben und ist damit eine Senke. □ Satz: Jeder azyklische Graph G \u0003 (V, E) hat eine topologische Sortierung. Beweis: Wir verwenden Induktion über die Anzahl der Knoten n. Der Fall n \u0003 1 ist trivial (jede Aufzählung der Knoten eine topologische Sortierung). Falls n > 1, verwenden wir den vorherigen Satz um eine Senke v in G zu erhalten und erhalten einen azyklischen Graphen G′ mit n − 1 Knoten, indem wir v und dessen inzidenten Kanten von G entfernen. Laut Induktionshypothese hat G′ eine topologische Sortierung v1, . . . , vn−1. Dann ist v1, . . . , vn−1, v eine topologische Sortierung von G. □ Deﬁnition: Zusammenhang In einem Graph G \u0003 (V, E) heisst eine Knotenmenge U ⊆ V (stark) zusammen- hängend,46 falls G für jedes Paar von Knoten u , v ∈ V einen Weg von u nach v enthält. Ein Graph G \u0003 (V, E) heisst (stark) zusammenhängend, falls V in G zusammen- hängend ist. Eigenschaft: Zusammenhangskomponenten in ungerichteten Graphen In ungerichteten Graphen haben zusammenhängende Knotenmenge eine be- sonders einfache Struktur, die durch den folgenden Satz ausgedrückt wird. (Für gerichtete Graphen gibt es eine ähnliche Struktur, auf die wir an dieser Stelle nicht weiter eingehen.) 46Wir verwenden diese Deﬁnition von Zusammenhang sowohl für gerichtete als auch für ungerichtete Graphen. Für gerichtete Graphen wird hier oft der Begriﬀ “starker Zusammenhang” verwendet. Es gibt für gerichtete Graphen auch den Begriﬀ “schwacher Zusammenhang”, auf den wir in diesem Text allerdings nicht eingehen. Satz: Für jeden ungerichteten Graph G \u0003 (V, E) gibt es eine Partition U1, . . . , Uk der Knotenmenge V, so dass jede Menge Ui zusammenhängend in G ist und jede Kante (u, v) ∈ E beide Endpunkte in derselben Menge Ui hat. Desweiteren ist diese Partition eindeutig und die Mengen U1, . . . , Uk heissen Zusammenhangskomponenten. G U₁ U₂ U₃ Deﬁnition: Baum Ein zusammenhängender ungerichteter Graph ohne Kreis heisst Baum.47 47Englisch: tree Ein ungerichteter Graph dessen Zusammenhangskomponenten Bäume sind heisst Wald.48 (Also ist jeder ungerichteter Graph ohne Kreis ein Wald.) Eigenschaften: Bäume und Wälder Analog zu der Tatsache, dass jeder azyklische gerichtete Graph mindestens eine Senke hat, hat jeder Graph ohne Kreis ein Blatt. Satz: Jeder ungerichtete kreislose Graph G mit mindestens zwei Knoten hat mindestens zwei Blätter. Beweis: Betrachte einen Pfad P \u0003 (v0, . . . , vℓ) maximaler Länge in G. Die End- knoten v0, vℓ können keine Nachbarn ausserhalb von P haben, da der Pfad maximale Länge hat. Gleichzeitig kann v0 ausser v1 keinen Nachbarn innerhalb von P, da G keinen Kreis enthält. Es folgt, dass v0 ein Blatt ist. Auf dieselbe Weise können wir argumentieren, dass vℓ ein Blatt ist. □ Satz: Jeder Baum T mit n Knoten hat n − 1 Kanten. Beweis: Wir führen den Beweis per Induktion n. Falls n \u0003 1, so enthält der Baum keine Kante und erfüllt damit die gewünschte Aussage. Wir betrachten nun den Fall n > 1 und können annehmen, dass die gewünschte Aussage für n − 1 gilt. Laut des vorherigen Satzes enthält T mindestens ein Blatt v. Wir können einen Baum T′ mit n − 1 Knoten erhalten, indem wir v und dessen inzidenten Kante von T entfernen. Laut Induktionshypothese hat T′ genau |V(T′)| − 1 \u0003 n − 2 Kanten. Da T eine Kante mehr als T′ hat, gilt |E(T)| \u0003 |E(T′)| + 1 \u0003 n − 1 Kanten hat. □ 48Englisch: forest Problemstellung: Eulertour Leonhard Euler (geboren 1707 in Basel, gestorben 1783 in Sankt Petersburg) war einer der bedeutendsten und produktivsten Mathematiker, die je gelebt haben. Auf ihn geht folgende Fragestellung zurück: Kann man einen Rundgang durch Königsberg machen, so dass man jede der sieben Pregelbrücken genau einmal überquert? Graphentheoretisch formuliert fragen wir nach einem geschlossenen Weg im folgenden Graphen, der jede Kante genau einmal durchläuft.49 Euler bemerkte, dass dieser Graph keinen solchen Weg enthalten kann, da der 49Wir sagen, dass ein Weg v0, . . . , vℓ eine Kante e durchläuft, falls e \u0003 (vi , vi+1) für ein i ≥ 0 gilt. Graph Knoten mit ungeradem Grad enthält (wohingegen in jedem geschlossenen Weg jeder Knoten notwendigerweise geraden Grad hat). Im Rest dieses Abschnitts halten wir diese Beobachtung in allgemeiner Form fest und zeigen zudem, dass zusammenhängende Graphen mit nur geraden Knotengrade einen geschlossenen Weg enthalten, der jede Kante genau einmal durchläuft. Deﬁnition: Eine Eulertour in einem Graphen G ist ein geschlossener Weg, der jede Kante genau einmal durchläuft. Der folgende Satz liefert eine Charakterisierung von Graphen, die Eulertouren enthalten. Der Beweis enthält die Kernidee eines eﬃzienten Algorithmus um Eulertouren zu berechnen, auf den wir an dieser Stelle aber nicht weiter eingehen. Satz: Ein ungerichteter zusammenhängender Graph enthält eine Eulertour, genau dann wenn alle Knotengrade gerade sind. Um den Satz zu beweisen, zerlegen wir ihn in zwei Teile: 1. Jeder ungerichtete Graph mit einer Eulertour ist zusammenhängend und hat nur gerade Knotengrade. 2. Jeder ungerichtete zusammenhängende Graph mit nur geraden Knoten- graden hat eine Eulertour. Der erste Teil ist leicht einzusehen, da in einem Zyklus alle Knotengrade gerade sind. Den zweiten Teil beweisen wir per Induktion über die Anzahl der Kanten. Satz: Jeder ungerichtete zusammenhängende Graph mit nur geraden Knoten- graden und höchstens m Kanten hat eine Eulertour. Beweis: Falls m \u0003 0, dann ist jeder geschlossener Weg der Länge 0 eine Eulertour und damit erfüllt der Graph die Aussage. Wir betrachten nun den Fall m > 1 und können annehmen, dass die gewünschte Aussage für m − 1 gilt. Sei G \u0003 (V, E) ein ungerichteter zusammenhängender Graph mit nur geraden Knotengraden und m Kanten. Wir können annehmen, dass G keine isolierten Knoten enthält (ansonsten können wir solche Knoten von G entfernen). Da alle Knotengrade gerade sind gilt, 2m \u0003 Õ v∈V deg(v) ≥ 2 · |V | > n − 1 . Also ist G kein Baum. Da G zusammenhängend ist, folgt, dass G einen Kreis v0, . . . , vℓ mit vℓ \u0003 v0 und ℓ ≥ 3 enthält. Wir erhalten einen Graphen G′, indem wir die Kante in diesem Kreis von G entfernen. Der Graph G′ hat also m−ℓ ≤ m−1 Kanten. Ferner hat G′ nur gerade Knotengrade, da sowohl G als auch der entfernte Kreis nur gerade Knotengrade haben. Laut Induktionshypothese haben die Zusammenhangskomponenten von G′ Eulertouren T1, . . . , Tk. Wir erhalten nun eine Eulertour für G, indem wir die Touren T1, . . . , Tk mit dem Kreis v0, . . . , vℓ kombinieren. □ T₁ T₃T₂","libVersion":"0.3.1","langs":""}