{"path":"sem3/LinAlg/VRL/extra/other/kzheng/LinAlg-w02-kai.pdf","text":"L in e are Algebra Übungsstunde 2 1 . Orga 2 . GA : Reflexion 3 . Recap : A1 4. Priorisierte Wiederholung 5 . Aufgaben 6 . Nächste Woche 7.. Qu iz 11 Orga · Quiz parat ! · Alle Begriffe nun auch hier primär auf Englisch Prüfungssprache per Default ist Englisch, Deutsch möglich Ihr könnt aber immer auch auf Deutsch antworten · Die Übungsstunde fokussiert sich auf das Lineare Algebra Verständnis viele Vorlesungsthemen wie Computation Trees, Fibonacci, Beweise, ... er tl. Prüfungsrelevant aber sicher· 2 . GA : Reflexion · [3-5 Minuten 1 Rew ind: Vorlesungen Woche 2 Worum gings ... 3 . Recap : A1 · Eure Lösungen · sehr nice, viele haben die Variablen definiert !· ④ 3·immerdie keine Begründung nötig\" ② v 3 · O-Vektor ist per Def. Linearly dependent weil Fr, 0 .v = 5 · Weiterer Hinweis : Es gilt per Def. Lin. ind : Falls C, V, + ... + CnVn = 0, da nn muss = ... = (n = 0 sein Das heißt nicht dass bei Lin . dep Alle , ..., nF0 sein müssen ! Sie he : - Auch bei Lin dap en einige 4 , ..., n = 0 sein , halt nur nicht alle . ③ 3 · immer darauf achten was gena u die Aufgabe fordert hier geht es um die in ind vo n allen Vektoren u, v, w 304 sein ein · Meine Lösung : a) Since v = o, we have v = oo v . u, henc e no, lin . dep . 6) We see that with Elimination - 1 T op o - 1 0 I 0 I ~ I 1 I-[ ~ I 000 I-die * 1 un with rankU = 3, hence u, v, w Lin. ind . W c) Since only first two columns are lin . dep, the number of in d -columns is 2 . => rankA = 2. d) We see that with Elimination L - 18] - I - 1 1 I ~ L E with rankU = 3, hence u, v, w Lin. ind . Alternative since AfR3 * 3 : det A = 0 +0 +0-0-0-2 =-2 => rank A = din A = 3 . 4. Priorisierte Whl . ⑲ Multiplikation · Multiplikation A A B : mxn . nxp = mxP -# ] . [U =) = F = II · Wichtig : · ABFBA, spich nicht immer kommu, auch bei nun Matrizen! · A(B +C ) = AB +AC distributiv bz w. auch (A +B ) c = Ac + B ( · Tipp : Ein Beispiel auf dem Spick! CR-Decomposition · A = CR wobeitr ank e und Ate m , Mer, Repert FallsE] = [ /[1] , 0 . 3 C ist die lin. ind . \" Version vo n A z .B .[5] = 48] + - [8] :[ =[ De finition LGS · Ax = b) A](x = B(( - by =- Daher die Intuition: Gibt es eine Linearkombination Linearkombination von b durch Xn. ... Xn 1 au s an ... an für ? \" Hinweis : später kommt noch eine andere , linear transformation Intuition\" # Triangular Form (Zeilenstufenform) · Ax = b Ux = 2, mit U in triangular form - 0x(X n* 1 S St 7 * ......... - - - U 11- - - *- I2 W = I %\" Apr opor os an - · n- r O free variables (freie Variablen) · m-V Zero-rous (Verträglichkeitsbedingungen) & Solve LGS, Elimination + Backsubstitution (Gauß-Verfahren) Lösungsmenge Ex3 ⑱· Ze l : LGS lösen : 1 . Elimination Es gilt : Ax = b -> Ux = C wobei U ist A in triangular form und sung von Ax = b Lösung von Ux = [A], [b] [A(b] ↓ Elimination ↓ ... EP EEP EE . [A], ... EP EEP EE [b] [1]- - - W C 2 . Backsubstitution 5. Aufgaben 1 Matrix Multiplikation · Is p : A = [1 - 5 L I Berechne : A -B (0. Schauen ob definiert ...) # Verdeutlichen, wie die Ergebnismatix aussieht! · es gilt immer : mxn-nxp=mxp => 2x3 . 3x3 = wir bekommen eine 2x3 Matrix I I # Rechnen, so wie es Sinn macht [1 - 5 .22 I =[12 + - 30 + 5 .41 . + 232 + 5 . 31 .4 + 3 .2 + 5 .2 I 0 .2 +2 .0 + 1 .4 0 .1 + 2 .2 + 1 . 30 . 4 + 2 .2 + 1 .2 =[24108 I ⑭ Solve LGS (Elimination + Backsubstitution ( BSp- I i x + y - z = 3 # : x + 2y - 2z = 2 #I i 2x - y + 2z = 15 1 I n die Matrixform Ax = b bringen 1 1 - 1 I 12 - 2A = - = [ ] 2 - 1 Z # Elimination Step (Ax = b -> Ux = c) I Er A =- 1 1 1 - 1E = 1 I L - 1 7· Ezb = [131](I + - 1) 8 2 - 1 2 Ea = [108] , EsErnA = II 4 , EarExb = [ - ] + 1-21) - 2 0 0 - 3 4 E = [10 I / EszEsrEr .A =[ I · EsEsnEnb = [1] # + (3 ) 3 0 1- = W =C # Backsubstitution (Rückwärtseinsetzen) Aus #I : 17 6 Aus I : xz - xz = - 1 xz - 6 = - 1 5 Aus I : X 1 + Xz - xz = 3 x1 + 5 - 6 = 3 #4- # Lösung angeben x = [5], löst x = daher auch Ax = wobei U = EszEzrEznA, c = EszEzrErb . Btw : A = LU (LU-decomposition, nächste Woche) kommt Zustande durch : U = EszEarEz1A E Ezi Esi Es U = A- = L, untere Linkschreiecksmatrix A Il -Er , 8 - 0Der IL = L L 1 Fa lls nicht explizit erwähnt Elimination mit diesem* Algo zu lösen, hier eine viel / schnellere Alternative : (Gauß elimination method) , he Idee ~ I Ins Schema : # 2 = 2)] #I 2 - 12 Pivotzeile o-pirot #(, ] + 2 i 1 Il ~ L Pivotzeile Basically (EssEznA(b]1) - M - v) [ =(.] Basically [EszEsrEznA (b] 0 1 -m e W C # Elimination, Ugly Cases u = [ Jap u =2 Wird noch in Detail behandelt was man da nn macht ! Zero -ro us deuten: · Sei *: = random Zah l · Sei *: random Zah l +O In 2-3 & L L L F] F] 3 Wochen. 0 .xnF*, keine Lsg ! 0 .Xn = P n Egal was -> hat Lsgn ! · nicht verwechseln mit : (] *. Xn = 0 = Xn = 0, eindeutige Lösung Ra n k bestimmen u = [ * I => rankU-rankA = 2, Anzahl der Pivots man braucht meistens die triangular form . 6 . Nächste Woche (2) · Lineare Gleichungssysteme LGS(Ax = b) · Inve rs e Theorem · Kosten für Elimination, Substitution · LU-Zerlegung (LU-decomposition) · Permutation · Transponierte (Transpose AT ( · Symmetrische Matrix 7. Quiz · Kahoot. it","libVersion":"0.3.2","langs":""}