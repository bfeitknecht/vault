{"path":"sem4/CN/UE/s/CN-u06-s.pdf","text":"Exercise 6: Routing Note: This weeks exercise has a focus on (intra-AS) routing but still includes a question (first one) about topics covered earlier in the course. This video is great if you’d like to take a look at how BGP works in real life. IT takes a look at the recent Facebook outage and explains how it happened. Question 1: OSI Layers, IP, DHCP, ARP Question 1.1 A packet (i.e., a sequence of bytes sent over a network) is called differently depending on which OSI layer is occurs. Fill in the following table with the corresponding entries from the following list (note that some terms may be used in multiple layers and some terms may not be used at all): • netpacket • dataframe • segment • frame • datagram • message layer name of respective packet Application Transport (TCP) Transport (UDP) Network Datagram, Packet Link Physical This layer moves single bits so there is no notion of a packet Solution: layer name of respective packet Application Message Transport (TCP) Segment Transport (UDP) Segment, Datagram Network Datagram, Packet Link Frame Physical This layer moves single bits so there is no notion of a packet 1 Question 1.2 Which of the following informations are contained inside of the IPv4 header: • Sequence number • NAT translation table • TTL (time to live) • The DNS A-record for the corresponding hostname • checksum • used Transport protocol (TCP, UDP,. . . ) Solution: • checksum, used transport protocol, TTL • Note: The sequence number is only contained inside of the transport header but not the IP header • Note: There is no checksum in the IPv6 header Question 1.3 What does the acronym DHCP stand for and what is its purpose? • Dynamic host congestion protocol - is used to handle congestion issues • Dynamic host configuration protocol - is used to set IP configurations • Dynamic hamster cuddle protocol - is used to cuddle your favorite pet Solution: DHCP stands for “Dynamic host configuration protocol” since the machines IP address among other IP relevant information is dynamically configured! (instead of beings manually configured) Question 1.4 How does a machine connected to a LAN learn about its own MAC address? Solution: It knows it beforehand. Every machine is shipped with a unique MAC address that is registered by the manufacturer. Note that it might be possible to simulate any MAC address via software. Question 1.5 How does a machine connected to a LAN learn about the MAC addresses of other machines in the same LAN? Solution: ARP is used to translate IP addresses to MAC addresses. If a machine wants to send traffic to another machine of which it knows the IP address but not the 2 MAC address, it initiates an ARP request and waits for the reply containing the MAC address associated with this IP address. Question 2: Distance-Vector Routing 2.1 Counting to Infinity In the Figure below, after the network is already stabilized, the link connecting nodes C and D breaks. 1. Show how nodes A, B and C might experience the count-to-infinity phe- nomenon for their distances to node D. Show at least two updates in the DV algorithm. For each of these updates, specify the distance-to-D that each node advertised to the neighbors. 2. Will the problem be resolved after some iterations? Network Topology Solution: 1. Time 0 From A to D: distance 3 From B to D: distance 3 3 From C to D: distance 2 The link fails Time 1 From A to D: distance 3 From B to D: distance 3 From C to D: distance 4 Time 2 From A to D: distance 5 From B to D: distance 5 From C to D: distance 4 . . . From A to D: distance 102 From B to D: distance 100 From C to D: distance 101 2. Yes, the problem will eventually be resolved. Thanks to the link between B and D, all nodes will find an alternative path to D and reach a stable state. Question 3: Link-State Routing Your company just bought and installed some routers to create their own internal network. You are trying to set up the routing system so that the routers forward packets efficiently. You decide to use a Link-State routing protocol. Question 3.1 What are the two basic steps in each LS routing algorithm? Briefly explain. Solution: • First Step: Nodes flood topology in the form of link state packets and each node learns the full topolog • Second Step: Each node computes its own forwarding table by finding the shortest path to each other node (according to some cost metric). An algorithm that enables this shortest path calculation is Dijkstra. Question 3.2 All links in your network have a specific propagation delay and bandwidth. A reduced model of the network is given below. Each link is described by the tuple 4 (X,Y) where X is the propagation delay in ms and Y is the Bandwidth in Mbps. However, we cannot run Dijkstra on tuples! Network Model As you can see in the topology, D has dedicated low latency but low bandwidth links to all other nodes in the network, while there are high bandwidth but high latency links between the routers A, B, and C. Let’s assume you care about minimizing latency. Draw the sink tree of the network for router A (A is the sink) only considering the latency metric. Solution: The sink tree is given below: 5 (Latency) sink tree for A Question 3.3 Assume you implement LS-Routing considering only the latency metric. 1. Will this always minimize the experienced latency in practice (i.e., consid- ering some traffic being sent through the network)? 2. What could be an issue there? Solution: As one can see in the sink tree from the previous question, all traffic to A is routed over the link (A,D) which only has a bandwidth of 1 Mbps. Assuming the traffic volume is non-negligible, we could experience congestion on this link resulting in poor transmission performance also regarding latency. 6 Question 3.4 Propose a new routing metric to reduce the experienced latency in this case. Solution: In the following we provide one possible solution. Other solutions (like cost = latency bandwidth ) exist. We want to give each link a new cost that combines the links latency and bandwidth. Notice that a low latency value is a good link in our idea of a shortest path but a low bandwidth is exactly the opposite. We reverse the bandwidth value and compute the cost for each link by cost = latency+ 1 bandwidth . Note that you could of further parametrize the cost function, for example by increasing the weights of the metrics: cost = α · latency + β · 1 bandwidth . We get the model below. As one can see from the new sink tree of A that there is less traffic on the link (A,D) since the bandwidth adds up to the cost. This probably results in less congestion and better utilization of your companies network. Network Model 7","libVersion":"0.5.0","langs":""}