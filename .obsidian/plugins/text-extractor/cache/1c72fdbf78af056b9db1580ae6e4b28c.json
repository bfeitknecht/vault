{"path":"var/export/A&D-bf-u03.pdf","text":"Basil Feitknecht, 23-922-099, Alex Vance, 24-943-763 3.1 For all the following functions n ∈ N and n ≥ 2. (a) Prove or disprove the following statements. Justify your answer. (1) False, let f(n) = 3n5 + 5n3 and g(n) = 4n4. We will show that f ≠ Θ(g). Since the highest power dominating the terms are not equal, speciﬁcally f grows asymptotically faster than g, the limit will diverge. □ (2) False. Let f(n) = n2 + n log(n) and g(n) = n2 log(n) Then we evaluate limn→∞ f(n) g(n) to show that g ≤ Ω(f). □ lim n→∞ f(n) g(n) = lim n→∞ 3n5 + 5n3 4n4 = lim n→∞ (3n + 5 n ) 4 = lim n→∞ 3n 4 = ∞ n4 n4 lim n→∞ f(n) g(n) = lim n→∞ n2 + n log(n) n2 log(n) = lim n→∞ (1 + log(n) n ) log(n) = lim n→∞ 1 + log(n) = 0 n2 n2 log(n) n 0 (3) True, constants don't matter. Let f(n) = n6 6 + 10n4 + 100n3 and g(n) = 6n6. Let's compute the limit to show that it's a constant and thus prove that f = Θ(g). □ (4) True. Let f(n) = 3n and g(n) = n3/ ln(n)en. Then we will show that f ≥ Ω(g). □ lim n→∞ f(n) g(n) = lim n→∞ n6 6 + 10n4 + 100n3 6n6 = lim n→∞ ( 1 6 + 10 n2 + 100 n3 ) 6 = 1 36 n6 n6 lim n→∞ f(n) g(n) = lim n→∞ 3n en = lim n→∞ ( 3 e ) n = ∞ n3/ ln(n)K (b) Prove the following statements. (1) Let f(n) = √n2 + n + 1 and g(n) = n. We will show that limn→∞ f(n) g(n) = C ∈ R+ and thus f = Θ(g). □ (2) False. We can simplify ∑n i=1 log(ii) = ∑n i=1 i log(i). Only considering the second half of the sum, i.e. ∑n i=⌈ n 2 ⌉ i log(i), we note that the smallest term in it is ⌈ n 2 ⌉ log (⌈ n 2 ⌉) and there are ⌈ n 2 ⌉ strictly greater terms after it. Also, log ( n 2 ) = log(n) − log(2), where log(2) is a constant. Thus the upper half of the sum approximates to ∑n i=⌈ n 2 ⌉ i log(i) ≈ n2 log(n) 4 . Since, with the lower half of the sum also contributing this is already only a constant multiple of n2 log(n), the statement is proven. □ lim n→∞ √n2 + n + 1 n = lim n→∞ √n2 (1 + 1 n + 1 n2 ) n = lim n→∞ √1 + 1 n + 1 n2 = √1 = 1 n n (3) Let f(n) = log(n2 + n) and g(n) = log(n + 1). We will show that limn→∞ f(n) g(n) = C ∈ R+ and thus f = Θ(g). □ lim n→∞ f(n) g(n) = lim n→∞ log(n2 + n) log(n + 1) = lim n→∞ log(n) + log(n + 1) log(n + 1) (l’Hôpital) = lim n→∞ 1 n + 1 n+1 1 n+1 = lim n→∞ ( 1 n + 1 n + 1 ) ⋅ (n + 1) = lim n→∞ ( n + 1 n + 1) = lim n→∞ 2n + 1 n (l’Hôpital) = 2 3.3 (a) The exact number of calls to f is presented below. This program is thus in Θ(n2). □ n ∑ i=0 (1 + n ∑ j+1 2) = n ∑ i=0 (2n + 1) = 2n2 + 3n + 1 (b) The exact number of calls to f in sum notation and computed exactly is given below. Since the highest power term dominates the rest of the expression as n → ∞, the number of function calls to f is in Θ(n5). □ 2n ∑ i=1 i3 ∑ j=1 n = 2n ∑ i=1 (i3 ⋅ n) = n ⋅ 2n ∑ i=1 i3 = n ⋅ ( 2n(2n + 1) 2 ) 2 = n ⋅ (2n2 + n)2 = 4n5 + 4n4 + n3","libVersion":"0.5.0","langs":""}