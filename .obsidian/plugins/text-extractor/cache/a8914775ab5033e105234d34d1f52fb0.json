{"path":"sem3/A&D/VRL/lecture-notes/A&D-notes-v08.pdf","text":"DYNAMISCHEPROGRAMMIERUNG.tl . geaignets Tatproblemfinder 2. Rehunionaufstellen 3. DP - Jabelleaasfiillen 4. Lining ausksen 5. Laufseittrwroehtheitanalysilmn Teilsummenprohlemlsubatsum lgegeben : A [ 1. in ] und b, alle in IN Gestalt : I ≤ { 1 . - in } sodas §.±A[ i ] = b ( falls miglich) - Teilsummevm A Beispid : A :/531031--1 b--12 ja 2 nein 20 Nein > 22m in Waiver Algorithms : proline alle ↑ Teilmengen → auteur DP : Teilproblem : Tc i , s ) : = ihtseineteilsummevonAU.it ? \" c- {0,1} Prehension : We i Miiglichheiten : ibenutu Ali ] ii. berate Ali ] nicht t. us - - Te i -1s > F&%%%I¥r, Tli , 0) = 1 TCO , s ) = 0 fins ≥ 1 \\ Jabelle fin b--7 s = T÷ÉÉb vtuufiilleniuiknweiseivonoben nach unter 1 5 ④ O O O O 1 00 2 3 10-0100 ^ 00 Zumiihvhfolgen : feeder Sprung 3 10 1 00 ! 01 00 much links gilt linen fummamkn 4 3 1 00 1<-01① 0 5 1 1 10 1 1 1 1%0 ↑ Loving Laupeit O-tnbneui.Laufaithiingtvenlpio.me einer Zahl at Speicher Oln b) → pseudo - polynomial n : Amahl der Zahlenimihpnt b : eine einselne Zahl aus dem Input Reformgrime ist in der Royd die Liingecksrtnputs Hier : Inputbinge -0cnet.GE?ywirnehmlnhieranidandieZahknin A jervis in lin e RAM - Zelleparson Fin b= 2 ⁿ : Inputbinge -0cm) , Laufseit -0( nisi) exponential F-in b-- ni : Tnputkinge -01ns , Laufreit -0 In \" ') polynomial gehtes Besser ? Geht es polynomial ? → spoiler RuchsackproltemIch ) gegeben : - Rucksack mitgowichtslim.tw - nlgegomtiindemitgewichtwi c-IN and Profitpi c-IN , ii. 1. \" n genuht : TeilmengeI ≤ { 1, . . ., n } sodom E.± Wi ≤ W und E.± Pi maximal Amita - alle I ausprobieron → 2 ⁿ Miglichheiten → in tenor - greedy - Algorithms : Nimm aunt das Element : admit grirstem Profit MY odor : b) mitrleimtemgowicht odor : c)Mit lrstem Preis - Lintang - verhiiltnis Pi/we lift alles bein komehtes Ergebnis, 2. B. Cpr, wd = LAWc) = ②2) , ( p , µ D=(3/3), W = 4 , → I = {1,2 } ist optimal , aber a) nimmt I = { 33 (p, , W , ) = ( 1 , 1) , Cp, , w a) = ( 9,10) , W = 10 → I = { 23 ist optimal , aber b) und c) nehmen I - - { 1 } DP : Teilproblem : Pli ,w ):= maximaler Profit/ denman aunt . . .ir mitrtloihstgewichtwemeichenkann Rehumion : Pliiw )= ma× { umfemlgi.fm?iPi+Pli-1iw-wi1-3venvemkitemi . nicht Nwrmiglichifalhwicw.JabelleiiX012.iw-wiwW@00.r - - - - - - - - - - - - - - o ^ . : ¥, : • • i ' ↓ • \"nii • phoning Laupeitlfpeicherocnw ] Cpseudopolgnomielb) = Alternatives DP : Teilprobbm : Cali,p ) : - _ minimahsgewicht.dasmanbrauchtiumaust.ireinen Profit > puieneuyen Cali, pt-qwennpgurnichturwendeinichtvgwemd.cieneichtwlmhnhann Rehumion : Gili,p)=min{ Cali -1,p ) , wit Gli -1,p - pi ) } -4 T ¥ joiningJabdle : I p - pi P - n . Pp := p i . . .tpn ↑ i ? • :* \\ i i n A- esuchew ( lswiriaihrthleinhes , Laufuit OCNP ) falhwnichtvnhommtl Gehtes Besser ? Geht es polynomial ? Vermutuny : NEW subset sum istein Entscheidumpproblem : Antwort ja odor nein P : = Menge alter Entseheidungsproblem , die in polynomielln Zeit lisbon Sind NP : = Menge alter Entxheidungspmbleme, bei demon man im ]A- Fall ↑ nicht - deterministisoh , line Litany in polynomiellu Zeit iibesyrriifen ka n n \" mit Gleich \" lisbon Vermutuny : P ± NP Lgioistesungeloites Problem der biformatik ¥ KnapsackCEntnheidungsvarianto.it ar m man Went Vmit Gowichtwencichen ? \" ) 3 NP ✗ y sublet sum knapsack Baucis , class sabot - sñm nicht in polynomials Zeitgeist warden harm , weirder P ≠NP Wigen . Tiefermathpematischeisatri polynomials Algorithms P = NP fin subset sum \" subset sum ist NP - vollsténdiy \" polgnomiellu Algorithms P = NP fin knapsack \" knapsack ist NP - volhtiimdiy \" vtpproximatiomalgorithmusfiirdasthkhsaooprobbm _ somtentfemeallelpgenstiimkInput : Wii pi µ mitwi > W, parson eh nicht Ann ahme : alle Wi ≤ W↓ Went deroptimalen Loving → Pop% Pmax ← Maxim ales Pi Ziel : Lining, die fast optimalist Lin polynomials Zeit) Ida : Thunder rundeabaufnaihstes Emeth pi dunk pi : = k.iq?j-ielknhewnk / K c- IN Wi und w bleibenunveriindnt → die sellin Teilmengen wie savo r Parson in den Rucksack Beispiel : k= 10 , Wente pi : 112 178, 1001 , 17,237 , . . gerundete Neste Tsi : 110, 70 , 1000 , 10 , 230 , . . . (3) Beolruhtuny : pi -1¥ To pi ≤ pmax ≤ Pont pi # OPT c- { 1 , - in } , West Popo, Laufseit : OCNP ) ur lamp am ~ GET c- { 1. → n } , Wert ? ? , Laufseit :O ( ⁿÉ) ≤ 0(ñ% Pi :::7:| kauftneten, meissen spalteausfutlendennP-E.ip.ie?Inp.i-np-max Wiegert ist ÑPT fierllmprungspmblom } → meissen -2 wntcmachen . Wissen : OFT ist optimal feints, , Qualitiitdnoatpats OPT finllrprumppnbbm → Fiirjede Teilmenge I , die in den Rucksack pant , gilt , I i. c- opt Ñi ≥ EI pi Dasgilt ouch fiirI= OPT : E West umber Loving ieop, - Fi ≥ Éopt Fi ( *) (fiirllmpungspreblm ) → E- ¥ ÉFiieopt Pi (*) ≥ E.op t Fi ¥ East ( pi - K) Pope ≥ÉpiÉk = Pope - nk my duPont ≥ Pmax ¥ Pope - nk . Popt Pmax eigentlich k=t%÷7 ,= Pope - ( 1- ⁿʰ ) Pmax ¢ damitkc.IN Idle : Wattle ein ( Kleine ) E > 0am undsetsek :-. EPñI . → PROFIT COPT)=p , ≥ P.pt . ( 1- e) ← amore Liturgist fast so gut wit Popt Laufseit :0Cⁿ¥H=OÉ)=0Cⁿ% ) polynomial c- pmaxln inn und % \" Fully polynomial-time approximation scheme \" FPTAS Laingsteaufteigendeteilfdge gegeben : Array Ah . . _ n ] vonhrtegen litnnahmeiheinedoppelt) genuht : Linge derleinerlairgstenaafttigendentu.ly LAT Reihenfobgetnunglaihbleibm, aber Liieknerlaubt All] Acn] 2. B. 3 13 17 § 4 78 28 15-2-5 9£ LAT - _ 2 9 11 15 25 99 / Linge6 Listing Mit DP : aupteigendeteiltlge Teilproblern,Vemuh1 : LAT Ci) : = loingste A¥vmA[1 . . - i ] Beispiel : 12 5 34 LAT (1) = 1 LAT (2) = 12 LAT (3) = 125 LAT (4) = 125 LAT (5) = 12342 ? ? Rlhhmion nicht ( einfachmciglich Vermouth : Mestre alle Endanger einer LAT in All . - i ] Beispid : 1 89 567 LAT (3) = 189 Ceimdeutig) LAT (4) = 189 ( eindentig) 2 ? ? Prehension wieder nicht LAT (5) = 189,156 Ceinfachmogkih Idle : metre auch seinen AT in A- [ 1 . - i ] Veniuh : El i ,l ) := \" Esgibt AT derLiingelidieiniendet \"c- 10,13 Rehltmionfiirl≥2 : E( i. e) = { 1 , falls esj-igibtmil-EG.ie -11=1 und Alj ]<A[ i ] ikoimteniiberfliimigeBerechnungonsparen, 0, sont da Ecl,i)=0 fiirl > i, urine Laufseitvonocn) ) Eli , 1) = 1 fin alle ie { 1 , . . ./ n } aber nicht veabenbm V Laufseit . OCÉ, É . .li - D) ≤ OLÉ . ,ⁿ '÷ ) ≤ and ) Beolruhtany : Die Folge 156 ist immer besser ab 189 , denn alle Fortsetsungenvon 189 passon auchan 156 . → miissonwmfinjede Liingenurdiekleimtmcigbihecendunymeskn Wernick : Mc i , e) = hleimtmiiglicheEndunyeinerATderhiingelinAU.IT Cos , falls heinesolche AT eseistiert) Ali]pantantrolge neuertolgevhbenut der Liingel - 1) bisheriges Minimum Ali ] , falls M( it,e-ÑA[ Mci-1,1 ) Rehumionfiiri ≥ 2 : Mci,l)={Me ine ) , sont i=1 : Ma , e) = { All ] , b- ^ as ie > ^ Laulpeit : OCÑ) Beispiel : A = 37 8 4 5 Beobachtang 2 : - Zeiten Sind sortied -€ 3 45 - WircindemproZeilenureinencintray 1 3 • • • as - Nilsen Sonnen win mitbinarer Juche Mliilj . 2 3¥ • • • in Zeit Clogn) finder337*8 • as → wennwirdasselbeitrrayfiirjede2-e.de43¥48 • as wiederverwemkn , dauntdas Updateprofile 5 34*5 • • no r Olbogn) → insgesaml-Laufseitolntg.nl Beisplil : A -421,131,171911114178128115125199T __ -X ← a left 234567 Max,e)2 # ¥ ' as ↑2-usatsinfofu-sR-uihverfolgenderLAT-A.FI . -7-7-82599 F- 11.2.8 \" 99-325-315 -311-39-32 4 15 tplichlr :0(n ) Laufuitiocnlogn) Riuhverflgenbeniitigtzusatsinformation : speicherefiirjedes Array - Element denltrgñngerboimcintragm Mothman ( optional) Problem : Berelhneitlatmioproduht Aik :-. . Ansogiimtigwumiglich Ai ist eine Kirti - Matrix , kiibic-Nihi-i-lidam.itBrockett Fmiheitsgradsitnoriativitiit ( Mannering) sinnvollist 2. B. (AiAz)•A} = Ai CAIA , ) turn ¥ 1 1✗ k An • An \\ • A ] en - ↓ -0Gt) 0ps kxk (AiAAA, : AIA , As = ① ( K2) Opsimgesant AT.AiAs ① Cri)0ps El Ana , El Hops Ai(AiA , ) An • F = ① ( K) 0ps imgasamt 1×1 - ~ - ① ( k ) 0ps Teilproblem : Mci;D := minimale2-ahlopsuwBexchnwngvonA.in . - Aj , i≤j Behunin : (Ai - A-iii. . _ - Ast (Asu :-. ' -1;) ↑ F-TÉÑtr te Multi - ks-uxlj-lsxljplisal.im j > i : Mci;D := min { Mci,s ) + MCs -11,j ) i. ≤ saj + 2-ahlopssurmultiplihationlinerj-ii.Mli.io)=0 [ {kixlsmiteinerlsxlj - Matrix } main :-O ( Kiesel;) Operational bgehtaberlrnwmitiihnlichenrddeenwie buitiaratsubas Algorithms . hihislrriptfiirquadratischeihatnisen Bereihnungsneihonfolgeivonsunonuelangenproduhte n ia b o u n DiagonalKfi Mii wey : m i i Lining nurfiirj > i behanntausitbung Laufseit : -0T€,§=i(j-D) É -01ns) Speicher :-O ( ni)","libVersion":"0.3.2","langs":""}