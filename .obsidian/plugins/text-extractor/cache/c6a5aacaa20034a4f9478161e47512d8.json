{"path":"sem1/DMath/UE/e/DMath-u01-e.pdf","text":"ETH Z ¨urich, D-INFK HS 2023, 22. September 2023 Prof. Ueli Maurer Giovanni Deligios Diskrete Mathematik Exercise 1 Exercise 1.5 gives bonus points, which can increase the ﬁnal grade. The solution to this exercise must be your own work. You may not share your solutions with anyone else. See also the note on dishonest behavior on the course website: https://crypto.ethz.ch/ teaching/DM23/. 1.1 The Punctured Chessboard (⋆) In the lecture (see also Example 1.1 in the lecture notes) we considered a k × k chessboard with one of the squares punctured. We also deﬁned the predicate P (k) to be equal 1 when- ever the following statement is true: No matter which of the squares is punctured, the remaining area of the chessboard (consisting of k2 − 1 squares) can be covered completely with (non-overlapping) L-shaped pieces of paper consisting of three squares. In this exercise we consider the proof by case distinction that P (7) = 1. a) What is the smallest number of cases one has to consider in the proof? (Consider symmetries of the chessboard.) b) Carry out the proof for two of the cases. 1.2 A False Proof (⋆ ⋆) Find the mistake in the following proof. Claim: 1 is the largest natural number. Proof: n is the largest natural number · =⇒ n2 ≤ n. · =⇒ n(n − 1) = n2 − n ≤ 0 · =⇒ 0 ≤ n ≤ 1 · =⇒ n = 1. 1.3 Interpreting Propositional Formulas in Natural Language Let A be the proposition “Mario forgot to pay his rent” and let B be the proposition “Mario is getting evicted”. a) (⋆) How would you interpret the following formulas? i) F1 = ¬B → ¬A ii) F2 = (A ∧ B) ∨ (¬A ∧ ¬B) b) (⋆) Using only the propositions A, B and logical operators, write down formulas corresponding to the following sentences: i) F3: “Mario neither forgot to pay his rent nor is he getting evicted.” ii) F4: “Mario either forgot to pay his rent or he is getting evicted, but not both.” c) (⋆ ⋆) For both formulas F3, F4, write down their negations both as sentences and formally as formulas. 1.4 Logical Equivalence via Function Tables a) (⋆) Compute the function table for the following formula: (B → C) → (¬(A → C) ∧ ¬(A ∨ B) ). b) (⋆ ⋆) Give another formula that is equivalent to the formula from Subtask a), but in which each of the propositional symbols appears at most once. 1.5 One More Logical Operator (8 Points) We deﬁne the binary logical operator ♥ as follows: A B A ♥ B 0 0 0 0 1 1 1 0 1 1 1 0 a) (⋆) Prove that (A ♥ B) ♥ C ≡ A ♥ (B ♥ C) by computing and comparing function tables of the left-hand-side and the right- hand-side formulas. b) (⋆) Prove or disprove that ¬(A ♥ B) ≡ ¬A ∧ ¬B by computing and comparing the function tables of the left-hand-side and the right- hand-side formulas. c) (⋆ ⋆) Let F be a formula with the following function table: A B C F 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 0 Show a formula G containing only the logical operator ♥ and in which the propo- sitional symbols A, B, and C all appear at least once, and such that G ≡ F . No justiﬁcation is required. 1.6 Simplifying a Formula (⋆) Consider the propositional formula F = ((¬A ∨ ¬B) ∧ ¬A ) ∧ ((¬B ∧ ¬A ) ∨ C). Give a formula G that is equivalent to F , but in which each atomic formula A, B, and C appears at most once. Prove that F ≡ G by providing a sequence of equivalence transfor- mations with at most 6 steps. Expectation. Your proof should be in the form of a sequence of steps, where each step consists of applying the deﬁnition of → (that is F → G ≡ ¬F ∨ G), one of the rules given in Lemma 2.1 of the lecture notes1, or one of the following rules: F ∧ ¬F ≡ ⊥, F ∧ ⊥ ≡ ⊥, F ∨ ⊥ ≡ F , F ∨ ¬F ≡ ⊤, F ∧ ⊤ ≡ F , and F ∨ ⊤ ≡ ⊤. For this exercise, associativity is to be applied as in Lemma 2.1 3). Each step of your proof should apply a single rule once and state which rule was applied. Due by 28. September 2023, 23:59. Exercise 1.5 will be graded. 1Lemma 2.1 states rules involving propositional symbols, but you may apply those rules at the level of formulas (see Section 2.3.5 of the lecture notes).","libVersion":"0.3.1","langs":""}