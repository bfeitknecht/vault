{"path":"sem2/AuW/PV/exams/AuW-FS20.pdf","text":"ETH Z¨urich Institute of Theoretical Computer Science Prof. Angelika Steger Prof. Emo Welzl Dr. Anders Martinsson Charlotte Knierim, Asier Mujika, Miloˇs Truji´c FS 2020 Algorithmen und Wahrscheinlichkeit Pr¨ufung Schlagen Sie die Klausur erst auf Anweisung der Aufsicht auf ! Kandidat/in: Name: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Vorname: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Stud.-Nr.: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Ich bezeuge mit meiner Unterschrift, dass ich die Pr¨ufung unter regul¨aren Bedingungen ablegen kann und dass ich die unten stehenden allgemeinen Bemerkungen gelesen und verstanden habe. Unterschrift: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Allgemeine Bemerkungen und Hinweise: • Diese Pr¨ufung besteht mit diesem Deckblatt aus 8 beidseitig bedruckten Aufgabenbl¨attern mit insgesamt 6 Aufgaben. Am Ende der Klausur ﬁnden Sie zwei leere Bl¨atter f¨ur Notizen. Ausserdem liegt eine Formelsamm- lung an Ihrem Platz. • Die Pr¨ufung dauert 90 Minuten. • Falls Sie w¨ahrend der Pr¨ufung in irgendeiner Weise gest¨ort oder beeintr¨achtigt werden, melden Sie dies sofort der Aufsichtsperson. Sp¨atere Klagen werden nicht akzeptiert. • Schreiben Sie nicht mit Bleistift und nicht mit roter oder gr¨uner Farbe. • Alle Mobiltelefone und sonstigen elektronischen Ger¨ate m¨ussen vollst¨andig ausgeschaltet sein und im Gep¨ack verstaut werden. • Pro Aufgabe ist h¨ochstens eine g¨ultige Version eines L¨osungsversuchs zul¨assig. Streichen Sie ung¨ultige L¨osungsversuche klar durch. • Abschreiben und sonstige Versuche des Betrugs f¨uhren zum sofortigem Ausschluss von der Pr¨ufung und k¨onnen rechtliche Folgen haben. • Wenn Sie zus¨atzliches Papier (kein eigenes!) verwenden, dann versehen Sie jedes Blatt mit Ihrem Namen. • Wenn Sie w¨ahrend der Pr¨ufung eine Frage stellen wollen, heben Sie bitte die Hand. Wir bringen Ihnen ein Blatt Papier, auf das Sie Ihre Frage schreiben, wir werden die Frage dann zentral beantworten und Ihnen die Antwort bringen. Bitte stellen Sie keine m¨undlichen Fragen. • Vergessen Sie nicht, dieses Deckblatt zu unterschreiben. • Sie d¨urfen Ihre L¨osungen auf Deutsch oder Englisch verfassen. Viel Erfolg! Aufgabe 1 (14 Punkte) 2 (8 Punkte) 3 (5 Punkte) 4 (7 Punkte) 5 (5 Punkte) 6 (5 Punkte) Σ (44 Punkte) Punkte 1. Korrektur 2. Korrektur Exercise 1 – Begr¨undung oder Gegenbeispiel Kreuzen Sie f¨ur jede der folgenden Aussagen an, ob sie wahr oder falsch ist und begr¨unden Sie Ihre Antwort. Falls die Aussage falsch ist, kann die Begr¨undung auch ein Gegenbeispiel sein. Beachten Sie: Erkl¨aren Sie Ihre Begr¨undungen/Gegenbeispiele genau. Punkte werden nur ver- geben, sofern die Antwort nicht nur richtig sondern auch klar und korrekt begr¨undet ist. (a) Sei G ein Graph mit n − 1 Kanten. Dann ist G ein Baum. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 points) (b) Sei G = (A ⊎ B, E) ein regul¨arer bipartiter Graph mit E ̸= ∅. Dann ist |A| = |B|. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 points) (c) Sei G ein Graph und e = {u, v} ∈ E(G) eine Br¨ucke in G. Dann gilt, f¨ur v, dass entweder deg(v) = 1 oder v ein Artikulationsknoten in G ist. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 points) (d) F¨ur jede (endliche) Punktemenge P im R2 mit |P | ≥ 3 und kleinstem umschliessenden Kreis C(P ) gibt es eine Teilmenge Q ⊆ P , sodass |Q| = 2 und C(Q) = C(P ). WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 points) (e) Seien X und Y zwei Zufallsvariablen mit E[X] = −3 E[Y ]. Dann gilt Var[X] = 9 Var[Y ]. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (3 points) (f) Gegeben ein Netzwerk N mit der Eigenschaft, dass alle Kapazit¨aten gerade (und ganzzahlig) sind. Dann gibt es einen maximalen Fluss in N , bei dem der Flusswert f¨ur jede Kante gerade ist. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (3 points) Exercise 2 – Vermischtes Bitte denken Sie daran, in den folgenden Aufgaben jeden Ihrer Schritte zu begr¨unden. (a) Wir betrachten das metrische Travelling Salesman Problem auf der Knotenmenge {a, b, c, d, e} mit einer unbekannten L¨angenfunktion ℓ. Nehmen Sie an, dass der minimale Spannbaum der Knotenmenge bez¨uglich ℓ durch die Kanten T = {{a, b}, {b, c}, {c, d}, {c, e}} gebildet wird. Mithilfe dieser Information, konstruieren Sie eine 2-Approximation f¨ur die L¨osung des Travel- ling Salesman Problems. Beweisen Sie auch, dass Ihre L¨osung tats¨achlich eine 2-Approximation ist. (4 points) Hinweis: Bitte f¨uhren Sie die Analyse durch und verweisen Sie nicht nur auf das Skript. (b) Die folgende Abbildung zeigt einen (nicht maximalen) Fluss in einem Netzwerk. st3/41/14/44/42/23/5 F¨uhren Sie eine Iteration des Ford-Fulkersson Algorithmus in diesem Netzwerk aus. Das be- deutet, konstruieren Sie das Restnetzwerk, ﬁnden Sie einen augmentierenden Pfad und geben Sie den resultierenden Fluss an. (4 points) Restnetzwerk: st Augmentierender Pfad: st Resultierender Fluss: st Korrekturen: (die folgenden beiden Graphen k¨onnen Sie verwenden, wenn Sie sich oben vertan haben; streichen Sie in diesem Fall die fehlerhafte Abbildungen oben durch und geben Sie im Folgenden an welcher Graph dargestellt wird; bei weiteren Korrekturen, zeichnen Sie den Graph bitte selbst auf ein Zusatzblatt) stst Exercise 3 – Obere Schranken Wir werfen eine faire M¨unze n ≥ 1 mal. Sei X die Anzahl der W¨urfe bei denen die M¨unze ‘Kopf’ zeigt. Geben Sie m¨oglichst gute obere Schranken f¨ur Pr[X ≥ 0.75 n] an. (a) Mithilfe der Ungleichung von Markov. (1 points) (b) Mithilfe der Ungleichung von Chebychev. (2 points) (c) Mithilfe der Chernoﬀ Schranken. (2 points) Exercise 4 – Target-Shooting In dieser Aufgabe besch¨aftigen wir uns mit dem in der Vorlesung kennengelernten Target-Shooting Algorithmus. Wir betrachten zwei Mengen U und S mit S ⊆ U . Wir nehmen an, dass wir die Menge U genau kennen. Insbesondere wissen wir wie viele Elemente in U enthalten sind und wir k¨onnen (mithilfe der Funktion random Element(U )) ein zuf¨alliges Element aus U ausw¨ahlen. F¨ur ein gegebenes Element u ∈ U k¨onnen wir testen ob u ∈ S (mithilfe der funktion Element of(x,S)). Wir wollen nun den Target Shooting Algorithmus nutzen, um die Gr¨osse von S zu approximieren. Unser Algorithmus nimmt als Eingabe eine nat¨urliche Zahl N (die Anzahl an Stichproben die wir f¨ur die Berechnung der Approximation verwenden) und soll eine reelle Zahl X ausgeben, welche die Gr¨osse von S approximiert. Insbesondere wollen wir, dass E[X] = |S|. (a) F¨ullen Sie die L¨ucken “. . . . . . . . . . . . . . ” in unten stehendem Algorithmus so aus, dass er obiges Problem l¨ost. (4 points) function random Element(U ): w¨ahle u ∈ U zuf¨allig gleichverteilt aus allen Elementen in U return u function Element of(x,S): if x ∈ S return true else return f alse function Approximate S(N ): count := 0 for i = 1 to N : Let x=. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . if . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . count := count + 1 return . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . (b) Sei X die Ausgabe aus Ihrem Algorithmus. Zeigen Sie, dass E[X] = |S| gilt. (3 points) Exercise 5 – F¨arbungen von Graphen In der Vorlesung haben Sie gesehen, dass man jeden Graphen mit ∆+1 Farben f¨arben kann, wobei ∆ der Maximalgrad von G ist. In dieser Aufgabe wollen wir diese Schranke f¨ur einige Graphen verbessern. Sei G = (V, E) ein Graph, zeigen Sie die folgende Aussage: Wenn es eine Menge K ⊆ V gibt, sodass f¨ur alle v ∈ K gilt, dass deg(v) ≤ k und f¨ur alle anderen Knoten w ∈ V \\K gilt deg(w, V \\K) ≤ k, wobei deg(w, V \\K) die Anzahl der Kanten vom Knoten w in die Menge V \\ K ist, dann kann man G mit k + 1 Farben f¨arben. (5 points) Exercise 6 – Graph Trennung Sei G = (V, E) ein Graph mit n ≥ 3 Knoten. Betrachten Sie folgendes Zufallsexperiment: F¨ur jede Kante in G werfen wir eine faire M¨unze. Falls die M¨unze ‘Kopf’ zeigt, f¨arben wir die Kante rot, ansonsten f¨arben wir die Kante blau. Wir sagen ein Knoten v ∈ V ist gl¨ucklich, falls er wenigstens eine rote und eine blaue inzidente Kante hat. Wir sagen ein Knoten v ∈ V ist hocherfreut, falls wenigstens ein Drittel der inzidenten Kanten rot sind und wenigstens ein Drittel der inzidenten Kanten blau sind. (a) Angenommen G hat Minimalgrad δ(G) ≥ log2(n) + 2. Zeigen Sie, dass mit Wahrscheinlichkeit wenigstens 1 2 alle Knoten gl¨ucklich sind. (2 points) (b) Nehmen Sie nun an, dass δ(G) ≥ 1000 · ln(n). Zeigen Sie, dass mit Wahrscheinlichkeit 1 − o(1), wenn n → ∞, alle Knoten hocherfreut sind. (3 points) Hinweis: Diese Aufgabe ist schwieriger als die vorherigen, falls Sie nicht weiterkommen, l¨osen Sie zuerst die anderen Aufgaben. Zus¨atzlicher Platz f¨ur Notizen. Wenn Sie hier L¨osungen aufschreiben, die gewertet werden sollen, dann merken Sie das unbedingt bei der jeweiligen Aufgabe an. Bitte drehen Sie die Klausur noch nicht um Warten Sie bis wir den Beginn der Klausur ansagen!","libVersion":"0.3.2","langs":""}