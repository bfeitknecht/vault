{"path":"sem3/A&D/VRL/extra/lecture-notes/A&D-notes-v07.pdf","text":"D.YNAMISCHEPROGRA-MMIERUNGCD-PJSotu.mn , rhrvariantensimdhilfseich bein Beatrix vo n Oaten- DP : Selbe Idle fir Beseihnen vo n Weston : Return Glides verwamttae Inelastic Vorbweitung:Memoiratim1Botkm-Up-Besahnu Beispdt : Fibonacci - Zahler Fi - Fi 1 , Fn = Fn- ne Fn - z fin n ≥ 3 Fib Cn) if n ≤ 2 : f- ← 1 else f-← Fib Cn - 1) + Fib Cn - 2) return t Laufseit : TG),T (2) ≥ ofKonstantin ) ≥ Te n - 1) + Ten -2¥ esponlntiell : extreme team ≥ T In - 1) + T Cn - 2) Indult ion T ( n ) ≥ c. Fn%lrhY2 c. § . 1.5 \" ≥ Ill . 5) Warm so teens ? \" top-down \" F \" mekrfachberechnet Fg 7 1=7 ! Fs / \\ : ! ! ! ! Liruny Merton ! 1 Memorization , benutreein Array memo [ 1. - n ]) Fibmln ) if schongespoichht : return memo [ n ] if n ≤ 2 : fa t else f- ← Fib Mln - 1) + Fibmcn - 2) memo [ ri f f return t top-down irehuniv Laulpeit : 0cm ) % 1=8 ¥ ' schon bereihnet F! . . . → bein waters itlrteigen Lirung bottom-up literatin ) Fib - bottom _ upln ) FU ] ← 1 f- [ 23<-1 for i-3 .in : Flir ]← F[ i -1 ] -11=[0-2] return Fln ] Laulpeit :O ( n ) Vor - /Wachteilevon bottom - up - Programmer + ofteinfruhoilode + vermeirbtlterwaltangsahpvandfiirdenlomputer : \" call stalk \" finton - down - Programme Esetnemfall : sehrgronetahwmiomtiefe → \" state overflow \" + Besechnungsreihenfolge ist explicit charm auchnegativseim, too much info - gedanhhihmanchmalsompliriwtorah top-down - Behunin - Rehuniont Memorization stellt sicker , dannurnotucndigllkrteberechnet werden kemideeuonDP-Defim.aeTeilproblem ✓ him allgemeingieltiges Resent, iihnhikwiemrarianl.cm Ulan ! - Lire Teilproblem rehumiv odor iterator Probbm 1 . Maximum fubamay him Teilproblem : Randmax Rj = M¥j Sij ( Sij = ait . _ . + a ;)- Prehension : Rj = Max { aj , aj + Rj - n } Auslander Lining : S * = max { Rn, . . ., Rn , 0 } Problems: Jump Game Input ' Array A [ 1 . . . n ] vo n positiron gasmen Zahler spiel : - State in 1 . - Von Position i diirfn win tricksters Ali ] nach ro m e springer( auf eine beliebige Position zwischen i -11 , . . . ii. + A lip Germont s minimale Zahl an Springer , ummm erreichm Beirut : IIIEII.FI#=-E7inrtpminge Antwon : 4 Veruuh 1 : Teilproblem : S[ it := Minutestrahl an tpriingeniemiueerreichen Behavior : S[ i ] = min { 1 + SENT 1 ≤ j < i and j+A[j ] ≥ i }- 2. B. i #ÉÑFʰᵗʰᵈʰ°% ᵗMM Sonnen ivonj Ssi ] 3É Ñ ʰ ᵗ ʰ ᵗ ⁿ ᵈ ʰ au s erreichen Bottom-up code : S[1 ] ← 0 for i-2 .in S [ i ] ← • ← Zahl , die garantiert grosser ist ab das hydra's hier gehln ouch 5[ i ] in odor S[ i ] : = i ' for j=1 . . . i -1 if j +A [j ] ≥ i :S [ i ] ← min { sci ] , 1+5 [j ] } returns [ n ] Laufuit :-O/É.li - D) = -0cm GEH T ES BESSER ? Vemucht : Teilproblem : Mlk ] : = maximabr Mdm , den wir ink Springer lneilhln Rekursion : Mlk ] = Max { i. +A [it I 1 ≤ i ≤ MEK - 1 ] } k← 0 , M [ 03<-1 while M [ K ] < n : K ← K -11 MEK ] ← Max { it A [ i ] 11 ≤ i ≤ M [ K - 1 ] } return K Wie immer : wont - case - Lauheitgemeint← Laufseit : Fin A steigt MEK] immer nur um 1 → worst - case Laufseit it mindestem.IE?ci-n)--Sln4 Geht es besser ? ]A ' seller Teilproblem , verbenertethkunion : ME K] = Max { it A- [ i ] I MEK -2 ]< i. ≤ MEK - I] } MEK -2 ] M[k#M[n] braucht ≤ K-2 lmunhtgenan Der letzte sprung Springe k-YM.MN starlet in Berwick, wo m a n genank-1 Spmingetraucht . somtseimemanmitk-0.MEOJ-1.ME - 1) ← 0 ≤ K - tspmtngenhihhlr while M[k ]< n : kc-ktIMIKJ-m.ae/Ei-AEi31MEk-2] - i ≤ MEK -1 ] } return K - hat M[ K-1 ] - MEK - 2) Element lgesamtlaufoitfiirberechnungalbrmax :O In ) → Laufaitocn) ( dourestlithe Berecknungenauckinocn) ) geht es besser ? NEIN : Fin Tnput A- = Meissen win umjdenccintraganschauen : itngenommen, wir haben alle Fekkraunerdemi - tonangeschaut ( i-tn -1.n l chtamsichndierichtigeitntwotue gdrn . → wont - case - Laafseit -0in) PWvlem3.Liingstegemeimamekilfolge-LC.TT 1 G E R S E- M E- IT E- ¥ ZIÉ GE V Ee R B E- 5- SEEN Teilfolge : - Reihonfolge man stimmen - Lilian ok Alignment : Tz-E%]¥=¥ Allgemeine : Wie long ist die LG T von All . . . n ] und B[ 1 . . - m ] ? 1. Veruuh : Teilproblom: LG T vo n All . - i ] and Bai] → Meissen LG T fits it 1 au s LG T vo n i berechnen . Beispiel : La t (Tz¥GEᵗ = 2 it 4 - - Was ist LG T (Tz¥¥g ? 0--5 - - Unbar : Zwrvtntwortmiinten wir Schon die \" richtige \" LG T fin i. = 4 Sennen . - information nicht nicht → Meissen uns alle Endanger vo n LG T merlon 2. Verruca Teilproblem Ll i,j ) : - - Linge LG T von All . - i ] ,B[1 . :p Prehension : o_0 oderj --0 Lliij )=0 i,j > 0 : 1. itliiglichheit : Benutasouohl Ali ]ahauchB[j ] geht nur, falls Ali ] - - Bei ] 2. ttogleihheit : Benito Ali ] nicht lgiiberlappensich , ist aber 3. illiiglichhat : Benatar B[jsnicht nicht schlimm genanaeiibhleguny : Also : Falls A- [ i ]=B[j ] , damn iibwflivsig Lc i,j)=max{ 1+1-6-1,;D , !! .it?ij),L.f.i,?j-ii)3SomtLCi,j)--maxELCi-1j),LCi,j-D } Berechnuny bottom-up durch Fillon der DP-Tabdk_ : LÉÉÉ Reihenfolge : z.B.ailenweisevonobennachuntenj.co- G- 0 0 000 ^ 2- 00 0000 2 1 00%-111 LG T finder wir durch Riirhverfolgen : 3 E O 04-1-22 \" Wie kamdilser West aistande ? \" \" G 00 1^222 JailerDiagonalschmttgibt einen Buchstaben 5 Elo 01 2^3<-03 derLGIT ↑ Lining harm vehement werden , intern ✗ win unsimmernurdieletsk-2-e.de Morlan → 0cm ) Laufuitocmn ) ftp.vherocmn-rtltemativ : 0cm ) → Speicher: 01m in { nim }) Bemerhungen ( optional) : Geht es (vid ) loner ? - Falls einer der strings sehr Sure , man :]A , in Zeit 0 In + m7 . ( Annahme : fixes Alphabet) - Fin n = m Loder n=⊖lmDi jahrohntelang often ✗ damah ETH - Warde 201 5 vo n Bringman und HommeMan n geloit . - Antwort : NEIN , es gilt fin Seine > O einen O Cri - Y - Algorithms 5 untergewinenvtnnahmen - Kleine llerbeneruny sink migbih : Es gilt einen 0 ( Heyn ) - Algorithms pwolem4.Editierdistanslpgebenwwei7.cichenfolgen All . - in ] , B[ t.im ] Wollen Ain Bumwanddnmit Editienperationen : - Zeicheneinfiigen TI G E R - 2-lichen birchen ¥ \" z 1 GER - Zeidan condemn linÉ M I I EGE R Lik Z IE GE - lgeruht : minimal Amahl Operational Das ist nicht dandle Problem wie LG T, -13 . LG T : LC FER K EL, GEIF ER ) =3 : FER Editierdistanr : EDCFERKEL.GE/FER)--4:cindueF-sG,R-I,ksF,L-R Teilprohlemi.EDU/j):--EditierdistamvonAU...i3zuBE1...j ] Prehension . Was paniertam Endemit A- [ i ] in optimatesLoving ? Fa ll 1 : Wind irgendrranngeloicht . → Kamman auchGleich Machen . Dann ist ED Li,j)= II EDC i -1,j ) link Ali ] Fall 2. Wird am Endeaufetwasin BU . . -j - is gematcht . B[jswirdirgendwanneingefw-gtngla.tk Machen Dann ED Ciip-IIED.ci, - 1) fiigeB[j] ein Fall } : Wisdom Ende auf B[j ] gematcht . Damn EDC.ie, - g) = { ED ti -45 \" i falls Ali]=B[j ] 1-1 ED Ci -1, j - 1) , falls Ali ]≠B[j ] Tandem Ali ] in B. [ j ] Also : A [ i ] birchen i,j > 0 : EDC i,j) = min { ED Li -1 , j ) +1¥ BE;] einfiigen ED Ci,j - 1) + IF ED ( i -1 , j - 1) + { falls Ali ] - - BE;] ] falls 1- [ i ] -1-13 [ j ] A [ i ] dunk BEJ ] endian EDC i, 0) = i EDCO,j)= j Implementirony : Fille wieder DP - Tabdkaus E- 0 1 23 45 Reihlnflge : z.B.zeiknweisecvonobennaehuntnIED.li#T1GERj--0 - 01 2 3 45 ^ 2- 1% 2 3 45 Operation : wieder durch Riilhverfolgen 2 2,01 23 4 3 - 3 É2 2 23 T I G E R ① T I G E←↓°k 4 6 44 3^2 3 3 Z I E GE lÉ 2- I ELÉE 5 E 5 54 É2←É③↑ → Tzl,G¥q : \" Loving Laafseit : 01m in) → TI Z I E Speicher : 0cm .nl , geht auch in 01min {mind ②→ T I |EÉ° \" fiigetiein Z I E → If , #\" → tz-a.nu?-z 1- → -2 Geht es besser ! Bemerhungenzn LG T ñbertragonsichauf ED .","libVersion":"0.5.0","langs":""}