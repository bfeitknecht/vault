{"path":"sem4/CN/UE/s/CN-u03-s.pdf","text":"Exercise 3: Transport principles Question 1: Bandwidth delay product If Alice and Bob are connected via a 100 Mbps connection, which has a constant 5 ms RTT, what would be the ideal congestion window size W in kilobytes? Solution: The ideal congestion window size is the Bandwidth delay product. W = bandwidth · delay = 100Mbps · 5ms = 62.5kilobytes Question 2: Sliding window 1. A sliding window is used in a transport protocol to enable high throughput. Part of such a transport protocol is to negotiate the sender window size and receiver window size. Why is it a desirable property that sender window <= receiver window? 2. Consider the sliding window shown. This sliding window uses packets as its smallest, indivisible unit. The sliding window is maintained using two integer variables: SND.UNA, which is the lowest packet sequence number which is not acknowledged, and SND.NXT, which is the lowest packet sequence number that has not yet been sent out. Answer the following questions (without accounting for sequence number wrap-around) A sender sliding window. Operating Systems & Networks (252-0062-00L); Spring Semester 2019, Question 3c 1. What is the current window size (in other words, how many data packets are outstanding in the network)? 1. SND.NXT 2. SND.UNA 3. SND.NXT − SND.UNA 4. SND.UNA − SND.NXT 2. Let MAXWND be the maximum window size. Which invariant must hold? 1. SND.NXT ≤ SND.UNA + MAXWND 2. SND.NXT ≥ SND.UNA + MAXWND 3. SND.NXT ≤ MAXWND 4. SND.NXT ≥ MAXWND 1 Solution: 1. Efficiency. It is important for the sender to know the maximum amount of data the receiver can buffer: it is pointless for the sender to send more data than the receiver can receive as it would only overwhelm the receiver (which would just drop packets) 2. Answer to the Questions 1. SND.NXT − SND.UNA. That corresponds to all packets between the pointer SND.NXT and SND.UNA 2. SND.NXT ≤ SND.UNA + MAXWND In the previous subquestion we determined what current window size is. Because current window size is always ≤ than the maximum window size. It must hold true that SND.NXT ≤ SND.UNA + MAXWND Question 3: AIMD In this exercise, there are two machines, each having one flow going over the same link. Both machines use additive increase multiplicative decrease (AIMD) to control their rates. Assume that the decreasing line (negative derivative) intersects the axes at a value for throughput that fully utilizes the link with the respective machine. 1. Label the two perpendicular lines that are drawn inside the graph (not the axes). 2. Point A shows the current bandwidth of machines 1 and 2. Which machine is using more bandwidth, and is the link saturated? 3. Following AIMD, draw the vector resulting from point A until the state of the algorithm changes. Do this one more time. Explain your reasoning. 4. Will AIMD convergence to fair sharing in this case? Fair sharing 2 Solution: Fair sharing solution 1. The decreasing line (negative derivative) is the line where the sum of the throughputs (x+y) is the capacity of the link. Intuitively this is a “efficiency line” meaning that all points on this line describe a scenario where the two machines fully utilize the link. The increasing line (positive derivative) going through the origin is a “fairness line” which describe a scenario where the machines have equal bandwidth. 2. Machine 1 is using more bandwidth. The link is not saturated since the sum of the vector components is smaller than R. 3. See figure. Reasoning: Both machines increase their window size by 1 MSS. Therefore the first vector is perpendicular to the “efficiency line”. Eventually the point is reached where the network is congested (congestion occurs). After that the window size of both machines are cut in half. This is equivalent to halving the length of the corresponding vector. The resulting vector should therefore point halfway between point B and the origin. 3 4. Yes, AIMD will lead to an oscillation over the fairness line perpendicular to the efficiency line. Question 4:MIAD In this exercise, there are two machines, each having one flow going over the same link. Both machines use multiplitive increase additive decrease (MIAD) to control their rates. 1. Following MIAD, draw the vector resulting from point A until the state of the algorithm changes. Do this one more time. Explain your reasoning. 2. Will MIAD converge to fair sharing in this case? What will happen? 3. If you compare the result of AIMD against MIAD, which one would be better in a real life application Unfair sharing Solution 4 Unfair sharing solution 1. See figure. Reasoning: Both machines multiply their window size by a constant factor. This is equivalent to multipling the length of the corresponding vector by a constant factor. Eventually the point is reached where the network is congested (congestion occurs). After that the window size of both machines are decreased by 1 MMS. Therefore this vector is perpendicular to the “efficiency line”. 2. No, MIAD converges to a totally unfair allocation, favoring the flow with a greater rate at the beginning 3. In a real-life scenario, one would prefare AIMD over MIAD. MIAD would lead to an unfair allocation where the whole bandwidth gets allocated to one machine 5 Question 5: Congestion signals (Previous Exam Question [1]) List three signals that warn about congestion in the network, and mention one advantage and one disadvantage of using each signal. [1] Operating Systems & Networks (252-0062-00L); Spring Semester 2016 (FS16). Question 9a. Solution: 1. Packet loss. Advantage: can be detected easily (doesn’t require in-network feature support) by using timers. Disadvantage: feedback takes at least one RTT to arrive at sender. Disadvantage: only considers binary feedback (i.e., packet either arrives at sender or not). Disadvantage: loss can also be caused by other factors (i.e. cosmic radiation in a satellite link), careful parametrization is needed. 2. Packet latency. Advantage: can be detected easily (doesn’t require in- network feature support). Advantage: relatively quick feedback of a continuous signal. Disadvantage: many factors in the network can affect latency, not only congestion, careful parametrization is needed. 3. In-network marking (i.e. ECN - Explicit Congestion Notification). Indicate congestion through setting a bit in packet. Advantage: early signal of congestion. Disadvantage: requires support in the network by i.e. the routers/switches. Question 6: Reliable transport protocol 1. Name five undesirable effects the network can have on individual pack- ets and/or a stream of packets when attempting to deliver them to the destination. 2. What are the four goals of reliable transfer? Describe them shortly. 3. What mechanism is used to detect corrupted packets in TCP/UDP? Shortly explain. 4. You already know that packets can get duplicated by the network i.e., multiple identical packets can arrive at the receiver. How would a reliable transport protocol detect duplicated packets? Solution: 1. Packets can get lost, corrupted, reordered, delayed, or duplicated 2. • Correctness: ensure data is delivered, in order, and untouched • Timeliness: minimize time until data is transferred • Efficiency: optimal use of bandwidth • Fairness: play well with concurrent communications 6 3. Checksums. Each packet contains a checksum of its contents in its header, the receiver can then calculate the checksum itself and compare it to the stored checksum. If they don’t match, the packet was corrupted 4. Sequence numbers. Each packet (or byte) is numbered. A receiver will only pass packets (or specific bytes within them) to the application, if it hasn’t already accepted the corresponding sequence numbers before. If the sequence numbers were already accepted, the packet will be dropped. Question 7: Timeouts 1. In reliable transmission, what is the effect of setting a too short timeout, and conversely, what is the effect of setting a too long timeout? 2. RTT is a higher-level network property that is mainly used to decide what the re-transmission timeout should be set to. Which four network delays determine the RTT? 3. Of these four network delays, what changes in the network can you do (if any) to reduce the RTT? 4. When a timeout is triggered in the sender, can the sender be sure that the receiver has really not received the packet? If yes, how? Solution: 1. Too short timeouts will lead to unnecessary transmissions; net- work capac- ity is wasted. Moreover, if a fixed action is attached to a timeout occurring (i.e. reducing rate), the transmission will also slow down unnecessarily. Too long timeouts will lead to slow transmission because it will take a long time before the sender discovers a packet has been dropped. The receiver will not accept and forward packets to the application layer during this time, as it forces an in-order stream of data. 2. • Transmission delay: time it takes to send a packet at the link capacity • Propagation delay: time it takes for a bit to go over the link • Processing delay: time it takes for the switch to process the packet • Queuing delay: time a packet spends in the queue 3. • Transmission delay: increase the link capacity • Propagation delay: if possible, use data replication to shorten the client-server distance. Improving routing or physical transmission media also helps. • Processing delay: processing delays are typically negligible in com- parison to other delays, and there is little room for improvement here. • Queuing delay: better load balancing (i.e. via routing), reduce queue size 7 4. It cannot be sure. Triggered timeouts are only an indicator, but not proof of packet loss. It could just as well be that the ACK got lost or that the ACK would arrive just after we have resent the packet. In these cases the sender will resend the packet even though it was already received, as seen above this is handled in the receiver with sequence numbers. Question 8: Go-Back-N You can find a nice animation of Go-Back-N and Selective Repeat here. For each of the following statements indicate for each if it is true or false. 1. Go-Back-N acknowledges only the last in-order packet it has received. 2. Go-Back-N senders maintain a timer for each packet sent out. 3. If a Go-Back-N receiver receives an out-of-order packet, it is possible to move the sliding receiver window along. Solution: 1. True 2. False 3. False 8","libVersion":"0.5.0","langs":""}