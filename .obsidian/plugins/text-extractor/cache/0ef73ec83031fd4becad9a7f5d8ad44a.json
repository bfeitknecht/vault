{"path":"sem2/DDCA/UE/e/slides/DDCA-LAB08b-snake-faster.pdf","text":"Digital Design & Computer Arch. Lab 8.2 Supplement: Full System Integration (Presentation by Aaron Zeller) Frank K. Gürkaynak Seyyedmohammad Sadrosadati ETH Zürich Spring 2024 [21. May 2024] Lab 8 Overview ◼ You will build a whole single-cycle processor and write assembly code that runs on the FPGA board. ◼ You will learn how a processor is built. ◼ Learn how the processor communicates with the outside world. ◼ Implement the MIPS processor and demonstrate a simple “snake” program on the FPGA starter kit. 2 Lab 8 Sessions ◼ Session I: The Crawling Snake ◼ Session II: Speed Up the Snake 3 Lab 8 Session II: Speed Up the Snake ◼ In lab 8.1 you have made changes to the code template to produce a crawling snake on the 7- segment display. ◼ Lab 8.2 is similar and again requires careful reading of the lab manual. 4 Lab 8 Session I: The Crawling Snake ◼ Let us first see some of the modifications made in lab 8.1. ◼ IsMemWrite tells us if an instructions writes to memory or an I / O operation. ◼ IsMemWrite hence is 1 if an operation is a memory write operation and not an I / O operation. 5 Lab 8 Session I: The Crawling Snake ◼ IsMemWrite hence is 1 if an operation is a memory write operation and not an I / O operation. ◼ This is because there are I / O operations that also write to memory. 6 Lab 8 Session I: The Crawling Snake ◼ IsMemWrite hence is 1 if an operation is a memory write operation and not an I / O operation. ◼ This is because there are I / O operations that also write to memory. 7 Lab 8 Session II: Speed Up the Snake ◼ Extend the top-level hierarchy: ❑ Modify the I/O controller to accept the inputs. ◼ Understand the provided assembly program and modify your assembly code to accept inputs. ❑ The snake should crawl at different speeds for different inputs. ❑ The inputs will be controlled by switches on the FPGA board. ◼ Optionally, you have two challenge tasks to complete. ❑ Change the direction of the snake. ❑ Change the pattern of the snake. 8 Lab 8 Session II: Speed Up the Snake ◼ You should proceed similarly to lab 8.1 here. ◼ The ALU is responsible for arithmetic, logic and memory address computation. ❑ The opcode decides then what the result represents. 9 Lab 8 Session II: Speed Up the Snake ◼ You should proceed similarly to lab 8.1 here. 10 Which 4 bits here are important? Remember that 4 bits in binary are one bit in hexadecimal Lab 8 Session II: Summary of the Flow 11 Lab 8 Session II: Extending I/O 12 Lab 8 Session II: Modifying the Assembly 13 Last Words ◼ You will build a whole single-cycle processor and write assembly code that runs on the FPGA board. ◼ You will learn how a processor is built. ◼ Learn how the processor communicates with the outside world. ◼ Implement the MIPS processor and demonstrate a simple “snake” program on the FPGA starter kit. ◼ You will have some questions to answer in the report. 14 Report Deadline 15 [07. June 2024 23:59] Digital Design & Computer Arch. Lab 8.2 Supplement: Full System Integration Frank K. Gürkaynak Seyyedmohammad Sadrosadati ETH Zürich Spring 2024 [21. May 2024]","libVersion":"0.3.1","langs":""}