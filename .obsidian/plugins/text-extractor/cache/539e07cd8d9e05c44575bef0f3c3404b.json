{"path":"sem4/DMDB/VRL/extra/slides/DAnalytics-II.pdf","text":"Gustavo Alonso, Vasilis Mageirakos alonso@inf.ethz.ch Data Modelling & Databases Lecture 12: Analytics II (K- Means and Near Neighbor Search) Interactive SQL Session May 2nd ‘25 after Easter - Bring your laptop Overview ▪ Clustering ▪ Classification Clustering • In general a grouping of objects such that the objects in a group (cluster) are similar (or related) to one another and different from (or unrelated to) the objects in other groups Inter-cluster distances are maximized Intra-cluster distances are minimized Clustering • Notion of a Cluster can be Ambiguous How many clusters? Four ClustersTwo Clusters Six Clusters Clustering Tid Refund Marital Status Taxable Income 1 Yes Single 125K 2 No Married 100K 3 No Single 70K 4 Yes Married 120K 5 No Divorced 95K 6 No Married 60K 7 Yes Divorced 220K 8 No Single 85K 9 No Married 75K 10 No Single 90K 10 Each row corresponds to one point in space. By clustering these points together we are forming clusters of entities stored in a DB. Clustering ▪ A clustering is a set of clusters ▪ Important distinction between hierarchical and partitional sets of clusters ▪ Partitional Clustering ➢ A division of data objects into subsets (clusters) such that each data object is in exactly one subset ▪ Hierarchical clustering ➢ A set of nested clusters organized as a hierarchical tree Clustering ▪ Partitional Clustering Original Points A Partitional Clustering Clustering ▪ Hierarchical Clustering p4 p1 p3 p2 p4 p1 p3 p2 p4p1 p2 p3 p4p1 p2 p3 Traditional Hierarchical Clustering Non-traditional Hierarchical Clustering Non-traditional Dendrogram Traditional Dendrogram Types of Clusters: Well-Separated ▪ Well-Separated Clusters: ➢ A cluster is a set of points such that any point in a cluster is closer (or more similar) to every other point in the cluster than to any point not in the cluster. 3 well-separated clusters Types of Clusters: Center-Based ▪ Center-based ➢ A cluster is a set of objects such that an object in a cluster is closer (more similar) to the “center” of a cluster, than to the center of any other cluster ➢ The center of a cluster is often a centroid, the minimizer of distances from all the points in the cluster, or a medoid, the most “representative” point of a cluster 4 center-based clusters Types of Clusters: Contiguity-Based ▪ Contiguous Cluster (Nearest neighbor or Transitive) ➢ A cluster is a set of points such that a point in a cluster is closer (or more similar) to one or more other points in the cluster than to any point not in the cluster. 8 contiguous clusters Types of Clusters: Density-Based ▪ Density-based ➢ A cluster is a dense region of points, which is separated by low-density regions, from other regions of high density. ➢ Used when the clusters are irregular or intertwined, and when noise and outliers are present. 6 density-based clusters Types of Clusters: Conceptual Clusters ▪ Shared Property or Conceptual Clusters ➢ Finds clusters that share some common property or represent a particular concept. 2 Overlapping Circles K-means ▪ Partitional clustering approach ▪ Each cluster is associated with a centroid (center point) ▪ Each point is assigned to the cluster with the closest centroid ▪ Number of clusters, K, must be specified ▪ The objective is to minimize the sum of distances of the points to their respective centroid K-means • Most common definition is with Euclidean distance, minimizing the Sum of Squares Error (SSE) function ➢ Sometimes K-means is defined like that ▪ Problem: Given a set X of n points in a d-dimensional space and an integer K group the points into K clusters C= {C1, C2,…,Ck} such that 𝐶𝑜𝑠𝑡 𝐶 = ෍ 𝑖=1 𝑘 ෍ 𝑥∈𝐶𝑖 𝑥 − 𝑐𝑖 2 is minimized, where ci is the mean of the points in cluster Ci K-means • NP-hard if the dimensionality of the data is at least 2 (d>=2) ➢ Finding the best solution in polynomial time is infeasible • For d=1 the problem is solvable in polynomial time • A simple iterative algorithm works quite well in practice K-means ▪ Also known as Lloyd’s algorithm. ▪ K-means is sometimes synonymous with this algorithm K-means Source: https://www.youtube.com/watch?v=2R9cZCMWwcw K-means (run #1) -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 1 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 2 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 3 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 4 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 5 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 6 K-means (run #2) -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 1 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 2 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 3 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 4 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 0 0.5 1 1.5 2 2.5 3 xy Iteration 5 K-means ▪ Dealing with Initialization ➢ Do multiple runs with different initialization seeds and select the clustering with the smallest error [SLOW@scale] ➢ Select original set of points by methods other than random . E.g., pick the most distant (from each other) points as cluster centers (K-means++ algorithm) [FASTER@scale] K-means ▪ The centroid depends on the distance function ➢ The minimizer for the distance function ▪ ‘Closeness’ is measured by Euclidean distance (Sum of Squared Error), cosine similarity, correlation, etc. ▪ Centroid: ➢ The mean of the points in the cluster for SSE, and cosine similarity ➢ The median for Manhattan distance. ▪ Finding the centroid is not always easy ➢ It can be an NP-hard problem for some distance functions K-means ▪ K-means will converge for common similarity measures mentioned above. ➢ Most of the convergence happens in the first few iterations. ➢ Often the stopping condition is changed to ‘Until relatively few points change clusters’ ▪ Complexity is O( n * K * I * d ) ➢ n = number of points, K = number of clusters, I = number of iterations, d = dimensionality ▪ In general, a fast and efficient algorithm K-means ▪ K-means has problems when clusters are of different ➢ Sizes ➢ Densities ➢ Non-globular shapes ▪ K-means has problems when the data contains outliers. K-means – Variable Size Clusters Original Points K-means (3 Clusters) K-means – Variable Density Clusters Original Points K-means (3 Clusters) K-means - Continuity Original Points K-means (2 Clusters) K-means Original Points K-means Clusters One solution is to use many clusters. Find parts of clusters, but need to put together. K-means Original Points K-means Clusters K-meansLots of research on optimizations Use lower and upper bounds plus triangle inequality to reduce the number of comparisons in every round Classification Classification Tid Refund Marital Status Taxable Income Cheat 1 Yes Single 125K No 2 No Married 100K No 3 No Single 70K No 4 Yes Married 120K No 5 No Divorced 95K Yes 6 No Married 60K No 7 Yes Divorced 220K No 8 No Single 85K Yes 9 No Married 75K No 10 No Single 90K Yes 10 Refund Marital Status Taxable Income Cheat No Married 80K ? 10 Tax-return data for year 2011 A new tax return for 2012 Is this a cheating tax return? An instance of the classification problem: learn a method for discriminating between records of different classes (cheaters vs non-cheaters) Classification ▪ Classification is the task of learning a target function f that maps attribute set x to one of the predefined class labels y Tid Refund Marital Status Taxable Income Cheat 1 Yes Single 125K No 2 No Married 100K No 3 No Single 70K No 4 Yes Married 120K No 5 No Divorced 95K Yes 6 No Married 60K No 7 Yes Divorced 220K No 8 No Single 85K Yes 9 No Married 75K No 10 No Single 90K Yes 10 One of the attributes is the class attribute In this case: Cheat Two class labels (or classes): Yes (1), No (0) Classification ▪ Predicting tumor cells as benign or malignant ▪ Classifying credit card transactions as legitimate or fraudulent ▪ Categorizing news stories as finance, weather, entertainment, sports, etc ▪ Identifying spam email, spam web pages, adult content ▪ Understanding if a web page has commercial intent or not Classification ▪ Training set consists of records with known class labels ▪ Training set is used to build a classification model ▪ A labeled test set of previously unseen data records is used to evaluate the quality of the model. ▪ The classification model is applied to new records with unknown class labels Apply Model Induction Deduction Learn Model Model Tid Attrib1 Attrib2 Attrib3 Class 1 Yes Large 125K No 2 No Medium 100K No 3 No Small 70K No 4 Yes Medium 120K No 5 No Large 95K Yes 6 No Medium 60K No 7 Yes Large 220K No 8 No Small 85K Yes 9 No Medium 75K No 10 No Small 90K Yes 10 Tid Attrib1 Attrib2 Attrib3 Class 11 No Small 55K ? 12 Yes Medium 80K ? 13 Yes Large 110K ? 14 No Small 95K ? 15 No Large 67K ? 10 Test Set Learning algorithm Training Set Classification - Evaluation ▪ Counts of test records that are correctly (or incorrectly) predicted by the classification model ▪ Confusion matrix Class = 1 Class = 0 Class = 1 f11 f10 Class = 0 f01 f00 Predicted ClassActual Class 00011011 0011 sprediction of # total spredictioncorrect # Accuracy ffff ff +++ + == 00011011 0110 sprediction of # total sprediction wrong# rateError ffff ff +++ + == Instance-based learning Atr1 ……... AtrN Class A B B C A C B Set of Stored Cases Atr1 ……... AtrN Unseen Case • Store the training records • Use training records to predict the class label of unseen cases Nearest Neighbor Classifier • Basic idea: • “If it walks like a duck, quacks like a duck, then it’s probably a duck” Training Records Test Record Compute Distance Choose k of the “nearest” records Nearest Neighbor Classifier Requires three things – The set of stored records – Distance Metric to compute distance between records – The value of k, the number of nearest neighbors to retrieve To classify an unknown record: 1. Compute distance to other training records 2. Identify k nearest neighbors 3. Use class labels of nearest neighbors to determine the class label of unknown record (e.g., by taking majority vote) Unknown record Nearest Neighbor Classifier ▪ Compute distance between two points: ➢ Euclidean distance ▪ Determine the class from nearest neighbor list ➢ take the majority vote of class labels among the k-nearest neighbors ➢ Weigh the vote according to distance • weight factor, w = 1/d2  −= i ii qpqpd 2)(),( Nearest Neighbor Classifier X X X (a) 1-nearest neighbor (b) 2-nearest neighbor (c) 3-nearest neighbor K-nearest neighbors of a record x are data points that have the k smallest distance to x Approximate nearest neighbor search ▪ Given: a set of database vectors ▪ Input: a query vector ▪ Output: K (approximate) nearest neighbors in the database ▪ Exact nearest neighbor search is expensive for large datasets ▪ Need to prune the search space by indexes Inverted-file (IVF) index Training: cluster database vectors into IVF lists Inverted-file (IVF) index Training: cluster database vectors into IVF lists Inverted-file (IVF) index Searching: scan only a subset of IVF lists Inverted-file (IVF) index Searching: scan only a subset of IVF lists Inverted-file (IVF) index Searching: scan only a subset of IVF lists Locality Sensitive Hashing ▪ Another common way to implement approximated NNS is to use locality sensitive hashing (LSH) ▪ LSH hashes the data aiming at placing similar data in the same bucket ▪ A NNS is conducted by hashing across all hash functions, checking all the buckets, and picking the closest point Locality Sensitive Hashing ▪ Note: LSH is a form of very approximated clustering (not the same as K-means) ▪ Nearest neighbor search using LSH: start from exactly the same hash buckets, then expand to neighbor buckets ANN search nowadays: performance at scale matters ▪ More algorithms: not only indexing, but also compressing the dataset to save memory footprint and memory bandwidth • Product quantization (PQ) ▪ Better systems: leveraging the features of modern processors, memory, and storage ▪ Hardware acceleration: GPUs and FPGAs Example in Real DB http://madlib.apache.org/docs/latest/group__grp__knn.html https://services.google.com/fh/files/misc/scann_for_alloydb _whitepaper.pdf https://www.databricks.com/product/machine- learning/vector-search Nearest Neighbor Search  Vector Search Related Research in our Group","libVersion":"0.3.2","langs":""}