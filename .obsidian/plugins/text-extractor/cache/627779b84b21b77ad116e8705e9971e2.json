{"path":"sem4/FMFP/UE/e/FMFP-u02-e.pdf","text":"Formal Methods and Functional Programming Exercise Sheet 2 252-0058-00L February 24, 2025 For the first part of the course, there will be both pen-and-paper exercises and programming exercises. The programming exercises are uploaded on Code Expert: https://expert.ethz.ch/enrolled/SS25/fmfp/exercises Happy coding! As for the pen-and paper exercises, each week you may hand in your solution to the exercise marked with a (⋆) and receive feedback from your TA. You are encouraged to do so. Of course, if you have any questions about the solutions of the other exercises, please also reach out to your TA! Exercises marked as weekly headaches are challenging bonus problems. They are just meant as supplements to test your FMFP skills. 1. Formulas (a) Explain whether you can α-convert the following pairs of formulas into one another: 1. ∀x. p(x) ∧ q(y) and ∀y. p(y) ∧ q(x) 2. ∀x. ∀y. p(x, y) ∧ p(x, z) ∧ ∃z. p(x, z) and ∀y. ∀x. p(y, x) ∧ p(y, z) ∧ ∃z. p(y, z) (b) Consider the formula p(y) ∧ p(x) ∧ (∀y. q(x, y)) ∧ ∃x. p(x) Substitute the free variable x by f (y). 2(⋆). Structures For each of the following formulas, find two structures AT = ⟨UA, IT ⟩ and AF = ⟨UA, IF ⟩ with same universe UA = {a, b, c} and relations (IT (s) = . . . and IF (s) = . . . for each of the predicate symbols s occurring in the respective formula) that are neither the empty relation nor the full relation: one structure that satisfies the formula and one that does not. (a) ϕ1 = (∃x. p(x)) ∧ (∃y. q(y)) → (∃x. p(x) ∧ q(x)) (b) ϕ2 = ∀x. (∃y. r(x, y) ∧ q(y)) → (∀y. r(x, y) → q(y)) (c) ϕ3 = ∀x. ∀y. r(x, y) → r(y, x) → x = y 1 Formal Methods and Functional Programming Exercise Sheet 2 252-0058-00L February 24, 2025 3. Natural deduction revisited In this exercise, we work with intuitionistic predicate logic. The corresponding natural deduction rules are listed below. Γ, A ⊢ A axiom Γ, A ⊢ B Γ ⊢ A → B →-I Γ ⊢ A → B Γ ⊢ A Γ ⊢ B →-E Γ ⊢ ⊥ Γ ⊢ A ⊥-E Γ, A ⊢ ⊥ Γ ⊢ ¬A ¬-I Γ ⊢ ¬A Γ ⊢ A Γ ⊢ B ¬-E Γ ⊢ A Γ ⊢ B Γ ⊢ A ∧ B ∧-I Γ ⊢ A ∧ B Γ ⊢ A ∧-EL Γ ⊢ A ∧ B Γ ⊢ B ∧-ER Γ ⊢ A Γ ⊢ A ∨ B ∨-IL Γ ⊢ B Γ ⊢ A ∨ B ∨-IR Γ ⊢ A ∨ B Γ, A ⊢ C Γ, B ⊢ C Γ ⊢ C ∨-E Γ ⊢ A Γ ⊢ ∀x.A ∀-I ∗ Γ ⊢ ∀x.A Γ ⊢ A[x ↦→ t] ∀-E Γ ⊢ A[x ↦→ t] Γ ⊢ ∃x.A ∃-I Γ ⊢ ∃x.A Γ, A ⊢ B Γ ⊢ B ∃-E ∗∗ Side conditions: * x does not occur free in any formula in Γ; ** x does not occur free in any formula in Γ nor in B. Recall that → is right-associative, while ∧ and ∨ are left-associative. Moreover, ¬ binds stronger than ∧, which binds stronger than ∨, which in turn binds stronger than →. Also note that the scope of the quantifiers extends as far to the right as possible. Prove that the following statements are valid in intuitionistic predicate logic for arbitrary formulas P and Q. (a) ((∃x. P ) → Q) → ∀x. P → Q, where x does not occur free in Q. (b) (∃x. P ∧ Q) → (∃x. P ) ∧ (∃x. Q) (c) (∀x. P → Q) → ∀x. ¬Q → ¬P 2","libVersion":"0.5.0","langs":""}