{"path":"sem3/TI/UE/e/TI-e-u10.pdf","text":"Departement Informatik Theoretische Informatik Prof. Dr. Dennis Komm Prof. Dr. Juraj Hromkoviˇc Dr. Hans-Joachim B¨ockenhauer Exercises – Sheet 10 Z¨urich, November 29, 2024 Task 28 (a) Let X be a set and let S ⊆ P(X) be such that ⋃S∈S S = X. A subset C ⊆ S is a set cover of X if X = ⋃S∈C S. The set cover problem (SCP) is defined as SCP = {(X, S, k) | X has a set cover C ⊆ S such that |C| ≤ k} . Prove that VC ≤p SCP. (b) A dominating set of a graph G = (V, E) is a set D ⊆ V such that every vertex v ∈ V satisfies the following: v ∈ D or there exists some w ∈ D such that {v, w} ∈ E. The dominating set problem (DS) is defined as DS = {(G, k) | G has a dominating set D such that |D| ≤ k} . Prove that SCP ≤p DS. 10 points Task 29 The subset sum problem (SUBSET-SUM for short) is the following decision problem: given a finite set S = {s1, . . . , sm} of natural numbers and a natural number t, decide if there exists a subset U ⊆ S such that ∑ x∈U x = t. We seek to show that 3SAT ≤p SUBSET-SUM holds. To get a reduction, we have to transform a formula in 3CNF to an instance of the subset sum problem. Let Φ = C1 ∧ . . . ∧ Ck be a formula in 3CNF over the set of variables X = {x1, . . . , xn}. Without loss of generality, we suppose that every variable xi occurs in at least one clause Cj and that no clause contains both a variable and its negation. Now we construct two (n + k)-digit decimal numbers ri and r′ i for every variable xi and two (n + k)-digit decimal numbers sj and s′ j for every clause Cj. The set S of the subset sum problem instance consists of exactly these 2(n + k) numbers. The idea behind this construction is to assign each of the first n digits to a variable and each of the last k digits to a clause. We denote by x[l] the l-th digit of x ∈ S, i. e., x = x[1]x[2] . . . x[n + k]. Then we can define the numbers in S, for all 1 ≤ i ≤ n and all 1 ≤ j ≤ k, and the sum t as ri[l] =   1 for l = i or (n + 1 ≤ l ≤ n + k and xi occurs as a literal in Cl−n) 0 otherwise r′ i[l] =   1 for l = i or (n + 1 ≤ l ≤ n + k and xi occurs as a literal in Cl−n) 0 otherwise sj[l] =   1 for l = n + j 0 otherwise s′ j[l] =   2 for l = n + j 0 otherwise t[l] =   1 for 1 ≤ l ≤ n 4 otherwise Prove that this reduction satisfies the following: Φ is satisfiable if and only if there exists a subset U ⊆ S such that ∑ x∈U x = t. 10 points Task 30 On the Moodle platform, there is a video available for you which explains how to use a polynomial-time reduction for proving the NP-hardness of the E3SAT problem. You have the opportunity to watch this video and then work through another example of a polynomial-time reduction in person during the next tutorial session. There are no points or model solutions for this in-person task, but you can discuss the example in detail during the tutorial. 0 points Submission: On Friday, December 6, 2024, by 11:15 at the latest, as a legible PDF via the Moodle platform.","libVersion":"0.3.2","langs":""}