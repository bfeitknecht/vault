{"path":"sem2/AuW/VRL/slides/AuW-L24b-flow-image-fg-bg.pdf","text":"Vorlesung Algorithmen und Wahrscheinlichkeit, D-INFK, ETH Zürich Angelika Steger & Emo Welzl Flüsse in Netzwerken: Anwendungen (Teil 2) Kopf CT [CT-MRTinstitut Berlin] 0 / 9 III Bildsegmentierung Bildsegmentierung. Gegeben ein Bild (aus Pixeln mit Farbwerten), trenne Vordergrund von Hintergrund. Intuitiv: Ein Bild ist ein Menge P von Pixeln (z.B. gitterförmig angeordnet) mit Farben (z.B. RGB, Grauwerte), mit einer Nachbarschaftsrelation, die sagt welche Pixel nebeneinander liegen. 1 / 9 Modellierung Ein Bild ist ein Graph (P, E ) mit Farbinformation χ : P → Farben. Jemand extrahiert aus den Farben der Pixel individuell eine Einschätzung, ob das Pixel im Vordergrund oder Hintergrund liegt: α : P → R + 0 αp grösser ⇒ eher im Vordergrund β : P → R + 0 βp grösser ⇒ eher im Hintergrund Erster Ansatz: Vordergrund A := {p ∈ P | αp > βp} und Hintergrund B := P \\ A . Nachteil: Die Aufteilung wir in vielen Fällen zu feinkörnig. 2 / 9 Modellierung Ein Bild ist ein Graph (P, E ) mit Farbinformation χ : P → Farben. Jemand extrahiert aus den Farben der Pixel individuell eine Einschätzung, ob das Pixel im Vordergrund oder Hintergrund liegt: α : P → R + 0 αp grösser ⇒ eher im Vordergrund β : P → R + 0 βp grösser ⇒ eher im Hintergrund Erster Ansatz: Vordergrund A := {p ∈ P | αp > βp} und Hintergrund B := P \\ A . Nachteil: Die Aufteilung wir in vielen Fällen zu feinkörnig. 2 / 9 Modellierung Ein Bild ist ein Graph (P, E ) mit Farbinformation χ : P → Farben. Jemand extrahiert aus den Farben der Pixel individuell eine Einschätzung, ob das Pixel im Vordergrund oder Hintergrund liegt: α : P → R + 0 αp grösser ⇒ eher im Vordergrund β : P → R + 0 βp grösser ⇒ eher im Hintergrund Erster Ansatz: Vordergrund A := {p ∈ P | αp > βp} und Hintergrund B := P \\ A . Nachteil: Die Aufteilung wir in vielen Fällen zu feinkörnig. 2 / 9 Modellierung Ein Bild ist ein Graph (P, E ) mit Farbinformation χ : P → Farben. Wir erhalten eine dritte Einschätzung, ob benachbarte Pixel eher im gleichen Teil (Vorder-/Hintergund) liegen. α : P → R+ 0 αp grösser ⇒ eher im Vordergrund β : P → R+ 0 βp grösser ⇒ eher im Hintergrund γ : E → R+ 0 γe grösser ⇒ eher im gleichen Teil Qualitätsfunktion für Vorder-/Hintergrundspartition (A, B) von P: q(A, B) := ∑ p∈A αp + ∑ p∈B βp − ∑ e∈E , |e∩A|=1 γe . 3 / 9 Modellierung Ein Bild ist ein Graph (P, E ) mit Farbinformation χ : P → Farben. Wir erhalten eine dritte Einschätzung, ob benachbarte Pixel eher im gleichen Teil (Vorder-/Hintergund) liegen. α : P → R+ 0 αp grösser ⇒ eher im Vordergrund β : P → R+ 0 βp grösser ⇒ eher im Hintergrund γ : E → R+ 0 γe grösser ⇒ eher im gleichen Teil Qualitätsfunktion für Vorder-/Hintergrundspartition (A, B) von P: q(A, B) := ∑ p∈A αp + ∑ p∈B βp − ∑ e∈E , |e∩A|=1 γe . 3 / 9 Unsere Problemstellung Bildsegmentierung. Gegeben ein Bild (P, E ) mit α : P → R+ 0 , β : P → R+ 0 , γ : E → R+ 0 , ﬁnde eine Partition (A, B) von P die q(A, B) := ∑ p∈A αp + ∑ p∈B βp − ∑ e∈E , |e∩A|=1 γe . maximiert. 4 / 9 Umformung von q(A, B) q(A, B) := ∑ p∈A αp + ∑ p∈B βp − ∑ e∈E , |e∩A|=1 γe . Mit Q := ∑ p∈P (αp + βp) gilt q(A, B) = Q − ∑ p∈A βp − ∑ p∈B αp − ∑ e∈E ,|e∩A|=1 γe . q(A, B) zu maximieren is äquivalent zur Minimierung von q′(A, B) := ∑ p∈A βp + ∑ p∈B αp + ∑ e∈E ,|e∩A|=1 γe . 5 / 9 Umformung von q(A, B) q(A, B) := ∑ p∈A αp + ∑ p∈B βp − ∑ e∈E , |e∩A|=1 γe . Mit Q := ∑ p∈P (αp + βp) gilt q(A, B) = Q − ∑ p∈A βp − ∑ p∈B αp − ∑ e∈E ,|e∩A|=1 γe . q(A, B) zu maximieren is äquivalent zur Minimierung von q′(A, B) := ∑ p∈A βp + ∑ p∈B αp + ∑ e∈E ,|e∩A|=1 γe . 5 / 9 Vom Bild zum Netzwerk N := (P ∪ {s, t}, ⃗E , c, s, t): ▶ Neue Knoten s und t, Quelle und Senke im Netzwerk. ▶ Die Quelle s hat eine gerichtete Kante zu jedem Pixel p ∈ P mit Kapazität αp. ▶ Jedes Pixel p hat eine gerichtete Kante zur Senke t mit Kapazität βp. ▶ Für jede Kante e = {p, p′} ∈ E gibt es zwei gerichtete Kanten (p, p′) und (p′, p), je mit Kapazität γe. 6 / 9 Bild von „Vom Bild zum Netzwerk“ pstαpβppeγeγe 7 / 9 Kapazität eines s-t-Schnitts in N Sei (S, T ) ein s-t-Schnitt, und A := S \\ {s} und B := T \\ {t}. Welche Kanten mit welchem Beitrag sind in diesem s-t-Schnitt? ▶ Kanten (s, p) mit p ∈ B; Beitrag zu cap(S, T ) ist ∑ p∈B αp. ▶ Kanten (p, t) mit p ∈ A; Beitrag zu cap(S, T ) ist ∑ p∈A βp. ▶ Kanten (p, p′) des Netzwerks in A × B mit Beitrag ∑ (p,p′)∈A×B,{p,p′}∈E γ(p,p′). Es folgt q′(A, B) := ∑ p∈A βp + ∑ p∈B αp + ∑ e∈E ,|e∩A|=1 γe = cap(S, T ) 8 / 9 Anmerkungen ▶ Die optimale Partition (A, B) kann also mit Hilfe von MaxFlow für den minimalen s-t-Schnitt berechnet werden. ▶ Dieser Lösungsansatz kommt in Anwendungen zum Einsatz, insbesondere auch für höherdimensionale Bilder (mit Voxeln), z.B. Computertomographie. 9 / 9 Anmerkungen ▶ Die optimale Partition (A, B) kann also mit Hilfe von MaxFlow für den minimalen s-t-Schnitt berechnet werden. ▶ Dieser Lösungsansatz kommt in Anwendungen zum Einsatz, insbesondere auch für höherdimensionale Bilder (mit Voxeln), z.B. Computertomographie. 9 / 9","libVersion":"0.3.1","langs":""}