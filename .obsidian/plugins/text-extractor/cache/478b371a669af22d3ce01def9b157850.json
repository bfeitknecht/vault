{"path":"sem4/DMDB/UE/slides/DMDB-s01-SQL-1.pdf","text":"Data Modelling and Databases SQL I Dwij Dixit07.03.2025 2 Part 1: SQL Recap Structure of SQL Queries •Each query is composed of components specified using keywords. •The order is important! •SELECT •FROM •WHERE •JOIN •GROUP BY •HAVING •ORDER BY [ASC/DESC] •LIMIT The FROM clause •Specifies the basic logical entity over which the query is based. •Base tables, usually •Joins over base tables •Or Views (for later) •Example – •SELECT * FROM departments; The SELECT clause •Corresponds to projection operation (π) from relational algebra. •Specifies the fields required in the output table. •Example – •SELECT dept_name FROM departments; •SELECT * FROM titles; The WHERE clause •Specifies condition for filtering the specified data. •Corresponds to selection operator (σ) from Relational Algebra •The conditions are applied before aggregation. •Complex predicates can be specified using AND & OR keywords, and parentheses. •Example – •SELECT * FROM departments WHERE dept_no=‘d001’ OR (dept_no=‘d009’ AND dept_name=‘Finance’); The WHERE clause •Arithmetic predicates: <, >, =, <>, <=, >=, BETWEEN-AND •Logical predicates: OR, AND, NOT •String predicates: LIKE, ILIKE •Set operators: IN, NOT IN, EXISTS •Handling NULL: IS NULL, IS NOT NULL The GROUP BY clause •Specifies aggregation on specified attribute. •Corresponds to aggregation operator (γ) in relational algebra. •Example: •select dept_no, dept_name,count(emp_no) from dept_emp group by dept_no, dept_name; The HAVING clause •Specifies condition for filtering the aggregated data. •Corresponds to selection operator (σ) from Relational Algebra •The conditions are applied after aggregation. •Example – •select dept_no, dept_name, count(emp_no) AS num_emp from dept_emp group by dept_no, dept_name HAVING num_emp > 50; The ORDER BY clause •Corresponds to the sorting (τ) operator from relational algebra. •Orders the data in the specified sorted order over the given attribute (set) •Example – •select dept_no, dept_name, count(emp_no) AS num_emp from dept_emp group by dept_no, dept_name HAVING num_emp > 50 ORDER BY num_emp DESC; The LIMIT clause •Limits the number of output tuples to the given number. •Example – •select dept_no, dept_name, count(emp_no) AS num_emp from dept_emp group by dept_no, dept_name HAVING num_emp > 50 LIMIT 5; 07.03.2025 12 Part 2: Solutions The Employee Database – Schema •departments:( dept_no, dept_name ) •dept_emp:( emp_no,dept_no, from_date, to_date ) •dept_manager:( emp_no, dept_no, from_date, to_date ) •employees:( emp_no, birth_date, first_name, last_name, gender, hire_date ) •salaries:( emp_no, salary, from_date, to_date ) •title: ( emp_no, title, from_date, to_date ) Which department has ever had the greatest number of employees? SELECT dept_no , COUNT(*) FROM dept_emp WHERE to_date='9999-01-01’ GROUP BY dept_no ORDER BY COUNT(*) LIMIT 1; How many employee's job is titled 'Staff'? SELECT COUNT(*) FROM titles WHERE title='Staff'; Who is the highest paid current employee? Please enter only the employee ID. SELECT * FROM salaries WHERE to_date='9999-01-01’ ORDER BY salary DESC LIMIT 3; What is the first name of the employee with the salary record bearing the shortest duration? SELECT emp_no, salary, from_date, to_date, (to_date - from_date) AS duration FROM salaries WHERE to_date != '9999-01-01’ ORDER BY duration ASC LIMIT 5; How many employees have changed their department at least once? •Idea: An employee who has changed department will have more than one department listed across his name. SELECT emp_no, COUNT(DISTINCT dept_no) AS dept_count FROM dept_emp GROUP BY emp_no HAVING COUNT(DISTINCT dept_no) > 1 ORDER BY COUNT(DISTINCT dept_no); How many employees have had more than one Job Title? SELECT emp_no, COUNT(DISTINCT title) AS title_count FROM title GROUP BY emp_no HAVING COUNT(DISTINCT title) > 1; Which one of the following queries does not result in what others result into? SELECT e.emp_no, e.first_name, e.last_name FROM employees e WHERE NOT EXISTS ( SELECT 1 FROM dept_manager dm WHERE dm.emp_no = e.emp_no ) ORDER BY e.emp_no; Which one of the following queries does not result in what others result into? SELECT emp_no, first_name, last_name FROM employees EXCEPT SELECT e.emp_no, e.first_name, e.last_name FROM employees e JOIN dept_manager dm ON e.emp_no = dm.emp_no ORDER BY emp_no; Which one of the following queries does not result in what others result into? SELECT e.emp_no, e.first_name, e.last_name FROM dept_manager dm LEFT JOIN employees e ON e.emp_no = dm.emp_no WHERE dm.emp_no IS NULL ORDER BY e.emp_no; Which one of the following queries does not result in what others result into? SELECT e.emp_no, e.first_name, e.last_name FROM employees e WHERE e.emp_no NOT IN ( SELECT dm.emp_no FROM dept_manager dm ) ORDER BY e.emp_no; What does the query return? WITH multi_dept_employees AS ( SELECT emp_no FROM dept_emp GROUP BY emp_no HAVING COUNT(DISTINCT dept_no) > 1 ) SELECT emp_no, first_name, last_name FROM employees WHERE emp_no IN (SELECT emp_no FROM multi_dept_employees) EXCEPT SELECT emp_no, first_name, last_name FROM employees WHERE emp_no IN (SELECT emp_no FROM dept_manager); What does the query return? WITH salary_change AS ( SELECT emp_no, MIN(salary) AS starting_salary, MAX(salary) AS highest_salary FROM salaries GROUP BY emp_no HAVING MAX(salary) >= 1.5 * MIN(salary) ) SELECT sc.emp_no, sc.starting_salary, sc.highest_salary FROM salary_change sc ORDER BY (sc.highest_salary - sc.starting_salary) DESC LIMIT 5; Which department has had the most managers over time? Resolve ties by largest department ID first. SELECT dm.dept_no, COUNT(dm.emp_no) AS manager_count FROM dept_manager dm GROUP BY dm.dept_no ORDER BY manager_count DESC LIMIT 1; What does the query return? WITH employee_dept_counts AS ( SELECT emp_no, COUNT(DISTINCT dept_no) AS dept_count FROM dept_emp GROUP BY emp_no ) SELECT edc.emp_no FROM employee_dept_counts edc WHERE edc.dept_count = (SELECT COUNT(*) FROM departments); What does the query return? WITH num_salary_records AS ( select emp_no, count(*) as num_rec from salaries group by emp_no ) SELECT num_rec, count(*) as num_employees FROM num_salary_records GROUP BY num_rec ORDER BY num_employees desc; The ZVV Database – Schema stops: ( stop_id, stop_name, stop_lat, stop_lon ) stop_times: ( trip_id, departure_time, arrival_time, stop_id, stop_sequence ) trips: ( trip_id, tram_number, trip_headsign ) Which service makes the most trips in a day? SELECT tram_number, COUNT(*) FROM trips GROUP BY tram_number ORDER BY COUNT(*) DESC; How many services operate under headsign 'Triemli'? SELECT COUNT(DISTINCT(tram_number)) FROM trips WHERE trip_headsign LIKE '%Triemli%'; Which stop serves as a terminus for the most number of services? SELECT trip_headsign, COUNT(DISTINCT(tram_number)) AS num_services FROM trips GROUP BY trip_headsign ORDER BY num_services DESC; Which stop has the most frequent halts? SELECT stop_name, stop_id, COUNT(*) AS num_halts FROM stop_times JOIN stops USING(stop_id) GROUP BY stop_id, stop_name ORDER BY num_halts DESC LIMIT 5; Which stop is served by the greatest number of services? SELECT stop_name, stop_id, COUNT(DISTINCT(tram_number)) AS num_halts FROM stop_times JOIN stops USING(stop_id) JOIN trips USING(trip_id) GROUP BY stop_id, stop_name ORDER BY num_halts DESC LIMIT 5; How many services operate between ETH HG and Central? SELECT * FROM stops WHERE stop_name LIKE '%ETH%’; SELECT * FROM stops WHERE stop_name LIKE '%Central%’; SELECT DISTINCT tram_number FROM stop_times JOIN trips USING(trip_id) WHERE stop_id=352 INTERSECT SELECT DISTINCT tram_number FROM stop_times JOIN trips USING(trip_id) WHERE stop_id=391; What is the average time taken for a trip from ETH HG to Central, between 15:00:00 and 15:59:59? SELECT AVG(t2.arrival_time::TIME - t1.departure_time::TIME) AS avg_trip_duration FROM stop_times t1 JOIN stop_times t2 ON t1.trip_id = t2.trip_id WHERE t1.stop_id = (SELECT stop_id FROM stops WHERE stop_name like '%ETH%') AND t2.stop_id = (SELECT stop_id FROM stops WHERE stop_name like '%Central%') AND t1.departure_time like '15:%:%' AND t1.stop_sequence < t2.stop_sequence; What is the average halt duration of trip 189? SELECT tram_number, AVG(CAST(departure_time AS TIME) - CAST(arrival_time AS TIME)) AS avg_halt_duration FROM stop_times join trips USING(trip_id) WHERE trip_id=189 GROUP BY tram_number;","libVersion":"0.5.0","langs":""}