{"path":"sem4/CN/UE/slides/CN-u05-slides.pdf","text":"Computer Networks - Exercise 5 Network Layer and Forwarding ETH Zürich Slides by Paul Ellsiepen and Joël Vögtlin Based on the work of Binică Nicolae, Diego de los Santos, Alice La Porta and Nicolas Stucki March 2025 Table of contents - Lecture Recap - IPv4 addresses and preﬁxes - Forwarding - IP helper protocols - Fragmentation - Middleboxes - IPv6 - Demo: traceroute - Kahoot! - Exercise #5 23 Layers visualized Network Layer - 32 bits - “Dotted quad” notation - Public IP addresses: - Valid globally - Must be allocated to you - Private IP addresses: - Free to be used in private networks (home/company) - 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 5 IPv4 Addresses aaaaaaaa.bbbbbbbb.cccccccc.dddddddd = A.B.C.D 8 bits 8 bits 8 bits8 bits 011000000.010101000.00000001.00000001 = 192.168.1.1 192 168 1 1 - Blocks in which IP addresses are allocated - “lowest IP address/length” notation - 2 reserved addresses: - Broadcast: Highest address - Network identiﬁer: Lowest address 6 IP Preﬁxes 11000000.10101000.00000001.XXXXXXXX = 192.168.1.0/24 192 168 1 X Preﬁx Example: 192.168.1.0/24 11000000.10101000.00000001.00000000 = 192.168.1.0 11000000.10101000.00000001.11111111 = 192.168.1.255 192 168 1 0 192 168 1 255 Network identiﬁer: Broadcast address: Host 11000000.10101000.00000001.00000010 = 192.168.1.2 192 168 1 2 Some host: 7 IP Preﬁxes - Mask Notation 11000000.10101000.00000001.00000010 = 192.168.1.2 11111111.11111111.11111111.00000000 = 255.255.255.0 Some address Mask Bitwise AND 11000000.10101000.00000001.00000000 = 192.168.1.0 → 192.168.1.0/24 - IP preﬁxes are used for forwarding: If an IP is part of the network, then it will contain the same preﬁx - Forwarding table determines next hop given a preﬁx - Preﬁxes might overlap → Longest matching preﬁx rule - How it works: 1. Find all matching preﬁxes for a given packet 2. Choose the longest one 3. Forward packet to the next hop 8 Longest Matching Preﬁx 9 Longest Matching Preﬁx - Example Destination 11000000.00011000.00000110.00000000 Rule 1 11000000.00011000.00000000.00000000 Rule 2 11000000.00011000.00001100.00000000 Next hop: D Destination 11000000.00011000.00001110.00100000 Rule 1 11000000.00011000.00000000.00000000 Rule 2 11000000.00011000.00001100.00000000 Next hop: B 192 24 14 32192 24 6 0 10 Forwarding Table Compression Rule 1 Rule 3 Rule 2 Rule 4 11000000.00011000.00000000.00000000 11000000.00011000.00001100.00000000 11000000.00011000.00010000.00000000 11000000.00011000.00001100.00000000 All IPs that match rule 3 also match rule 1 and none of the others, so rule 3 can be removed safely - DHCP: Assigning IP addresses to hosts automatically - ARP: Mapping IP addresses to link layer addresses (e.g. MAC address) 11 IP Helper Protocols Problem: How to assign IP addresses (and other settings) to hosts. Solutions: 1. Manually 2. DHCP (Dynamic Host Conﬁguration Protocol) - Provide (lease) IP address to host - Setup the network parameters (preﬁx, default gateway, DNS, etc.) 12 DHCP How it works: 1. Host broadcasts (IP and MAC addresses set to all 1s) a discover message 2. DHCP server (and all hosts on the network) receives the message 3. DHCP server sends an offer message (including IP address and other parameters) 4. Host sends request message 5. DHCP server sends ACK For lease extension: Start from step 4 13 DHCP Problem: Link layer address is needed to send frames over the network How do we get the link layer address that corresponds to an IP address? Solution: ARP 14 ARP Idea: Create mapping between local IP addresses and link layer addresses by using broadcasts How it works: 1. Host sends (link layer) broadcast message requesting the link layer address for some IP address 2. All hosts on the local network receive it and (hopefully) the target host replies with its link layer address 3. Source host receives the MAC Address 4. Both target and source hosts store the mappings in their ARP cache 15 ARP Problem: Different networks have different MTUs (Maximum Transmission Unit) Solutions: 1. Fragmentation 2. Discovery 16 Packet Fragmentation 17 Packet Fragmentation 7 MTU: 8 MTU: 4 MTU: 4 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 7 MTU: 8 MTU: 4 MTU: 4 6 5 4 3 2 1 0 7 6 5 4 3 2 1 0 Fragment 7 6 5 4 3 2 1 0 0 1 2 3 4 5 6 7 Reassemble Image source: ﬂaticon.com Fragmentation requires setting a ﬂag and adding offset values in the IP headers. Possible to fragment the segment multiple times. Downsides: - More work for routers and hosts - Loss of packet fragment causes loss of complete packet → MTU discovery 18 Packet Fragmentation Goal: Avoid fragmentation How it works: - Set “do not fragment” ﬂag in IP header - Set MTU using heuristics and send packet - If MTU is too large for some link along the path, the packet will be dropped and an ICMP packet containing the correct MTU will be sent back - Set MTU to that size and try again After some time: Send larger packet again to check if the path changed 19 MTU Discovery 20 MTU Discovery Source Destination MTU: 1400 MTU: 1200 MTU: 900 1400 Try 1200 Try 900 1200 900 ICMP: Internet Control Message Protocol Implemented on top of IP Payload is often the start of the packet that caused an issue Why? - Error reporting: MTU issues, host unreachable, … - Testing: ping, traceroute, … 21 ICMP Goal: Identify path along which packets travel How it works: - Send packets with increasing TTL (Time To Live) - TTL is decreased by every router on the path (usually to avoid routing loops) - When TTL=0, the packet is dropped and an ICMP message is sent back (containing information about the router) 22 ICMP - traceroute 23 ICMP - traceroute TTL=1 TTL=1 TTL=1 TTL=1TTL=2TTL=3TTL=4 TTL=2TTL=3 TTL=2 Devices that transform, inspect, ﬁlter, and/or manipulate trafﬁc for purposes other than packet forwarding (more than IP functionalities) Examples: Network Address Translation (NAT), Firewalls Pros - Possible rapid deployment path (e.g., SCION) - Control over many hosts Cons - Breaking layering interferes with connectivity →unintended effects on (other) protocols - Internet ossiﬁcation 24 Middleboxes 25 Network Address Translation (NAT) WAN = Wide Area Network LAN = Local Area Network Image source: Computer Networks, A Top-Down Approach, Kurose Ross Advantages - Relieves IP address space shortage pressure - Easy to deploy - Fast, ﬂexible in terms of address space - Useful Functionalities - I.e. Hides internal network structure and conﬁguration Disadvantages - Connectivity has been broken - Can’t receive incoming packets without an outgoing connection or “port-forwarding” - Additional issues when no connection (e.g., UDP) - Needs keep-alive messages - Breaks apps that unwisely expose their IP addresses within packet data (FTP) 26 Network Address Translation (NAT) - “Replacement” for IPv4 - NOT backward compatible - Header size ﬁxed to 40 bytes - No more fragmentation and checksums - Flow labels - Neighbor Discovery Protocol (NDP) = ARP + DHCP for IPv6 (And other functionalities) - Happy Eyeballs: - Issue both IPv4 and IPv6 DNS queries, but prefer IPv6 (delay IPv4 connection) - IPv6 Tunneling: Connects IPv6 “islands” via IPv4 - Send IPv6 packet across IPv4 network 27 IPv6 - 128 bits, 8 groups of 4 hex digits (16 bits) - Columns (:) instead of dots (.) - Omit leading zeros in each group - Omit one consecutive set of group of zeros (normally largest one) - Preﬁxes work just like for IPv4: dead:beef::/32 - Ex 1: 2001:0db8:0000:0000:0000:ff00:0042:8329 - 2001:db8::ff00:42:8329 - Ex 2: 2001:db8:0000:0000:1a12:0000:0000:1a13 - 2001:db8::1a12:0:0:1a13 - 2001:db8:0:0:1a12::1a13 28 IPv6 Notation 29 Unicast Addresses (multiple addresses for the same host) - Link Local: Used for sending packets over the local subnet - preﬁx fe80::/10 (typically fe80::/64) - Automatically set up based on MAC address - GUA (global unique address): Similar to IPv4 public addresses - preﬁx 2000::/3 - Globally reachable - ULA (unique local address): Similar to IPv4 private addresses - preﬁx fc00::/7 - Can be NATed to GUA Special Addresses - Loopback address ::1/128 (like 127.0.0.1) - Unspeciﬁed address ::0/128 IPv6 Addresses Demo: traceroute Try running these from multiple networks (ETH, home, mobile data, etc.): - traceroute ethz.ch - traceroute -I ethz.ch (capital i) - traceroute minecraft.net - traceroute -I minecraft.net Depending on the operating systems, there might be different defaults, so play around with all the possible options (-T, -U, -6, etc.). For more info, run: - man traceroute 31 traceroute (“tracert” if you are on Windows) Running this command would give the beginning text of “Star Wars: A new hope (Episode IV)”: - traceroute 216.81.59.173 Sadly, people kept attacking this IP and the creator didn’t want to keep up with it just for the gimmick. More info here (detailed implementation too) 32 Deprecated Easter egg Kahoot!Exercise #5 Question 1: Longest preﬁx matching 35 Given the forwarding table below that does not use longest preﬁx matching: 1) Find “better” table that uses longest preﬁx matching → (same forwarding behavior but fewer entries) Preﬁx Interface 128.128.0.0/9 eth0 128.160.0.0/11 eth1 128.176.0.0/12 eth0 128.192.0.0/10 eth0 default eth2 Question 1: Longest preﬁx matching 36 Given the forwarding table below that does not use longest preﬁx matching: 1) Find “better” table that uses longest preﬁx matching → (same forwarding behavior but fewer entries) Almost all IP-addresses of the form 10000000.1x.x.x should be routed to eth0 The exception are the addresses 10000000.101x.x.x which should be routed to eth1 → remove entry 128.192.0.0/10 Preﬁx Binary Notation Interface 128.128.0.0/9 10000000.10000000.x.x eth0 128.160.0.0/11 10000000.10100000.x.x eth1 128.176.0.0/12 10000000.10110000.x.x eth0 128.192.0.0/10 10000000.11000000.x.x eth0 default eth2 Question 1: Longest preﬁx matching 37 Given the forwarding table below that does not use longest preﬁx matching: 1) Find “better” table that uses longest preﬁx matching → (same forwarding behavior but fewer entries) 10000000.101x.x.x should be routed to eth1 10000000.1011x.x.x should be routed to eth0 Preﬁx Binary Notation Interface 128.128.0.0/9 10000000.10000000.x.x eth0 128.160.0.0/11 10000000.10100000.x.x eth1 128.176.0.0/12 10000000.10110000.x.x eth0 default eth2 Question 1: Longest preﬁx matching 38 Given the forwarding table below that does not use longest preﬁx matching: 1) Find “better” table that uses longest preﬁx matching → (same forwarding behavior but fewer entries) 10000000.101x.x.x should be routed to eth1 10000000.1011x.x.x should be routed to eth0 → extend preﬁx of entry 2 Preﬁx Binary Notation Interface 128.128.0.0/9 10000000.10000000.x.x eth0 128.160.0.0/12 10000000.10100000.x.x eth1 128.176.0.0/12 10000000.10110000.x.x eth0 default eth2 → remove entry 128.176.0.0/12 Question 1: Longest preﬁx matching 39 Given the forwarding table below that does not use longest preﬁx matching: 1) Find “better” table that uses longest preﬁx matching → (same forwarding behavior but fewer entries) Preﬁx Binary Notation Interface 128.128.0.0/9 10000000.10000000.x.x eth0 128.160.0.0/12 10000000.10100000.x.x eth1 default eth2 Preﬁx Interface 128.128.0.0/9 eth0 128.160.0.0/12 eth1 default eth2 Question 2: Forwarding 40 Given a forwarding table at router R and packets with a given destination IP arriving at R 1) Determine the destination of these packets using longest preﬁx matching a) 139.179.60.10 b) 139.179.226.40 c) 139.179.124.55 d) 139.179.220.180 Destination Network Next Hop 139.179.200.0/23 R1 139.179.128.0/18 R2 139.179.112.0/20 R3 139.179.216.0/21 R4 139.179.0.0/16 R5 Question 2: Forwarding 41 Given a forwarding table at router R and packets with a given destination IP arriving at R Destination Network Binary Notation Next Hop 139.179.200.0/23 10001011.10110011.11001000.x R1 139.179.128.0/18 10001011.10110011.10000000.x R2 139.179.112.0/20 10001011.10110011.01110000.x R3 139.179.216.0/21 10001011.10110011.11011000.x R4 139.179.0.0/16 10001011.10110011.00000000.x R5 1) Determine the destination of these packets using longest preﬁx matching a) 139.179.60.10 b) 139.179.226.40 c) 139.179.124.55 d) 139.179.220.180 Question 2: Forwarding 42 Given a forwarding table at router R and packets with a given destination IP arriving at R Destination Network Binary Notation Next Hop 139.179.200.0/23 10001011.10110011.11001000.x R1 139.179.128.0/18 10001011.10110011.10000000.x R2 139.179.112.0/20 10001011.10110011.01110000.x R3 139.179.216.0/21 10001011.10110011.11011000.x R4 139.179.0.0/16 10001011.10110011.00000000.x R5 1) Determine the destination of these packets using longest preﬁx matching a) 139.179.60.10 = 10001011 . 10110011 . 00111100 . 00001010 Question 2: Forwarding 43 Given a forwarding table at router R and packets with a given destination IP arriving at R Destination Network Binary Notation Next Hop 139.179.200.0/23 10001011.10110011.11001000.x R1 139.179.128.0/18 10001011.10110011.10000000.x R2 139.179.112.0/20 10001011.10110011.01110000.x R3 139.179.216.0/21 10001011.10110011.11011000.x R4 139.179.0.0/16 10001011.10110011.00000000.x R5 1) Determine the destination of these packets using longest preﬁx matching b) 139.179.226.40 = 10001011 . 10110011 . 11100010 . 00101000 Question 2: Forwarding 44 Given a forwarding table at router R and packets with a given destination IP arriving at R Destination Network Binary Notation Next Hop 139.179.200.0/23 10001011.10110011.11001000.x R1 139.179.128.0/18 10001011.10110011.10000000.x R2 139.179.112.0/20 10001011.10110011.01110000.x R3 139.179.216.0/21 10001011.10110011.11011000.x R4 139.179.0.0/16 10001011.10110011.00000000.x R5 1) Determine the destination of these packets using longest preﬁx matching c) 139.179.124.55 = 10001011 . 10110011 . 01111100 . 00110111 Question 2: Forwarding 45 Given a forwarding table at router R and packets with a given destination IP arriving at R Destination Network Binary Notation Next Hop 139.179.200.0/23 10001011.10110011.11001000.x R1 139.179.128.0/18 10001011.10110011.10000000.x R2 139.179.112.0/20 10001011.10110011.01110000.x R3 139.179.216.0/21 10001011.10110011.11011000.x R4 139.179.0.0/16 10001011.10110011.00000000.x R5 1) Determine the destination of these packets using longest preﬁx matching d) 139.179.220.180 = 10001011 . 10110011 . 11011100 . 10110100 Question 3: Analyzing a network topology The following ﬁgure shows a network with 3 routers 46 Question 3: Analyzing a network topology The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. 47 Question 3: Analyzing a network topology The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. 48 The router has speciﬁed behavior for these preﬁxes This speciﬁes the destination IP address and output interface to forward the datagram to An empty destination IP means the router has a link-layer connection to this address Question 3: Analyzing a network topology 1) Write the routing table for the right-hand router 49 Start by ﬁnding all preﬁxes that are directly reachable over interface 1 Write down all IP addresses and ﬁnd longest common bit-string of all these IP addresses The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. Question 3: Analyzing a network topology 1) Write the routing table for the right-hand router 50 The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. IP Address Binary Notation 1.2.5.1 00000001.00000010.00000101.00000001 1.2.5.2 00000001.00000010.00000101.00000010 1.2.5.3 00000001.00000010.00000101.00000011 1.2.5.4 00000001.00000010.00000101.00000100 1.2.5.0/29 00000001.00000010.00000101.00000xxx Next hop entry: output: 1 IP: -- Question 3: Analyzing a network topology 1) Write the routing table for the right-hand router 51 Now ﬁnd all preﬁxes that are reachable via the top router Write down all IP addresses and ﬁnd longest common bit-string of all these IP addresses The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. Question 3: Analyzing a network topology 1) Write the routing table for the right-hand router 52 The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. IP Address Binary Notation 1.2.2.9 00000001.00000010.00000010.00001001 1.2.2.10 00000001.00000010.00000010.00001010 1.2.2.17 00000001.00000010.00000010.00010001 1.2.2.18 00000001.00000010.00000010.00010010 1.2.2.0/27 00000001.00000010.00000010.000xxxxx Next hop entry: output: 1 IP: 1.2.5.2 Question 3: Analyzing a network topology 1) Write the routing table for the right-hand router 53 We do the same for all the devices reachable via the left router and ﬁnd out that the preﬁx we are looking for is 1.2.3.0/26 Next hop entry: output: 1 IP: 1.2.5.4 Repeat this process for interfaces 2 & 3 and ﬁll the table The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. Question 3: Analyzing a network topology 1) Write the routing table for the right-hand router 54 The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. preﬁx next hop output IP 1.2.2.0/27 1 1.2.5.2 1.2.3.0/26 1 1.2.5.4 1.2.5.0/29 1 -- 1.2.1.8/30 2 -- 1.2.1.28/30 3 -- Question 3: Analyzing a network topology 2) Are all entries in the left-hand router's table necessary? If not, show how to reduce the number of entries, without changing the routing behavior. 55 The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. preﬁx next hop output IP 1.2.2.8/30 2 1.2.5.2 1.2.1.0/27 2 1.2.5.1 1.2.5.0/29 2 -- 1.2.2.16/30 2 1.2.5.2 1.2.3.44/30 1 -- 1.2.3.8/30 3 -- IP Address Binary Notation 1.2.2.8/30 00000001.00000010.00000101.000010xx 1.2.2.16/30 00000001.00000010.00000101.000100xx Question 3: Analyzing a network topology 2) Are all entries in the left-hand router's table necessary? If not, show how to reduce the number of entries, without changing the routing behavior. 56 The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. preﬁx next hop output IP 1.2.2.8/30 2 1.2.5.2 1.2.1.0/27 2 1.2.5.1 1.2.5.0/29 2 -- 1.2.2.16/30 2 1.2.5.2 1.2.3.44/30 1 -- 1.2.3.8/30 3 -- IP Address Binary Notation 1.2.2.0/27 00000001.00000010.00000101.000xxxxx Question 3: Analyzing a network topology 2) Are all entries in the left-hand router's table necessary? If not, show how to reduce the number of entries, without changing the routing behavior. 57 The following ﬁgure shows a network with 3 routers connected by an Ethernet Switch. The routing table for the left-hand router is also shown. preﬁx next hop output IP 1.2.2.0/27 2 1.2.5.2 1.2.1.0/27 2 1.2.5.1 1.2.5.0/29 2 -- 1.2.3.44/30 1 -- 1.2.3.8/30 3 -- We need to check if our new preﬁx collides with any of the other address preﬁxes. There are no collisions and we are done Question 4: Network Address Translation (NAT) 58 In this exercise, we will explore how NAT complicates P2P communication. When two peers both have public IP addresses, P2P works perfectly. In reality, most users are behind a NAT, which can disrupt P2P communication. In the following exercises, assume that all communication is taking place over UDP and NAT devices behave identically for UDP and TCP 1) How can the client access the server (get the destination address)? The client can contact the server through its public IP address NAT translates src address in the client’s packet to the NAT’s public address NAT chooses new port number and keeps mapping from port to internal host. Question 4.1: Client-Server 59 Given this traditional client-server model, we want to answer the following questions Client ServerNAT Internet Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public IP 192.33.93.143 2) How can the server respond back to the client (to which address)? The server can reply to the client as if it was communicating with the NAT NAT then performs the address/port translation and then forward the packet to the client. Question 4.1: Client-Server 60 Given this traditional client-server model, we want to answer the following questions Client ServerNAT Internet Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public IP 192.33.93.143 3) What information is stored by the NAT for a correct translation? a) Client IP address b) Server IP address c) Client port d) Server port Question 4.1: Client-Server 61 Given this traditional client-server model, we want to answer the following questions Client ServerNAT Internet Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public IP 192.33.93.143 The client IP address / port needs to be stored in any case The server IP address / port depends on the NAT conﬁguration Question 4.2: P2P 62 Given this P2P setting, with both NAT’s having empty tables and the peers know each other’s external IP address Peer A Peer B NAT Internet Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Private/Internal IP 192.168.0.200 NAT Public/External IP 45.14.100.100 1) Can the peers communicate with each other?? No, why? NAT boxes don’t forward incoming trafﬁc unless they have a corresponding entry in their translation table. Question 4.3: Rendezvous Server 63 A wants to communicate with B, what needs to happen? Peer A Peer B NAT NATInternet Rendezvous Server Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public/External IP 45.14.100.100 Private/Internal IP 192.168.0.200 Public IP 10.10.10.10 Question 4.3: Rendezvous Server 64 State before hole punching Peer A Peer B NAT NATInternet Rendezvous Server Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public/External IP 45.14.100.100 Private/Internal IP 192.168.0.200 Public IP 10.10.10.10 A - S Session A-S 10.10.10.10:1234 77.56.10.10:62000 A-S Session A-S 10.10.10.10:1234 192.168.0.100:4321 B-S Session B-S 10.10.10.10:1234 192.168.0.200:4321 B- S Session B-S 10.10.10.10:1234 45.14.100.100:3100 A and B both have established a connection with the Rendezvous server. Question 4.3: Rendezvous Server 65 The Hole Punching Process Peer A Peer B NAT NATInternet Rendezvous Server Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public/External IP 45.14.100.100 Private/Internal IP 192.168.0.200 Public IP 10.10.10.10 1) A requests help from the RS to establish a connection to B A - S Session A-S 10.10.10.10:1234 77.56.10.10:62000 A-S Session A-S 10.10.10.10:1234 192.168.0.100:4321 B-S Session B-S 10.10.10.10:1234 192.168.0.200:4321 B- S Session B-S 10.10.10.10:1234 45.14.100.100:3100 2) RS answers A with a message containing B’s public IP and port (here: 45.14.100.100:31000). Additionally, it will sends A’s information To B Question 4.3: Rendezvous Server 66 The Hole Punching Process 1) What happens now? A and B both start sending UDP datagrams to the other endpoint They use the same port number that the RS had with the corresponding Client Now, since there is an entry already in the NAT, the packets will be forwarded A and B can now communicate with each other through a separate session A-B Question 4.3: Rendezvous Server 67 The Hole Punching Process Peer A Peer B NAT NATInternet Rendezvous Server Private/Internal IP 192.168.0.100 Public/External IP 77.56.10.10 Public/External IP 45.14.100.100 Private/Internal IP 192.168.0.200 Public IP 10.10.10.10 A - S Session A-S 10.10.10.10:1234 77.56.10.10:62000 A-S Session A-S 10.10.10.10:1234 192.168.0.100:4321 B-S Session B-S 10.10.10.10:1234 192.168.0.200:4321 B- S Session B-S 10.10.10.10:1234 45.14.100.100:3100 A-B A-B A-B Session A-B 45.14.100.100:31000 192.168.0.100:4321 Session A-B 77.56.10.10:62000 192.168.0.200:4321Session A-B 45.14.100.100:31000 77.56.10.10.62000 Question 5: IPv6 68 Reminder of the rules, what are they? - 128 bits, 8 groups of 4 hex digits (16 bits) - Columns (:) instead of dots (.) - Omit leading zeros in each group - Omit one consecutive set of group of zeros (normally largest one) 1) 20f:306g:0:a8ef:28b1::05de Invalid! g is not a hex character 2) 2001:0db8:85a3:0000:0000:8a2e:0370:7334 Valid! 2001:db8:85a3::8a2e:370:7334 3) :: Valid! 0000:0000:0000:0000:0000:0000:0000:0000 4) fe80::1ff::890a Invalid! Two blocks of zeros omitted Question 5.1: IPv6 addresses 69 We are now looking at examples of some IPv6 addresses. If the address is invalid, give the rule that breaks it, else give the shortened/lengthened version. Question 5.2: NAT with IPv6 70 1) Why is NAT no longer necessary with IPv6? Compared to IPv4, there is now a sufﬁciently large address space. IPv4 has 32 bits while IPv6 has 128! 2) Why might we still want to use a NAT? For privacy and security reasons it can still be beneﬁcial to hide your networks behind a NAT device and/or ﬁrewall.","libVersion":"0.5.0","langs":""}