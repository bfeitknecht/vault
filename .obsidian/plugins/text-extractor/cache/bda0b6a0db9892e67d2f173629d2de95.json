{"path":"sem3/TI/UE/TI-c-u05.pdf","text":"Basil Feitknecht, 23-922-099, Camil Schmid, 23-944-234, Dennis Küenzi, 21-559-315 13 (a) For the sake of contradiction, let's assume L1 to be regular. We consider the language Lw2 = {y ∣ wwy ∈ L1}. Since (n + 1) ⋅ 2 = 2n + 2 for any n ∈ N, the word y1 = 02n+2 is the canonical ﬁrst word of the language Lw2. By theorem 3.1 there exists a constant c independent of m such that the following holds. The number of all programs of length is less than or equal to 1 + c is ﬁnite, but there are an inﬁnite amount of words of the form 02n+2, hence we have arrived at a contradiction. Therefore, L1 is not regular. □ K(y1) ≤ ⌈log2(1 + 1) + c⌉ = 1 + c (b) For the sake of contradiction, assume L2 = {02, 03, 05, …} is regular. Let w0, w1, w2, … be the words of L2 in canonical sequence. According to the Pumping Lemma there exists an n0 ∈ N, so that conditions (i) − (iii) are fulﬁlled. We choose w = wk = 0pk, where pk is the k-th prime number and p > n0. It is easy to see that |w| ≥ n0 and consequently there exists a decomposition of our words w = yxz, where y = 0l, x = 0m, z = 0p−l−m, satisfying conditions (i) − (iii). Per condition (i) it holds that |xy| = l + m ≤ n0, since we have |x| = m ≤ n0. From (ii), it follows that |x| = m ≥ 1. Because of |yx 2z| = |yxz| + |x|, it follows that |yxz| < |yx 2z| ≤ |yxz| + n0. The next word in L2 after wk is wk′ = 0p′ , where p ′ is the next prime number after p. Thus the following holds. The strict inequality holds because when p > 2 the next prime number p′ ≥ p + 2. From this follows that|wp| < |yx 2z| < |wp′| and consequently yx 2z ∉ L2, while yxz ∈ L2. Hence we have arrived at a contradiction with condition (iii). □ |wp′| − |wp| = p ′ − p > 1 14 (a) The graph representation for a ﬁnite automaton accepting L1 is given below. 0,1 0 0,1 0,1 0 0,1 q0 q1 q2 q3 q4 The state q0 represents the state that contains all words x ∈ {0, 1}∗. Then, q1 contains all words x0, where x ∈ {0, 1}∗ i.e. K l[q0]⋅ {0}. Furthermore, q2 captures the words K l[q1]⋅ {0, 1} and the state q3 is composed of all words x0y, where x ∈ {0, 1}∗ and z ∈ {0, 1}2 i.e. K l[q1]⋅ {0, 1}2. Finally, q4 contains all words of the form x0y0z, where x, z ∈ {0, 1}∗ and y ∈ {0, 1}2, i.e. the accepted language K l[q4]= L1. □ (b) We ﬁrst draw the deterministic ﬁnite automaton accepting the language L2. a a b a,b b a b a b a b q0 q1 q2 q3 q4 qx For the sake of contradiction, let's assume there exists a ﬁnite automaton M that accepts L2 and has fewer than six states. Now we choose the words B = {λ, a, ab, abb, abbb, b}. According to the pigeonhole principle, there exist two words wi, wj ∈ B, wi ≠ wj, such that ^δ(q0, wi) = ^δ(q0, wj). According to Lemma 3.3, it follows that ∀z ∈ Σ∗ : wiz ∈ L ⟺ wjz ∈ L. We observe the following table with suﬃxes. a ab abb abbb b λ b λ bb b abb a λ bb ab b ab λ λ λ abb b bb abbb b This shows the existence of a suﬃx z ∈ Σ ∗ for each pair of words x, y ∈ B, x ≠ y , such that (xz ∈ L ∧ yz ∉ L) ∨ (xz ∉ L ∧ yz ∈ L) holds. This can easily be veriﬁed with the given suﬃxes and the speciﬁed EA. However this contradicts the assumption that there exists a pair of words wi, wj ∈ B, wi ≠ wj, such that ∀z ∈ Σ ∗ : wiz ∈ L ⟺ wjz ∈ L. Thus, our initial assumption is false and there exists no ﬁnite automaton M that accepts L2 which has less than six states. □","libVersion":"0.3.2","langs":""}