{"path":"sem4/CN/UE/e/CN-u12-e.pdf","text":"Exercise 12: BGP Security, Routing Attacks, DNS, and DNSSEC Note: This exercise sheet contains exercise about DNSSEC from the “Network Security” lecture exams HS19 - HS17. Note that only the content from the Computer Networks lecture is relevant for the exam. Question 1: TCP reset attacks [1] Note: In the book from the lecture (K.Ross, J. Kurose, CN - A top down approach) the TCP sequence number is a (randomly initialized) integer that is increased by one for subsequent packets, intuitively “having the meaning of a packet id”. In the TCP implementation the sequence number of a packet is again a (randomly initialized) integer that is increased by the length of the incoming packet, intuitively “having the meaning of the current byte traffic offset. In this exercise we talk about the”byte-offset” sequence number as in the implementation Suppose two Internet routers exchange BGP routing updates over a long-lived TCP connection between them. Suppose the window size of the TCP connection on the receiver side is 2 16 bytes [1] and the sequence number is 32 bit. Assume both TCP endpoints select their initial sequence numbers uniformly at random. Derive the expected number of packets required for an attacker to successfully reset the connection. State your assumptions. Hint: To reset a TCP connection, an attacker must send a TCP RST packet with a sequence number within the sliding window. Question 2: BGP Attacks In this problem, we would like you to explain and analyze two attacks against the BGP routing protocol. Assume each AS assigns the same local pref values to each of their neighbors. In both attacks, the attacker, who has control over AS999, targets AS1000. The following figure shows the routing paths in the normal state after AS1000 has announced 192.0.2.0/24: 1 Each circle represents an Autonomous System (AS). A solid line indicates a link over which two neighboring ASes can exchange control messages such as BGP update messages. A dashed line indicates an established AS path to 192.0.2.0/24. Question 2.1 Under attack, the situation looks as follows: Is this attack possible? If yes, describe the most likely scenario that could explain the result of this situation. Solve this by specifying what AS999 announced. 2 Question 2.2 In the second type of attack illustrated above, the attacker can silently redirect the hijacked traffic back to the victim along the path indicated by green lines. This attack relies on two mechanisms: - path prepending, where an AS inserts AS numbers at the beginning of an AS path to make the path less preferable for traffic engineering purpose, and - loop prevention, where an AS drops any BGP update with itself in the AS-path attribute to prevent routing loops. Instead of announcing the ownership of an address block, AS999 announces a spurious BGP update: {IP prefix, {AS x, AS y, ...}}. Specify a BGP update message that could cause the result of the attack scenario above. Question 2.3 Briefly explain how the attacker abuses path prepending and loop prevention for malicious purposes. Question 2.4 List one advantage and one disadvantage of this attack from the attacker’s point of view. Question 3: Link weight attacks In the network below, node E is malicious. It announces wrong weights to launch attacks in the network. The weights are integers greater than 0 in this problem. Shortest paths are used to send data traffic in the network, and 3 Dijkstra’s algorithm is used to construct the shortest paths between source and destination node. Question 3.1 Suppose node E wants to direct all of the network’s traffic destined to node D via node C. What are the weights node E should announce for links EF, ED and EC for this attack while minimizing the sum of the weights? Note: Our solution uses: • python • pulp package to solve the ILP (https://coin-or.github.io/pulp/) • networkx package to automatically generate the constraints from the graph (https://networkx.org/) (optional, constraints can also be defined manually) Question 3.2 What weights should node E announce if it does not want to receive any network traffic destined to ISP D or ISP C while minimizing the sum of the weights? A possibility is again to construct an ILP from this. Your solution can also be given in an ILP (Pseudo) Code that computes the weights. Question 3.3 Node E now wants to attract all of the network’s traffic destined to node D towards itself. How would node E achieve its goal with the least deviation from the current weights, i.e., by only reducing the value of one link? 4 Question 4: DNS and DNSSEC Question 4.1: DNS root servers The following two questions relate to DNS root name servers, the basic footing of the global DNS infrastructure. 1. Name three reasons why root name servers are replicated across the globe. 2. A recent proposal suggests to eliminate DNS root servers altogether and distribute the data that would be on those root servers (i.e., the root zone file) to recursive resolvers. This proposal has a security benefit for DNS (not DNSSEC). What is the security benefit of this proposal for DNS? Question 4.2: Caching resolvers Recursive resolvers have an important role in DNS: by caching the replies they obtain, they significantly lower the average lookup latency for end hosts using the resolvers. However, the use of caching is not without its drawbacks. 1. Name and describe one drawback in terms of privacy. 2. Why would an adversary prefer a world in which caching resolvers are used extensively (as they are in our world) over a world in which all end hosts’ clients perform the full recursive look-ups on their own? In other words: Which vulnerabilities does this expose? Question 4.3 Attacks on DNS(SEC) For the two attacks on DNS below, state whether the deployment of DNSSEC would make the attack less effective, equally effective or more effective. Moreover, justify your answer. 1. Reflection/Amplification Attack 2. DNS Spoofing (injecting fake DNS records) Question 4.4 Attacks circumventing DNSSEC Recall that DNSSEC is typically used only between recursive resolvers and authoritative name servers. Assuming DNSSEC is fully deployed, consider an end host that fully trusts the recursive resolvers provided by its ISP (so it also trusts that the resolver will always use DNSSEC). 1. What attack undermining the authenticity of the query replies should the end host still worry about, and why? 2. What countermeasure (if any) could be adopted to prevent or significantly mitigate the attack you mentioned? Briefly explain your answer. 5","libVersion":"0.5.0","langs":""}