{"path":"sem4/CN/VRL/extra/slides/CN-s08-network-layer.pdf","text":"Computer Networks: Lecture 8: Network Layer Adrian Perrig Network Security Group ETH Zürich Photo: ETH Zürich / Gian Marco Castelberg Where we are in the course … Starting the Network Layer! • Builds on the link layer, provides service to transport layer • Routers send packets over multiple networks 2 Physical Link Network Transport Application Why do we need a Network layer? How do packets reach the destination? • E.g., HTTP, DNS messages, how can they reach server / client? Internet 3 Not like this… 4 Network Layer Challenges Scale to a global Internet • Hierarchy, e.g., in the form of prefixes Heterogeneity • IP for internetworking Bandwidth Control • Lowest-cost routing • QoS (Quality of Service) Economics • Network traffic needs to be economically viable 5 Topics at the Network Layer • Network service models • Datagrams (packets), virtual circuits • IPv4 (Internet Protocol version 4) • Internetworking • IP addresses • Forwarding (Longest Matching Prefix) • Helpers: ARP and DHCP • Fragmentation and MTU discovery • Errors: ICMP (traceroute!) • NAT, a “middlebox” • IPv6, the future of IP • Routing algorithms 6 Routing vs. Forwarding (1/2) Routing is the process of deciding in which direction to send traffic (control plane of network) • Network wide (global) and expensive Which way? Which way? Which way? 7 Routing vs. Forwarding (2/2) Forwarding is the process of sending a packet on its way (data plane of network) • Node process (local) and fast 8 Forward! packet Our Plan Forwarding this time • What routers do with packets Routing next time • Logically this comes first • But ignore it for now 9 Network Service Models Network Service Model What kind of service does the Network layer provide to the Transport layer? • How is it implemented at routers? Service? What’s he talking about? 11 Two Network Service Models Datagrams, or connectionless service • Like postal letters • (This one is IP) Virtual circuits, or connection-oriented service • Like a telephone call • Imagine an end-to-end cable 12 Store-and-Forward Packet Switching (§1.3.1) Both models are implemented with store-and-forward packet switching • Routers receive a complete packet, storing it temporarily (if necessary) before forwarding it onwards • We use statistical multiplexing to share link bandwidth over time 13 Store-and-Forward (2) Switching element has internal buffering for contention. . . . . . . . .. . . Input Buffer Output Buffer Fabric Input Output 14 Store-and-Forward (3) Simplified view with per-port output buffering • Buffer is typically a FIFO (First In First Out) queue • If full, packets are discarded (congestion) (FIFO) Queue Queued Packets Router Router = 15 Datagram Model Packets contain a destination address; each router uses it to forward each packet, possibly on different paths ISP’s equipment 16 Datagram Model (2) Each router has a forwarding table keyed by address • Gives next hop for each destination address; may change A’s table (initially) A’s table (later) C’s Table E’s Table B B 17 IP (Internet Protocol) Network layer of the Internet, uses datagrams • IPv4 carries 32 bit src / dst addresses in each packet Payload (e.g., TCP segment) 18 Virtual Circuit Model (§1.3.2) Three phases: 1. Connection establishment, circuit is set up • Path is chosen, circuit information stored in routers 2. Data transfer, circuit is used • Packets are forwarded along the path 3. Connection teardown, circuit is deleted • Circuit information is removed from routers Just like a telephone circuit, but virtual in the sense that no bandwidth need be reserved; statistical sharing of links 19 Virtual Circuits (2) Packets only contain a short label to identify the circuit • Labels don’t have any global meaning, only unique for a link ISP’s equipment 20 Virtual Circuits (3) Each router has a forwarding table keyed by circuit • Gives output line and next label to place on packet A’s table C’s Table E’s Table 1 1 Circuit #1 Circuit #2 H3 H1 F F 5 5 21 Virtual Circuits (4) Each router has a forwarding table keyed by circuit • Gives output line and next label to place on packet A’s table C’s Table E’s Table 1 1 Circuit #1 Circuit #2 5 2 2 2H3 H1 1 1 F F 5 5 22 MPLS: Multi-Protocol Label Switching (§6.5.1) A virtual-circuit like technology widely used by ISPs, typically for internal communication • ISP sets up circuits inside their backbone ahead of time • ISP adds MPLS header to IP packet at ingress, removes it at egress 23 Datagrams vs Virtual Circuits Complementary strengths Issue Datagrams Virtual Circuits Setup phase Not needed Required Router state Per destination Per connection Addresses Packet carries full address Packet carries short label Routing Per packet Per circuit Failures Easier to mask Difficult to mask Quality of service Difficult to add Easier to add 24 Internetworking, IPv4 Internetworking How do we connect different networks together? • This is called internetworking • We’ll look at how IP does it Hi there! Hi yourself 26 How Networks May Differ Basically, in a lot of ways: • Service model (datagrams, VCs) • Addressing (what kind) • QoS (priorities, no priorities) • Packet sizes • Security (whether encrypted, source authenticated, verified forwarding) Internetworking hides the differences with a common protocol (Uh oh.) 27 Connecting Datagram and VC networks An example to show that it’s not so easy • Need to map destination address to a VC and vice-versa • A bit of a “road bump”, e.g., might have to set up a VC Bump! Bump! Virtual circuit 28 Internetworking – Cerf and Kahn Pioneered by Cerf and Kahn, the “fathers of the Internet” • In 1974, later led to TCP/IP Tackled the problems of interconnecting networks • Instead of mandating a single network technology © 2009 IEEE © 2009 IEEE Vint Cerf Bob Kahn 29 Internet Reference Model IP is the “narrow waist” of the Internet • Supports many different links below and apps above 7. Application 4. Transport 3. Internet 2/1. Link Ethernet 802.11 IP TCP UDP HTTPSMTP RTP DNS 3G DSLCable 30 IP as a Lowest Common Denominator Suppose only some networks support QoS or security etc. • Difficult for internetwork to support Pushes IP to be a “lowest common denominator” protocol • Asks little of lower-layer networks • Gives little as a higher layer service 31 IPv4 (Internet Protocol) (§4.3.1) Various fields to meet straightforward needs • Version, Header (IHL) and Total length, Protocol, and Header Checksum Payload (e.g., TCP segment) 32 IPv4 (2) Network layer of the Internet, uses datagrams • Provides a layer of addressing above link addresses (next) Payload (e.g., TCP segment) 33 IPv4 (3) Some fields to handle packet size differences (later) • Identification, Fragment offset, Fragment control bits Payload (e.g., TCP segment) 34 IPv4 (4) Other fields to meet other needs (explained later) • Differentiated Services, Time to live (TTL) Payload (e.g., TCP segment) Later, with ICMP QoS Quality of Service 35 IPv4 Addresses IP Prefixes (§4.3.3) What do IP addresses look like? • And IP prefixes, or blocks of addresses • (This is IPv4; we’ll cover IPv6 later.) To: 128.0.32.4 From: 18.31.0.67 18.31.0.67 37 IP Addresses IPv4 uses 32-bit addresses • Later we’ll see IPv6, which uses 128-bit addresses Written in “dotted quad” notation • Four 8-bit numbers separated by dots aaaaaaaabbbbbbbbccccccccdddddddd ↔ A.B.C.D 8 bits 8 bits 8 bits 8 bits 00010010000111110000000000000001 ↔ 38 IP Prefixes – Modern Addresses are allocated in blocks called prefixes • Addresses in an L-bit prefix have the same top L bits • There are 2 32-L addresses aligned on 2 32-L boundary 39 IP Prefixes (2) Written in “IP address/length” notation • Address is lowest number in the prefix (all trailing (32-length) bits are set to 0), length is prefix bits • E.g., 128.13.0.0/16 is 128.13.0.0 to 128.13.255.255 • So a /24 (“slash 24”) is 256 addresses, and a /32 is one address (also called a “host route”) 000100100001111100000000xxxxxxxx ↔ ↔ 128.13.0.0/16 40 IP Prefixes (3) More specific prefix • Has longer prefix, hence a smaller number of IP addresses Less specific prefix (also called “more general prefix”) • Has shorter prefix, hence a larger number of IP addresses Prefix length Addresses in prefix /8 /16 /24 /32/0 2028216224232 Less specific More specific 41 prefix part A /24 prefix means that we have 8 bits left for host addresses, enough for 256 hosts? 01010010.10000010.01100110. 00000001 11111110 00000010 00000000 11111111 82.130.102.0 82.130.102.255 82.130.102.1 82.130.102.2 82.130.102.254 01010010.10000010.01100110. 01010010.10000010.01100110. 01010010.10000010.01100110. 01010010.10000010.01100110. 82.130.102.0 /24 host part IP address Example Address Allocation 42 prefix part 01010010.10000010.01100110. 00000000 11111111 82.130.102.0 82.130.102.25501010010.10000010.01100110. host part IP address Network Identifier Broadcast Address In practice, the first and last IP address of a prefix are not usable, so a /24 has therefore only 254 addresses that can be allocated to hosts 43 Address 82.130.102.49 Mask 255.255.255.0 01010010.10000010.01100110. 00110001 11111111.11111111.11111111. 00000000 Prefixes are also sometimes specified using an address and a mask 44 Address 82.130.102.49 Mask 255.255.255.0 01010010.10000010.01100110. 00110001 11111111.11111111.11111111. 00000000 01010010.10000010.01100110. 00000000Prefix and 82.130.102.0 better written: 82.130.102/24 ANDing the address and the mask gives you the prefix 45 82.130.0.0/17Given this IP prefix Compute network address 1st host address last host address broadcast address # of addressable hosts the prefix mask 46 82.130.0.0/17Given this IP prefix Compute network address 1st host address last host address broadcast address # of addressable hosts the prefix mask 82.130.0.1 82.130.127.254 82.130.127.255 82.130.0.0 255.255.128.0 32,766 47 IP Address Classes – Historical Originally, IP addresses came in fixed size blocks with the class/size encoded in the high-order bits • They still exist, but the classes are now ignored 0 10 110 0 16 24 32 bits8 Class A, 224 addresses Class B, 216 addresses Class C, 28 addresses Network portion Host portion 48 Public / Private IP Addresses Public IP addresses, e.g., 18.31.0.1 • Valid destination on the global Internet • Must be allocated to you before use • Now exhausted … time for IPv6! Private IP addresses (RFC 1918) • Can be used freely within private networks (home, small company, VPN) • 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 • Need public IP address(es) and NAT to connect to global Internet Source: https://xkcd.com/742/ 49 Allocation and Ownership of IP Prefixes Follows a hierarchical process • Internet Assigned Numbers Authority (IANA) delegates to regional internet registries (RIRs) • RIRs delegate to companies in their region • Companies assign to their customers/computers (later, DHCP) ICANN / IANA Source: https://www.iana.org/numbers RIPE NCCARIN AFRINIC APNIC LACNIC LIRISP Regional Internet Registries (RIRs) 50https://www.caida.org/research/id-consumption/whois-map/https://xkcd.com/195/ IP Forwarding IP Forwarding How do routers forward packets? • We’ll look at how IP does it • (We’ll cover routing later) Forward! packet 53 Recap We want the network layer to: • Scale to large networks - Using addresses with hierarchy • Support diverse technologies - Internetworking with IP • Use link bandwidth well - Lowest-cost routing Next time More later This lecture 54 IP Forwarding • IP addresses on one network belong to the same prefix • Node uses a table that lists the next hop for IP prefixes D CB A Prefix Next Hop 192.24.0.0/18 D 192.24.12.0/22 B 55 Longest Matching Prefix (§4.2.1) Prefixes in the table might overlap! • Combines hierarchy with flexibility Longest matching prefix forwarding rule: • For each packet, find all matching prefixes, i.e., prefixes that contain the destination address • Find the longest (most specific) prefix from that set • Forward the packet to the next-hop router for that prefix 56 Longest Matching Prefix (2) Rule Prefix Next Hop 1 192.24.0.0/18 D 2 192.24.12.0/22 B 192.24.0.0 192.24.63.255 /18 /22 192.24.12.0 192.24.15.255 IP address More specific D B D Destination Matching rules Next hop 192.24.6.0 1 D 192.24.14.32 1, 2 B 192.24.54.0 1 D 57 Compress Forwarding Table Rule Prefix Next Hop 1 192.24.0.0/18 D 2 192.24.12.0/22 B 3 192.24.16.0/23 D 4 192.24.12.0/24 D 1 3 2 4 Rule Prefix Next Hop 1 192.24.0.0/18 D 2 192.24.12.0/22 B 4 192.24.12.0/24 D 1 2 4 58 Host/Router Distinction In the Internet: • Routers do the routing, know which way to all destinations • Hosts send remote traffic (out of prefix) to nearest router It’s my job to know which way to go … Not for my network? Send it to the router 59 Host Forwarding Table Give using longest matching prefix • 0.0.0.0/0 is a default route that catches all IP addresses Prefix Next Hop My network prefix Send direct to that IP 0.0.0.0/0 Send to my router markus@mlegner:~$ route -n Kernel IP routing table Destination Gateway Genmask Iface 192.168.1.0 0.0.0.0 255.255.255.0 eth2 0.0.0.0 192.168.1.1 0.0.0.0 eth2 60 Flexibility of Longest Matching Prefix Can provide default behavior, with less specific prefixes • To send traffic going outside an organization to a border router Can provide special case behavior, with more specific prefixes • For performance, economics, security, … 61 Size of Forwarding Tables Keeps Growing Source: https://www.cidr-report.org 62 Performance of Longest Matching Prefix Hierarchical addresses result in a compact table • Less specific prefixes reduce table size Finding longest match more complex than table lookup • Was a concern for fast routers, but not an issue in practice these days thanks to TCAM (ternary content-addressable memory) • However, TCAMs consume a lot of power … 63 Other Aspects of Forwarding Decrement TTL value • Protects against loops Check and recalculate header checksum • To add reliability Fragment large packets • Split to fit it on next link Send congestion signals • Warns hosts of congestion Generate error messages • To help mange network Handle various options Payload (e.g., TCP segment) 64 IP Helper Protocols Helping IP with ARP, DHCP (§4.3.3) Filling in the gaps we need to make IP forwarding work in practice • Getting IP addresses (DHCP) • Mapping IP to link addresses (ARP) What link layer address do I use? What’s my IP? 66 Getting IP Addresses Problem: • A node wakes up for the first time … • What is its IP address? Network prefix? What is the IP address of default router? Address of DNS resolver? Etc. • At least link-layer (MAC – medium access control) address is on network interface card (NIC) Hey, where am I? 67 Getting IP Addresses (2) 1. Manual configuration (old days) • Can’t be factory set, depends on use 2. A protocol for automatically configuring addresses (DHCP) • Shifts burden from users to IT folks Use A.B.C.DWhat’s my IP? 68 DHCP (§4.3.3) • DHCP (Dynamic Host Configuration Protocol), from 1993, very widely used • It leases IP address to nodes • Provides other parameters too • Network prefix • Address of local router (aka. “default gateway”) • DNS server, time server, etc. 69 DHCP Protocol Stack DHCP is a client-server application • Uses UDP ports 67, 68 Ethernet IP UDP DHCP 70 DHCP Addressing Bootstrap issue: • How does node send a message to DHCP server before it is configured? Answer: • Node sends broadcast messages that are delivered to all nodes on the network • Broadcast address is all 1s • IP (32 bit): 255.255.255.255 • MAC (48 bit): ff:ff:ff:ff:ff:ff 71 DHCP Messages Client Server DISCOVER REQUEST OFFER ACK Broadcast 72 DHCP Messages (2) To renew an existing lease, an abbreviated sequence is used: • REQUEST, followed by ACK Protocol also supports replicated servers for reliability 73 IP Address conflict 74 How can this happen • Manual assignment errors • Change of networks • DHCP misconfigurations • Attacks • … Consequences? Sending an IP Packet Problem: • A node needs Link layer addresses to send a frame over the local link (more details in link-layer lecture) • How does it get the destination link address from a destination IP address? Uh oh … My IP is 1.2.3.4 75 ARP: Address Resolution Protocol (§6.4.1) Node uses it to map a local IP address to its Link layer addresses Source Ethernet Dest. Ethernet Source IP Dest. IP Payload … Link layer From DHCP From NIC From ARP 76 ARP Protocol Stack ARP sits right on top of link layer • No servers, just asks node with target IP to identify itself • Uses broadcast to reach all nodes Ethernet ARP 77 ARP Messages • ARP REQUEST is sent as Ethernet broadcast • Target (host with specified IP address) sends REPLY with its MAC address • Node stores reply in its ARP cache Node Target One link REQUEST Who has IP 1.2.3.4? REPLY I do at 1:2:3:4:5:6 Broadcast 78 Discovery Protocols Help nodes find each other • There are more of them! • E.g., zeroconf, Bonjour Often involve broadcast • Since nodes aren’t introduced • Very handy glue 79 Fragmentation, MTU, ICMP Big packet Packet Fragmentation (§4.3.2) How do we connect networks with different maximum packet sizes? • Need to split up packets, or discover the largest size to use It’s too big!Take that 81 Packet Size Problem Different networks have different maximum packet sizes or MTUs • MTU = Maximum Transmission Unit • E.g., Ethernet 1.5K, WiFi 2.3K Prefer large packets for efficiency • But what size is too large? • Difficult because node does not know complete network path 82 Packet Size Solutions Fragmentation • Split up large packets in the network if they are too big to send • Classic method (but dated) and slow for routers to fragment Discovery • Find the largest packet that fits on the network path and use it • IP uses this approach today instead of fragmentation 83 IPv4 Fragmentation (§4.3.2) • Routers fragment packets that are too large to forward • Receiving host reassembles to reduce load on routers Fragment! Reassemble! Fits on first link 84 IPv4 Fragmentation Fields Header fields used to handle packet size differences • Identification, Fragment offset, MF/DF control bits Payload (e.g., TCP segment) 85 IPv4 Fragmentation Procedure Routers split a packet that is too large: • Typically break into large pieces • Copy IP header to pieces • Adjust length on pieces • Set offset to indicate position • Set MF (More Fragments) on all pieces except last Receiving hosts reassembles pieces: • Identification field links pieces together, MF tells receiver when it has all pieces 86 IPv4 Fragmentation (2) ID = 0x12ef Data Len = 2300 Offset = 0 MF = 0 ID = Data Len = Offset = MF = ID = Data Len = Offset = MF = Before MTU = 2300 After MTU = 1500 (Ignore length of headers) 87 IPv4 Fragmentation (3) ID = 0x12ef Data Len = 2300 Offset = 0 MF = 0 ID = 0x12ef Data Len = 1500 Offset = 0 MF = 1 ID = 0x12ef Data Len = 800 Offset = 1500 MF = 0 Before MTU = 2300 After MTU = 1500 (Ignore length of headers) 88 IPv4 Fragmentation (4) Important property: repeated fragmentation possible! But in practice, fragmentation is undesirable • More work for routers, hosts • Magnifies severity of packet loss (lost fragment prevents reception of entire packet) • Security vulnerabilities • Intrusion detection system evasion • DoS on server • DNS Cache Poisoning (e.g., paper: “Poison Over Troubled Forwarders: A Cache Poisoning Attack Targeting DNS Forwarding Devices”) 89 Path MTU Discovery Discover the MTU that will fit • So we can avoid fragmentation • The method in use today Host tests path with large packet (with “don’t fragment” flag set) • Routers provide feedback if too large; they tell host what size would have fit 90 Path MTU Discovery (2) Try 1200 Try 900 MTU=1200 bytes MTU=900MTU=1400 91 Path MTU Discovery (3) Try 1200 Try 900 Test #2 Test #3 MTU=1200 bytes MTU=900MTU=1400 Test #1 92 Path MTU Discovery (4) Standard exists to convey MTU to host in ICMP message, but not implemented in practice • Hosts today use heuristics on which MTUs to try Path MTU depends on the path, so can change over time • Periodic attempt to increase MTU Implemented with ICMP (next) • Set DF (Don’t Fragment) bit in IP header to get feedback messages • Unfortunately, some networks block ICMP messages for security reasons, which is why systems today use heuristics for MTU selection 93 Error Handling with ICMP (§5.6) What happens when something goes wrong during forwarding? • Need to be able to find the problem Yikes!What happened? XXXXXXX 94 Internet Control Message Protocol ICMP is a companion protocol to IP • They are implemented together • Sits on top of IP (IP Protocol=1) Provides error report and testing • Error is at router while forwarding • Also testing that hosts can use 95 ICMP Errors When router encounters an error while forwarding: • It sends an ICMP error report back to the IP source address • It discards the problematic packet; host needs to rectify Report then toss it!Oh, now I see … XXXXXXX ICMP report 96 ICMP Message Format • Each ICMP message has a Type, Code, and Checksum • Often carry the start of the offending packet as payload • Each message is carried in an IP packet 97 ICMP Message Format (2) • Each ICMP message has a Type, Code, and Checksum • Often carry the start of the offending packet as payload • Each message is carried in an IP packet Src=router, Dst=A Protocol = 1 Type=X, Code=Y Src=A, Dst=B XXXXXXXXXXXXXXX Portion of offending packet, starting with its IP header ICMP headerIP header ICMP data 98 Example ICMP Messages Name Type / Code Usage Dest. Unreachable (Net or Host) 3 / 0 or 1 Lack of connectivity Dest. Unreachable (Fragment) 3 / 4 Path MTU Discovery Time Exceeded (Transit) 11 / 0 Traceroute Echo Request or Reply 8 or 0 / 0 Ping Testing, not a forwarding error: Host sends Echo Request, and destination responds with an Echo Reply 99 Traceroute IP header contains TTL (Time to live) field • Decremented every router hop (and for every second packet is kept in router buffer), with ICMP error if it hits zero • Protects against forwarding loops 100 Traceroute (2) Traceroute repurposes TTL and ICMP functionality • Sends probe packets increasing TTL starting from 1 • ICMP errors identify routers on the path . . . Local Host Remote Host TTL = 1 TTL = 2 TTL = 3 TTL = N-1 TTL = N 101 Traceroute example $ traceroute www.google.com traceroute to www.google.com (172.217.168.68), 64 hops max, 40 byte packets 1 rou-cx-1-inf-isec-cx-dock-1-a.ethz.ch (192.33.93.1) 1.315 ms 0.678 ms 0.606 ms 2 rou-bgw-hci-inf-isec.intern.ethz.ch (10.1.17.246) 0.972 ms 0.847 ms 0.823 ms 3 rou-fw-hci-inf-isec.intern.ethz.ch (10.1.17.242) 0.954 ms 0.938 ms 0.908 ms 4 rou-fw-rz-fw-hci.ethz.ch (192.33.92.185) 0.993 ms 0.826 ms 0.828 ms 5 rou-fw-rz-gw-rz.ethz.ch (192.33.92.170) 0.848 ms 0.784 ms 0.776 ms 6 swiez3.ethz.ch (192.33.92.11) 2.332 ms 3.731 ms 3.961 ms 7 swiix3-b1.switch.ch (130.59.36.177) 1.316 ms 1.347 ms 1.243 ms 8 72.14.195.4 (72.14.195.4) 2.127 ms 2.334 ms 2.057 ms 9 * * * 10 172.253.50.16 (172.253.50.16) 1.714 ms 172.253.50.18 (172.253.50.18) 2.812 ms zrh04s15-in-f4.1e100.net (172.217.168.68) 1.651 ms Recommended to read: man traceroute 102 Network Address Translation (NAT) Layering Review Remember how layering is meant to work? • “Routers don’t look beyond the IP header.” • Unfortunately, this rule is not always obeyed in practice… TCP IP 802.11 App IP 802.11 IP Ethernet TCP IP 802.11 App IP 802.11 IP Ethernet Router 802.11 104 TCP IP 802.11 App IP 802.11 IP Ethernet TCP IP 802.11 App IP 802.11 IP Ethernet 802.11 Middleboxes Sit “inside the network” but perform “more than IP” processing on packets to add new functionality • NAT box, Firewall / Intrusion Detection System Middlebox App / TCP 105 Middleboxes (2) Advantages • A possible rapid deployment path when there is no other option • Control over many hosts Disadvantages • Breaking layering interferes with connectivity; strange side effects • Poor vantage point for many tasks • Cause Internet ossification: makes it more challenging to deploy new protocols 106 Network Address Translation (§4.3.4) NAT box connects an internal network to an external network • Many internal hosts are connected using few external addresses • Middlebox that “translates addresses” (and ports) Motivated by IPv4 address scarcity Controversial at first, now widely used and accepted 107 NAT Common scenario: • Home computers use “private” IP addresses (RFC 1918, e.g., 192.168.0.0/16) • NAT (in home router) connects home to Internet service provider (ISP) using a single external IP address ISP Unmodified computers at home Looks like one computer outside NAT box 108 How NAT Works NAT device keeps an internal/external table • Typically uses IP address + TCP/UDP port (transport layer) • This is address and port translation Why do we need to change the port? • In case multiple hosts use the same port, at least one needs to be changed (fewer external IP addresses) Internal IP:port External IP:port 192.168.1.12 : 5523 44.25.80.3 : 1500 192.168.1.13 : 1234 44.25.80.3 : 1501 192.168.2.20 : 1234 44.25.80.3 : 1502 What ISP thinksWhat host thinks 109 Internal IP:port External IP:port How NAT Works (2) Need to enter new translations in the table for it to work • Create external port and insert into table when host makes a TCP connection Internal IP:port External IP:port 192.168.1.12:5523 44.25.80.3:1500 NAT box External Destination IP=X, port=Y Internal Source IP=192.168.1.12, port=5523 Src = 192.168.1.12:5523 Dst = X:Y Src = 44.25.80.3:1500 Dst = X:Y 110 How NAT Works (3) Internal  External: • Look up and rewrite source IP/port • Create new entry if none exists Internal IP:port External IP:port 192.168.1.12:5523 44.25.80.3:1500 NAT box External Destination IP=X, port=Y Internal Source IP=192.168.1.12, port=5523 Src = 192.168.1.12:5523 Dst = X:Y Src = 44.25.80.3:1500 Dst = X:Y 111 How NAT Works (4) External  Internal: • Look up and rewrite destination IP/port • Block traffic if no matching entry exists • Can manually configure port forwarding Internal IP:port External IP:port 192.168.1.12:5523 44.25.80.3:1500 NAT box External Source IP=X, port=Y Internal Destination IP=192.168.1.12, port=5523 Src = X:Y Src = X:Y Dst = 192.168.1.12:5523 Dst = 44.25.80.3:1500 112 Enabling Incoming Connections: Port Forwarding Problem: How to deploy publicly accessible services (e.g., a webserver) with NAT? Solution: Manually configure entries in NAT table – “port forwarding” Example: Packets to ports 80 (HTTP) and 443 (HTTPS) are forwarded to webserver in private network 113 NAT Downsides Connectivity has been broken! • Can only receive incoming packets after an outgoing connection is set up • Difficult to run servers at home – requires explicit “port-forwarding” rules Additional issues when there are no connections (UDP apps) • Often solved with regular “keep-alive” messages to keep table entries Breaks apps that unwisely represent their IP addresses as ASCII within packet data (e.g., FTP) 114 NAT Upsides Relieves much IP address scarcity pressure • Many (most) home hosts behind NATs Easy to deploy • Rapidly, and by you alone • Very flexible in terms of address space Useful functionality • Firewall • Hides internal network structure and configuration (enhances privacy) Kinks will get worked out eventually • “NAT Traversal” for incoming traffic 115 IPv6 IP Version 6 (§4.3.5) The replacement for IPv4 that was standardized in 1998 and is now (still) being deployed Why do I want IPv6 again? 117Source: https://iotbusinessnews.com/2019/05/16/04619-internet-of-things-now-numbers-22-billion-devices-but-where-is-the-revenue/ 118 IPv4 Address Exhaustion Source: https://commons.wikimedia.org/wiki/File:IPv4_exhaustion_time_line-en.svg 119 IPv4 Address Exhaustion (2) Source: https://commons.wikimedia.org/wiki/File:IPv4_IANA_and_RIR_exhaustion_time_line-en.svg 120 IP Version 6 to the Rescue Effort started by the IETF in 1994 • Much larger addresses (128 bits) • Many sundry improvements • Not backwards compatible Became an IETF standard in 1998 • Nothing much happened for a decade • Hampered by deployment issues, and a lack of adoption incentives • Big push after 2011 as exhaustion looms 121 IPv6 Deployment Percentage of users accessing Google via IPv6 Source: https://www.google.com/intl/en/ipv6/statistics.html#tab=ipv6-adoption 122 IPv6 Deployment (2) Percentage of users accessing Google via IPv6 Source: https://www.google.com/intl/en/ipv6/statistics.html#tab=ipv6-adoption 123 IPv4/IPv6 Header Comparison Source: https://www.cisco.com/en/US/technologies/tk648/tk872/technologies_white_paper0900aecd8054d37d.html 124 IPv4/IPv6 Header Comparison (2) New fields: • Flow label to group and identify packets belonging to one flow (20 bits) Modified/renamed fields: • TTL  Hop limit • Addresses: 32 bit  128 bit • Total length  Payload length • Differentiated services/TOS  Traffic class (8 bits) • Protocol  Next header (8 bits) 125 IPv4/IPv6 Header Comparison (3) Removed fields: • IHL: No longer needed as header size fixed to 40 bytes • Fragmentation flags, offset, Identification • Fragmentation causes more problems than it solves • Time-consuming operation for routers • In IPv6, end host needs to ensure that packets are small enough • Header checksum: • Calculating checksum is time-consuming for routers • Sufficient redundancy with checksums at link and transport layers • Options  separate extension headers identified by “next header” 126 IPv6 Addresses New notation • 8 groups of 4 hex digits (16 bits) • Omit leading zeros within each group • Omit one consecutive set of groups of zeros (normally longest one) Ex1: 2001:0db8:0000:0000:0000:ff00:0042:8329 • 2001:db8::ff00:42:8329 Ex 2: 2001:db8:0000:0000:1a12:0000:0000:1a13 • 2001:db8::1a12:0:0:1a13 • 2001:db8:0:0:1a12::1a13 127 IPv6 Address Organization • Hierarchical organization (like IPv4) • Routing prefix identifies responsible ISP • Subnet ID is a subnet or customer of the ISP • Interface identifier can be based on MAC address 128 Types of IPv6 Unicast Addresses An IPv6 host can have multiple addresses (at the same interface) Link Local: fe80::/10 (typically fe80::/64) • Every host has this • Automatically set up based on MAC address GUA (global unique address): currently 2000::/3 • Globally reachable • The “normal” IPv6 address ULA (unique local address): fc00::/7 • For local deployments • Similar to RFC 1918 address space • Can be NATed to GUA Approach to convert MAC address (48 bits) to link-local address (not relevant for exam): 1. take the MAC address, e.g., 52:74:f2:b1:a8:7f 2. place ff:fe in the middle: 52:74:f2:ff:fe:b1:a8:7f 3. xor first byte with 0x2: 50:74:f2:ff:fe:b1:a8:7f 4. reformat to IPv6 notation 5074:f2ff:feb1:a87f 5. prepend the link-local prefix: fe80::5074:f2ff:feb1:a87f 129 Special IPv6 Addresses • Loopback address: ::1/128 (like 127.0.0.1) • Unspecified address: ::0/128 • Special addresses for transition mechanisms • Addresses for documentation and example code • … 130 Neighbor Discovery Protocol (NDP) Provides ARP and DHCP Functionality for IPv6 • IPv6 hosts can be configured through Stateless address autoconfiguration (SLAAC) based on NDP • On startup, IPv6 hosts automatically set their link-local addresses • “Router Solicitation” and “Router Advertisement” provide DHCP-like functionality • Tell host about default gateway • Allow host to create global address • Hosts perform “Duplicate Address Detection” based on “Neighbor Solicitation” and “Neighbor Advertisement” • “Neighbor Solicitation” and “Neighbor Advertisement” replace ARP requests and responses • DHCPv6 can (but does not have to) be used for additional configuration 131 NAT with IPv6 NAT is still possible in IPv6 but no longer needed • Sufficiently large address space • End customers typically receive a /64 prefix Many routers are still configured to block incoming traffic (firewall) • Manual configuration similar to port forwarding is still necessary in this case 132 IPv6 Transition Mechanisms The Big Problem: • How to deploy IPv6? • Fundamentally incompatible with IPv4 Dozens of approaches proposed • Dual stack (speak IPv4 and IPv6) • Translators (convert packets): IPv4-mapped addresses • Tunnels (carry IPv6 over IPv4): 6in4, 6to4, 6over4, Teredo 133 Happy Eyeballs (RFC 8305) Problems: Should dual-stack hosts contact servers via IPv4 or IPv6? Solution: Try both but prefer IPv6 • Issue A (IPv4) and AAAA (IPv6) DNS queries simultaneously • If AAAA record is received, start connection setup over IPv6 immediately • If A record is received, wait 50 milliseconds for AAAA record • If first connection attempt (e.g., via IPv6) is unsuccessful, try again with different address (e.g., via IPv4) 134 IPv6 Transition: Tunneling Native IPv6 islands connected via IPv4 • Tunnel carries IPv6 packets across IPv4 network 135 IPv6 Transition: Tunneling (2) Tunnel acts as a single link across IPv4 network • Difficulty is to set up tunnel endpoints and routing IPv6 Link User User IPv4 Link IPv6IPv6 Link IPv6 Link IPv4 Link IPv6 IPv6 Link Native IPv4Native IPv6 Native IPv6 Tunnel 136","libVersion":"0.3.2","langs":""}