{"path":"sem2/AuW/VRL/slides/AuW-L02-cycles.pdf","text":"Kapitel 1.3 Zusammenhang Definition: Sei ein Graph. G=(V,E) G heisst zusammenhängend, wenn gilt: es gibt einen u-v-Pfad in G. ⇤u,v\u0000V,u⇥=v Zusammenhang Heute: Gegeben ein zusammenhängender Graph. Wie (sehr) zusammenhängend ist dieser Graph? Separatoren und k-Zusammenhang Definition: Sei ein Graph, und . X heisst , wenn und in verschiedenen Zusammen- hangskomponenten von liegen. G heisst k-zusammenhängend, wenn gilt: und Jeder hat Grösse . G=(V,E) <latexit sha1_base64=\"KbwhF3US58UKh7tzhUKsdQC++hk=\">AAAB6nicbVA9TwJBEJ3DL8Qv1NJmI5hYkTsKtTIkNpYYBUngQvaWPdiwt3fZnTMhF36CjYXG2PqL7Pw3LnCFgi+Z5OW9mczMCxIpDLrut1NYW9/Y3Cpul3Z29/YPyodHbROnmvEWi2WsOwE1XArFWyhQ8k6iOY0CyR+D8c3Mf3zi2ohYPeAk4X5Eh0qEglG00n01rfbLFbfmzkFWiZeTCuRo9stfvUHM0ogrZJIa0/XcBP2MahRM8mmplxqeUDamQ961VNGIGz+bnzolZ1YZkDDWthSSufp7IqORMZMosJ0RxZFZ9mbif143xfDKz4RKUuSKLRaFqSQYk9nfZCA0ZygnllCmhb2VsBHVlKFNp2RD8JZfXiXtes27qLl39UrjOo+jCCdwCufgwSU04Baa0AIGQ3iGV3hzpPPivDsfi9aCk88cwx84nz+ZNY1U</latexit> u <latexit sha1_base64=\"zt5njihctlxsryPtOeb3JRa1rsQ=\">AAAB6HicbZDLSgMxFIbPeK31VnXpJlgEV2VGQV1pwY3LFuwF2qFk0jNtbCYzJJlCKX0CNy4Uceur+AbufBvTaRfa+kPg4//PIeecIBFcG9f9dlZW19Y3NnNb+e2d3b39wsFhXcepYlhjsYhVM6AaBZdYM9wIbCYKaRQIbASDu2neGKLSPJYPZpSgH9Ge5CFn1FirOuwUim7JzUSWwZtD8fbzIlOlU/hqd2OWRigNE1Trlucmxh9TZTgTOMm3U40JZQPaw5ZFSSPU/jgbdEJOrdMlYazsk4Zk7u+OMY20HkWBrYyo6evFbGr+l7VSE177Yy6T1KBks4/CVBATk+nWpMsVMiNGFihT3M5KWJ8qyoy9Td4ewVtceRnq5yXvsuRW3WL5BmbKwTGcwBl4cAVluIcK1IABwhO8wKvz6Dw7b877rHTFmfccwR85Hz/bHI8r</latexit> v <latexit sha1_base64=\"311bxTJu1qo8zpqiXZ307DuUUcA=\">AAACAXicdVBNS0JBFJ1nX2ZfVpugzZAGbZT3XqK2CaFNS6P8ABWZN446OO+Dmfskedimv9KmRRFt+xft+jfNU4OKOnDhcM69M/ceJxBcgWl+GIml5ZXVteR6amNza3snvbtXV34oKatRX/iy6RDFBPdYDTgI1gwkI64jWMMZXcR+Y8yk4r53A5OAdVwy8HifUwJa6qYP2sBuIcqG2Vx2nM1ds4BIAr6cdtMZM39WLtqFIjbzplmybCsmdqlwWsCWVmJk0ALVbvq93fNp6DIPqCBKtSwzgE5EJHAq2DTVDpV+nI7IgLU09YjLVCeaXTDFx1rp4b4vdXmAZ+r3iYi4Sk1cR3e6BIbqtxeLf3mtEPrlTsS9IATm0flH/VBg8HEcB+5xySiIiSaESq53xXSoI6CgQ0vpEL4uxf+Tup23innzys5UzhdxJNEhOkInyEIlVEGXqIpqiKI79ICe0LNxbzwaL8brvDVhLGb20Q8Yb5/NYZZ7</latexit> u-v-Separator <latexit sha1_base64=\"9xIFSdbliyJqCWb/d25q73t1550=\">AAAB+nicdVDLSgMxFM3UV62vVpdugq3gqiRd9LGRggtdVrAPmA4lk6ZtaCYzJBmljP0UNy4UceuXuPNvzLQVVPTAhcM593LvPX4kuDYIfTiZtfWNza3sdm5nd2//IF847OgwVpS1aShC1fOJZoJL1jbcCNaLFCOBL1jXn16kfveWKc1DeWNmEfMCMpZ8xCkxVhrkC6VLt9PXzARcxhr2vNIgX0RlhBDGGKYE16rIkkajXsF1iFPLoghWaA3y7/1hSOOASUMF0drFKDJeQpThVLB5rh9rFhE6JWPmWipJwLSXLE6fw1OrDOEoVLakgQv1+0RCAq1ngW87A2Im+reXin95bmxGdS/hMooNk3S5aBQLaEKY5gCHXDFqxMwSQhW3t0I6IYpQY9PK2RC+PoX/k06ljKtldF0pNs9XcWTBMTgBZwCDGmiCK9ACbUDBHXgAT+DZuXcenRfnddmacVYzR+AHnLdPaYGTcw==</latexit> G[V\\X] <latexit sha1_base64=\"3uB0zmup+C4guFcLiVeHNjCWDDI=\">AAAB8nicdVDLSgMxFM3UV62vqks3wVZwISXpoo+NFNy4rGAfMB1KJs20oZnMkGQKZehnuHGhiFu/xp1/Y6atoKIHLhzOuZd77/FjwbVB6MPJbWxube/kdwt7+weHR8Xjk66OEkVZh0YiUn2faCa4ZB3DjWD9WDES+oL1/OlN5vdmTGkeyXszj5kXkrHkAafEWMktJ1dwNuASdsvDYglVEEIYY5gRXK8hS5rNRhU3IM4sixJYoz0svg9GEU1CJg0VRGsXo9h4KVGGU8EWhUGiWUzolIyZa6kkIdNeujx5AS+sMoJBpGxJA5fq94mUhFrPQ992hsRM9G8vE//y3MQEDS/lMk4Mk3S1KEgENBHM/ocjrhg1Ym4JoYrbWyGdEEWosSkVbAhfn8L/SbdawbUKuquWWtfrOPLgDJyDS4BBHbTALWiDDqAgAg/gCTw7xnl0XpzXVWvOWc+cgh9w3j4BxzaQRQ==</latexit> u,v2V <latexit sha1_base64=\"ATHrKkcfUTRp2NiOzkVUQSjcAVY=\">AAACCXicdVC7SgNBFJ31bXxFLW0GE8FCwkwKTRoRbCwVTAxkQ5id3Ojg7Ow6j0BY0tr4KzYWitj6B3b+jbMmgooeuNzDOfcyc0+USmEsIe/B1PTM7Nz8wmJhaXllda24vtE0idMcGjyRiW5FzIAUChpWWAmtVAOLIwkX0fVx7l8MQBuRqHM7TKETs0sl+oIz66VuEZdbODQuMmDhBjdD32OhnMFh5vYG4ajcLZZIhRBCKcU5oQf7xJN6vValNUxzy6OEJjjtFt/CXsJdDMpyyYxpU5LaTsa0FVzCqBA6Aynj1+wS2p4qFoPpZJ+XjPCOV3q4n2hfyuJP9ftGxmJjhnHkJ2Nmr8xvLxf/8trO9mudTKjUWVB8/FDfSWwTnMeCe0IDt3LoCeNa+L9ifsU049aHV/AhfF2K/yfNaoXuV8hZtXR0OIljAW2hbbSLKDpAR+gEnaIG4ugW3aNH9BTcBQ/Bc/AyHp0KJjub6AeC1w/qfpnZ</latexit> X✓V\\{u,v} <latexit sha1_base64=\"+zuiBKb7yluM7zEuZxM9Iq0Pq60=\">AAAB/XicdVDLSgMxFM3UV62v8bFzE2wFF1KSLvpwIQU3LivYB3RKyaRpG5rJDEmmUEvxV9y4UMSt/+HOvzHTVlDRA4HDOfdyT44fCa4NQh9OamV1bX0jvZnZ2t7Z3XP3Dxo6jBVldRqKULV8opngktUNN4K1IsVI4AvW9EdXid8cM6V5KG/NJGKdgAwk73NKjJW67lHO64eKCAHj8zH0uISN3EXXzaI8QghjDBOCS0VkSaVSLuAyxIllkQVL1Lruu9cLaRwwaaggWrcxikxnSpThVLBZxos1iwgdkQFrWypJwHRnOk8/g6dW6UGbwj5p4Fz9vjElgdaTwLeTATFD/dtLxL+8dmz65c6Uyyg2TNLFoX4soAlhUgXsccWoERNLCFXcZoV0SBShxhaWsSV8/RT+TxqFPC7m0U0hW71c1pEGx+AEnAEMSqAKrkEN1AEFd+ABPIFn5955dF6c18VoylnuHIIfcN4+AZt7lAY=</latexit> 8u,v2V: <latexit sha1_base64=\"rap13xcqF6QSAKfYWCSxUyyAdWk=\">AAAB8nicdVDLSgMxFM3UV62vqks3wVZwVZIu+thIwY3LCvYB06Fk0kwbmskMSUYo036GGxeKuPVr3Pk3ZtoKKnrgwuGce7n3Hj8WXBuEPpzcxubW9k5+t7C3f3B4VDw+6eooUZR1aCQi1feJZoJL1jHcCNaPFSOhL1jPn15nfu+eKc0jeWdmMfNCMpY84JQYK7nleX8OB2MGp+VhsYQqCCGMMcwIrteQJc1mo4obEGeWRQms0R4W3wejiCYhk4YKorWLUWy8lCjDqWCLwiDRLCZ0SsbMtVSSkGkvXZ68gBdWGcEgUrakgUv1+0RKQq1noW87Q2Im+reXiX95bmKChpdyGSeGSbpaFCQCmghm/8MRV4waMbOEUMXtrZBOiCLU2JQKNoSvT+H/pFut4FoF3VZLrat1HHlwBs7BJcCgDlrgBrRBB1AQgQfwBJ4d4zw6L87rqjXnrGdOwQ84b58u4pCI</latexit> |X|\u0000k <latexit sha1_base64=\"yCrqqb42lhf21TCjBNq7+JFdM1o=\">AAAB/nicdVBJSwMxGM3UrdZtVDx5CXYELy1JD10uUvDisaJdoC0lk2ba0MxCkimUoeBf8eJBEa/+Dm/+GzNtBRV9p8d73/rcSHClEfqwMmvrG5tb2e3czu7e/oF9eNRSYSwpa9JQhLLjEsUED1hTcy1YJ5KM+K5gbXdylfrtKZOKh8GdnkWs75NRwD1OiTbSwD5xYqfgTJ3CLYuIJDqU0Ok4AzuPigghjDFMCa6UkSG1WrWEqxCnlkEerNAY2O+9YUhjnwWaCqJUF6NI9xMiNaeCzXO9WJn5dEJGrGtoQHym+sni/Dk8N8oQema1FwYaLtTvHQnxlZr5rqn0iR6r314q/uV1Y+1V+wkPolizgC4XebGAOoRpFnDIJaNazAwhVHJzK6RjkwLVJrGcCeHrU/g/aZWKuFxEN6V8/XIVRxacgjNwATCogDq4Bg3QBBQk4AE8gWfr3nq0XqzXZWnGWvUcgx+w3j4BmAyT+A==</latexit> u-v-SeparatorX Definition: Sei ein Graph, und . G=(V,E) <latexit sha1_base64=\"3uB0zmup+C4guFcLiVeHNjCWDDI=\">AAAB8nicdVDLSgMxFM3UV62vqks3wVZwISXpoo+NFNy4rGAfMB1KJs20oZnMkGQKZehnuHGhiFu/xp1/Y6atoKIHLhzOuZd77/FjwbVB6MPJbWxube/kdwt7+weHR8Xjk66OEkVZh0YiUn2faCa4ZB3DjWD9WDES+oL1/OlN5vdmTGkeyXszj5kXkrHkAafEWMktJ1dwNuASdsvDYglVEEIYY5gRXK8hS5rNRhU3IM4sixJYoz0svg9GEU1CJg0VRGsXo9h4KVGGU8EWhUGiWUzolIyZa6kkIdNeujx5AS+sMoJBpGxJA5fq94mUhFrPQ992hsRM9G8vE//y3MQEDS/lMk4Mk3S1KEgENBHM/ocjrhg1Ym4JoYrbWyGdEEWosSkVbAhfn8L/SbdawbUKuquWWtfrOPLgDJyDS4BBHbTALWiDDqAgAg/gCTw7xnl0XpzXVWvOWc+cgh9w3j4BxzaQRQ==</latexit> u,v2V <latexit sha1_base64=\"kPwUt5jaSp/Djk6KjVz5bw6DExo=\">AAAB9HicdVBdSwJBFJ21L7Myq8depiToadk1TPclpAh6NMgP0EVmx6sOzn44MyvI4u/opYckeu3H9NZf6Fc0akFFHbhwOOde7r3HiziTyrLejNTK6tr6Rnozs7W9k93N7e3XZRgLCjUa8lA0PSKBswBqiikOzUgA8T0ODW94NfcbYxCShcGdmkTg+qQfsB6jRGnJbeK2jD0JCkb4upPLW6ZTLhbPytgyLcspOCVNHMexSza2tTJHvpJ7n2VTR5fVTu613Q1p7EOgKCdStmwrUm5ChGKUwzTTjiVEhA5JH1qaBsQH6SaLo6f4RCtd3AuFrkDhhfp9IiG+lBPf050+UQP525uLf3mtWPXKbsKCKFYQ0OWiXsyxCvE8AdxlAqjiE00IFUzfiumACEKVzimjQ/j6FP9P6gXTPjetW53GBVoijQ7RMTpFNiqhCrpBVVRDFI3QPXpEM2NsPBhPxvOyNWV8zhygHzBePgC/X5RR</latexit> X✓E X heisst , wenn und in verschiedenen Zusammenhangskomponenten von liegen. G heisst k-kanten-zusammenhängend, wenn gilt: Jeder hat Grösse . <latexit sha1_base64=\"q8k4hlCxL/iRAykMt8s4v+WP0Pg=\">AAACAXicdVBLSwMxGMzWV62vVS+Cl2BX8NKyu5a2XqTgRfBS0T6gLSWbpm1oNrsk2UJZ6sW/4sWDIl79F978N2bbCio6EBhmvi/JjBcyKpVtfxippeWV1bX0emZjc2t7x9zdq8sgEpjUcMAC0fSQJIxyUlNUMdIMBUG+x0jDG10kfmNMhKQBv1WTkHR8NOC0TzFSWuqaB1Zk5ayxlbtCXBGeuyEhEkgFomtm7fxZuegWitDO23bJcZ2EuKXCaQE6WkmQBQtUu+Z7uxfgyCdcYYakbDl2qDoxEopiRqaZdiT13XiEBqSlKUc+kZ14lmAKj7XSg/1A6MMVnKnfN2LkSznxPT3pIzWUv71E/MtrRapf7sSUh5FOh+cP9SMGVQCTOmCPCoIVm2iCsKD6rxAPdQNY6dIyuoSvpPB/UnfzTjFvX7vZyvmijjQ4BEfgBDigBCrgElRBDWBwBx7AE3g27o1H48V4nY+mjMXOPvgB4+0T672V8A==</latexit> u-v-Kanten-Separator <latexit sha1_base64=\"KbwhF3US58UKh7tzhUKsdQC++hk=\">AAAB6nicbVA9TwJBEJ3DL8Qv1NJmI5hYkTsKtTIkNpYYBUngQvaWPdiwt3fZnTMhF36CjYXG2PqL7Pw3LnCFgi+Z5OW9mczMCxIpDLrut1NYW9/Y3Cpul3Z29/YPyodHbROnmvEWi2WsOwE1XArFWyhQ8k6iOY0CyR+D8c3Mf3zi2ohYPeAk4X5Eh0qEglG00n01rfbLFbfmzkFWiZeTCuRo9stfvUHM0ogrZJIa0/XcBP2MahRM8mmplxqeUDamQ961VNGIGz+bnzolZ1YZkDDWthSSufp7IqORMZMosJ0RxZFZ9mbif143xfDKz4RKUuSKLRaFqSQYk9nfZCA0ZygnllCmhb2VsBHVlKFNp2RD8JZfXiXtes27qLl39UrjOo+jCCdwCufgwSU04Baa0AIGQ3iGV3hzpPPivDsfi9aCk88cwx84nz+ZNY1U</latexit> u <latexit sha1_base64=\"zt5njihctlxsryPtOeb3JRa1rsQ=\">AAAB6HicbZDLSgMxFIbPeK31VnXpJlgEV2VGQV1pwY3LFuwF2qFk0jNtbCYzJJlCKX0CNy4Uceur+AbufBvTaRfa+kPg4//PIeecIBFcG9f9dlZW19Y3NnNb+e2d3b39wsFhXcepYlhjsYhVM6AaBZdYM9wIbCYKaRQIbASDu2neGKLSPJYPZpSgH9Ge5CFn1FirOuwUim7JzUSWwZtD8fbzIlOlU/hqd2OWRigNE1Trlucmxh9TZTgTOMm3U40JZQPaw5ZFSSPU/jgbdEJOrdMlYazsk4Zk7u+OMY20HkWBrYyo6evFbGr+l7VSE177Yy6T1KBks4/CVBATk+nWpMsVMiNGFihT3M5KWJ8qyoy9Td4ewVtceRnq5yXvsuRW3WL5BmbKwTGcwBl4cAVluIcK1IABwhO8wKvz6Dw7b877rHTFmfccwR85Hz/bHI8r</latexit> v <latexit sha1_base64=\"+zuiBKb7yluM7zEuZxM9Iq0Pq60=\">AAAB/XicdVDLSgMxFM3UV62v8bFzE2wFF1KSLvpwIQU3LivYB3RKyaRpG5rJDEmmUEvxV9y4UMSt/+HOvzHTVlDRA4HDOfdyT44fCa4NQh9OamV1bX0jvZnZ2t7Z3XP3Dxo6jBVldRqKULV8opngktUNN4K1IsVI4AvW9EdXid8cM6V5KG/NJGKdgAwk73NKjJW67lHO64eKCAHj8zH0uISN3EXXzaI8QghjDBOCS0VkSaVSLuAyxIllkQVL1Lruu9cLaRwwaaggWrcxikxnSpThVLBZxos1iwgdkQFrWypJwHRnOk8/g6dW6UGbwj5p4Fz9vjElgdaTwLeTATFD/dtLxL+8dmz65c6Uyyg2TNLFoX4soAlhUgXsccWoERNLCFXcZoV0SBShxhaWsSV8/RT+TxqFPC7m0U0hW71c1pEGx+AEnAEMSqAKrkEN1AEFd+ABPIFn5955dF6c18VoylnuHIIfcN4+AZt7lAY=</latexit> 8u,v2V: <latexit sha1_base64=\"o8Ej1M121VehK86/Mz3VZiKNaiE=\">AAAB8nicdVDLSgMxFM34rPVVdekm2AquhplKbWcjBTcuK9gHtEPJpJk2NJOMSUYo036GGxeKuPVr3Pk3ZtoKKnrgwuGce7n3niBmVGnH+bBWVtfWNzZzW/ntnd29/cLBYUuJRGLSxIIJ2QmQIoxy0tRUM9KJJUFRwEg7GF9lfvueSEUFv9WTmPgRGnIaUoy0kbqlaWfaG5I7OC71C0XH9mqVynkNOrbjeGWvaojneW7Vha5RMhTBEo1+4b03EDiJCNeYIaW6rhNrP0VSU8zILN9LFIkRHqMh6RrKUUSUn85PnsFTowxgKKQpruFc/T6RokipSRSYzgjpkfrtZeJfXjfRYc1PKY8TTTheLAoTBrWA2f9wQCXBmk0MQVhScyvEIyQR1ialvAnh61P4P2mVbffCdm7KxfrlMo4cOAYn4Ay4oArq4Bo0QBNgIMADeALPlrYerRfrddG6Yi1njsAPWG+f8LORCA==</latexit> |X|\u0000k <latexit sha1_base64=\"35xtiVAXJmxiuSQgKdtbgQjo7ic=\">AAAB/HicdVDLSsNAFJ34rPVV7VKQwSJWkJJUapuFUhDRZQX7gDaUyXTSDp1MwsxECKX+h27cuFDErR/izr9x0iqo6IELh3Pu5d573JBRqUzz3ZiZnZtfWEwtpZdXVtfWMxubDRlEApM6DlggWi6ShFFO6ooqRlqhIMh3GWm6w9PEb14TIWnAr1QcEsdHfU49ipHSUjeTPd87zjcOzjqSKJ/ySMLWfjeTMwt2pVQ6rECzYJp20S5rYtu2VbagpZUEuer2bYK7Wjfz1ukFOPIJV5ghKduWGSpnhISimJFxuhNJEiI8RH3S1pQjn0hnNDl+DHe10oNeIHRxBSfq94kR8qWMfVd3+kgN5G8vEf/y2pHyKs6I8jBShOPpIi9iUAUwSQL2qCBYsVgThAXVt0I8QAJhpfNK6xC+PoX/k0axYB0VzEudxgmYIgW2wA7IAwuUQRVcgBqoAwxicA8ewZNxYzwYz8bLtHXG+JzJgh8wXj8AhrCXzw==</latexit> G 0 =(V,E\\X) <latexit sha1_base64=\"pzeQAEX7nhDjDT1PAKMgi0r9lbk=\">AAACBHicdVDLTgIxFO34RHyhLtk0MiZuIC0LHhtD4sbEDSbySICQTulAQ6czaTskhLBw46+4caExbv0Id/6NHcBEjZ7VyTn39vYcLxJcG4Q+nLX1jc2t7dROendv/+Awc3Tc1GGsKGvQUISq7RHNBJesYbgRrB0pRgJPsJY3vkz81oQpzUN5a6YR6wVkKLnPKTFW6meybuzm3YmbvybSMKlZRBQxoYJu2+1ncqiAEMIYw4TgcglZUq1WirgCcWJZ5MAK9X7mvTsIaRwwaaggWncwikxvRpThVLB5uhsn79MxGbKOpZIETPdmixBzeGaVAfTtaT+UBi7U7xszEmg9DTw7GRAz0r+9RPzL68TGr/RmXEaxDUiXh/xYQBPCpBE44IpRI6aWEKq4/SukI9sCNba3tC3hKyn8nzSLBVwqoJtirnaxqiMFsuAUnAMMyqAGrkAdNAAFd+ABPIFn5955dF6c1+XomrPaOQE/4Lx9AnP4lrU=</latexit> u-v-KantenseparatorX Heute: Spezialfall k=1 Deﬁnition: Sei ein zusammenhängender Graph. Ein Knoten heisst Artikulationsknoten (engl. cut vertex) gdw. nicht zusammenhängend ist Artikulationsknoten v2V G[V\\{v}] G=(V,E) Deﬁnition: Sei ein zusammenhängender Graph. Ein Kante heisst Brücke (engl. cut edge) gdw. nicht zusammenhängend ist Brücken G=(V,E) e2E G\u0000e Wie ﬁndet man Artikulationsknoten bzw Brücken efﬁzient ? Exkurs ( Wdh aus dem letzten Semester) Breiten- und TiefensucheBreiten- und Tiefensuche Tiefensuche root 1 2 3 4 5 6 7 8 9 10 11 12 Tiefensuche root 1 2 3 4 5 6 7 8 9 10 11 12 Tiefensuche root 1 2 3 4 5 6 7 8 9 10 11 12 Baumkanten Restkanten Tiefensuche root 1 2 3 4 5 6 7 8 9 10 11 12 <latexit sha1_base64=\"vC5ub+jIXSB7o+SlmlDKfN/OOko=\">AAACzHicbVFNb9NAEF2brxK+UjhyGZFSFQSR0wNFSEgRXOBSBUTaSkkUjddjZ5XdtbW7DomsXPmB3DjzR1g7rgQtI1l6++bN83zEhRTWRdGvILxx89btO3t3O/fuP3j4qLv/+MzmpeE05rnMzUWMlqTQNHbCSbooDKGKJZ3Hy491/nxFxopcf3ObgmYKMy1SwdF5at79PY0pE7pCKTL9ctuZOlq7Subft5PVDN69h8MdA0tJQltHkKT29WmpFJlXkAgChRpWuYaD1QFgaSHxnS3Ai0lvYTqFzqVDRkbwhSNHGkYpJo36KPatUywyWAmSpF/AByzVEnWtKnUCtUfnEFoPhWuhUDb2Br6SdY0UyBjy5r7Gv3Xfz0E6uRxq3u1F/agJuA4GLeixNkbz7s9pkvNSkXZcorWTQVS4WYXGCS7Jm5eWCuRLzGjioUZFdlY1x9jCc88kkObGf9pBw/5dUaGydqNir1ToFvZqrib/l5uULn07q4QuSr8bvvtRWkpwOdSX9ccwxJ3ceIDcCN8r8AUa5M7fv+OXMLg68nVwdtwfvOlHX457w2G7jj32lD1jR2zATtiQfWIjNmY8+BzkwTrYhKehC6twu5OGQVvzhP0T4Y8/MR/d/g==</latexit> low[v]:=kleinstedfs-Nummer,diemanvonvausdurcheinengerichtetenPfadaus(beliebigvielen)BaumkantenundmaximaleinerRestkanteerreichenkann. Tiefensuche root 1 3/1 4/3 5/3 6/3 8/3 9/1 10/10 11/10 12/10 dfs / low 7/3 2/1 <latexit sha1_base64=\"vC5ub+jIXSB7o+SlmlDKfN/OOko=\">AAACzHicbVFNb9NAEF2brxK+UjhyGZFSFQSR0wNFSEgRXOBSBUTaSkkUjddjZ5XdtbW7DomsXPmB3DjzR1g7rgQtI1l6++bN83zEhRTWRdGvILxx89btO3t3O/fuP3j4qLv/+MzmpeE05rnMzUWMlqTQNHbCSbooDKGKJZ3Hy491/nxFxopcf3ObgmYKMy1SwdF5at79PY0pE7pCKTL9ctuZOlq7Subft5PVDN69h8MdA0tJQltHkKT29WmpFJlXkAgChRpWuYaD1QFgaSHxnS3Ai0lvYTqFzqVDRkbwhSNHGkYpJo36KPatUywyWAmSpF/AByzVEnWtKnUCtUfnEFoPhWuhUDb2Br6SdY0UyBjy5r7Gv3Xfz0E6uRxq3u1F/agJuA4GLeixNkbz7s9pkvNSkXZcorWTQVS4WYXGCS7Jm5eWCuRLzGjioUZFdlY1x9jCc88kkObGf9pBw/5dUaGydqNir1ToFvZqrib/l5uULn07q4QuSr8bvvtRWkpwOdSX9ccwxJ3ceIDcCN8r8AUa5M7fv+OXMLg68nVwdtwfvOlHX457w2G7jj32lD1jR2zATtiQfWIjNmY8+BzkwTrYhKehC6twu5OGQVvzhP0T4Y8/MR/d/g==</latexit> low[v]:=kleinstedfs-Nummer,diemanvonvausdurcheinengerichtetenPfadaus(beliebigvielen)BaumkantenundmaximaleinerRestkanteerreichenkann. Tiefensuche root 1 3/1 4/3 5/3 6/3 8/3 9/1 10/10 11/10 12/10 dfs / low 7/3 2/1 Alle low-Werte sind mit DP in Zeit O(|V|+|E|) berechenbar: <latexit sha1_base64=\"Lwu7lDoJbu4vpOPE48QneuH/B4U=\">AAACtHicdVFNb9NAEF2br9Z8NMCxlxUpKJWqyO6hcAFVICSOBZGmktcK6/U4WWW9NrvjhMjKL+ytN/4NG8eI0sJIK715b55mdiatlLQYhj89/87de/cf7OwGDx89frLXe/rs3Ja1ETASpSrNRcotKKlhhBIVXFQGeJEqGKfzDxt9vABjZam/4qqCpOBTLXMpODpq0rtkccAQfmCjyuU6XiT0LWWF1ExBjoOtkuV2oxxR9r3mWStPmsHiaHlImdT045qyFKZSN8INYl32x7V0rlcdkXOlLD1ojQf0C1icc43g6hm9NsL/Le95Xfy2gM66dszI6QwPA5ZMev1wGLZBb4OoA33Sxdmkd8WyUtQFaBSKWxtHYYVJww1KoWAdsNpCxcWcTyF2UPMCbNK0S1/Tl47JaF4a9zTSlr3uaHhh7apIXWXBcWZvahvyX1pcY/4maaSuagQtto3yWlEs6eaCNJMGBKqVA1wY6WalYsYNF+juHLglRDe/fBucHw+jk2H4+bh/+q5bxw7ZJy/IgETkNTkln8gZGRHhRd7Y++Zx/8RnvvBhW+p7nec5+St8/QtkKtTd</latexit> low[v]=min dfs[v], min (v,w)2E (dfs[w], falls(v,w)Restkantelow[w], falls(v,w)Baumkante ! Tiefensuche Alle low-Werte sind mit DP in Zeit O(|V|+|E|) berechenbar: root 1 2 3 4 5 6 7 8 9 10 11 12 <latexit sha1_base64=\"Lwu7lDoJbu4vpOPE48QneuH/B4U=\">AAACtHicdVFNb9NAEF2br9Z8NMCxlxUpKJWqyO6hcAFVICSOBZGmktcK6/U4WWW9NrvjhMjKL+ytN/4NG8eI0sJIK715b55mdiatlLQYhj89/87de/cf7OwGDx89frLXe/rs3Ja1ETASpSrNRcotKKlhhBIVXFQGeJEqGKfzDxt9vABjZam/4qqCpOBTLXMpODpq0rtkccAQfmCjyuU6XiT0LWWF1ExBjoOtkuV2oxxR9r3mWStPmsHiaHlImdT045qyFKZSN8INYl32x7V0rlcdkXOlLD1ojQf0C1icc43g6hm9NsL/Le95Xfy2gM66dszI6QwPA5ZMev1wGLZBb4OoA33Sxdmkd8WyUtQFaBSKWxtHYYVJww1KoWAdsNpCxcWcTyF2UPMCbNK0S1/Tl47JaF4a9zTSlr3uaHhh7apIXWXBcWZvahvyX1pcY/4maaSuagQtto3yWlEs6eaCNJMGBKqVA1wY6WalYsYNF+juHLglRDe/fBucHw+jk2H4+bh/+q5bxw7ZJy/IgETkNTkln8gZGRHhRd7Y++Zx/8RnvvBhW+p7nec5+St8/QtkKtTd</latexit> low[v]=min dfs[v], min (v,w)2E (dfs[w], falls(v,w)Restkantelow[w], falls(v,w)Baumkante ! Tiefensuche root 1 3/1 4/3 5/3 6/3 8/3 9/1 10/10 11/10 12/10 dfs / low 7/3 2/1 <latexit sha1_base64=\"vC5ub+jIXSB7o+SlmlDKfN/OOko=\">AAACzHicbVFNb9NAEF2brxK+UjhyGZFSFQSR0wNFSEgRXOBSBUTaSkkUjddjZ5XdtbW7DomsXPmB3DjzR1g7rgQtI1l6++bN83zEhRTWRdGvILxx89btO3t3O/fuP3j4qLv/+MzmpeE05rnMzUWMlqTQNHbCSbooDKGKJZ3Hy491/nxFxopcf3ObgmYKMy1SwdF5at79PY0pE7pCKTL9ctuZOlq7Subft5PVDN69h8MdA0tJQltHkKT29WmpFJlXkAgChRpWuYaD1QFgaSHxnS3Ai0lvYTqFzqVDRkbwhSNHGkYpJo36KPatUywyWAmSpF/AByzVEnWtKnUCtUfnEFoPhWuhUDb2Br6SdY0UyBjy5r7Gv3Xfz0E6uRxq3u1F/agJuA4GLeixNkbz7s9pkvNSkXZcorWTQVS4WYXGCS7Jm5eWCuRLzGjioUZFdlY1x9jCc88kkObGf9pBw/5dUaGydqNir1ToFvZqrib/l5uULn07q4QuSr8bvvtRWkpwOdSX9ccwxJ3ceIDcCN8r8AUa5M7fv+OXMLg68nVwdtwfvOlHX457w2G7jj32lD1jR2zATtiQfWIjNmY8+BzkwTrYhKehC6twu5OGQVvzhP0T4Y8/MR/d/g==</latexit> low[v]:=kleinstedfs-Nummer,diemanvonvausdurcheinengerichtetenPfadaus(beliebigvielen)BaumkantenundmaximaleinerRestkanteerreichenkann. Tiefensuche d <latexit sha1_base64=\"d7ycwMhfXwL2rZDjG4piQnJudC0=\">AAAB8nicbVBNS8NAEN3Ur1q/qh69LLaCp5L0oB5ECl48VrC1kIay2WzapZvdsDsRSujP8OJBEa/+Gm/+G7dtDtr6YODx3gwz88JUcAOu++2U1tY3NrfK25Wd3b39g+rhUdeoTFPWoUoo3QuJYYJL1gEOgvVSzUgSCvYYjm9n/uMT04Yr+QCTlAUJGUoec0rASn4UG1zH1zjC9UG15jbcOfAq8QpSQwXag+pXP1I0S5gEKogxvuemEOREA6eCTSv9zLCU0DEZMt9SSRJmgnx+8hSfWSXCsdK2JOC5+nsiJ4kxkyS0nQmBkVn2ZuJ/np9BfBXkXKYZMEkXi+JMYFB49j+OuGYUxMQSQjW3t2I6IppQsClVbAje8surpNtseBcN975Za90UcZTRCTpF58hDl6iF7lAbdRBFCj2jV/TmgPPivDsfi9aSU8wcoz9wPn8As3KPjA==</latexit> dfs<d <latexit sha1_base64=\"n+dU6K4MW0oY1ftL5o/P3URi0nU=\">AAAB8nicbVBNS8NAEJ3Ur1q/qh69LLaCp5L0oJ5KwYvHCrYW0lA2m027dLMbdjdCCf0ZXjwo4tVf481/47bNQVsfDDzem2FmXphypo3rfjuljc2t7Z3ybmVv/+DwqHp80tMyU4R2ieRS9UOsKWeCdg0znPZTRXEScvoYTm7n/uMTVZpJ8WCmKQ0SPBIsZgQbK/lRrFEdtVCE6sNqzW24C6B14hWkBgU6w+rXIJIkS6gwhGOtfc9NTZBjZRjhdFYZZJqmmEzwiPqWCpxQHeSLk2fowioRiqWyJQxaqL8ncpxoPU1C25lgM9ar3lz8z/MzE98EORNpZqggy0VxxpGRaP4/ipiixPCpJZgoZm9FZIwVJsamVLEheKsvr5Nes+FdNdz7Zq3dKuIowxmcwyV4cA1tuIMOdIGAhGd4hTfHOC/Ou/OxbC05xcwp/IHz+QO2go+O</latexit> dfs>d v ? ? ? v ist genau dann Artikulations- knoten, wenn 1) v ≠ root, und v hat ein Kind u im DFS-Baum mit oder 2) v = root, und v hat mindestens zwei Kinder im DFS-Baum. <latexit sha1_base64=\"hNuP1L21Ks9aCwemTThLcSyy5i4=\">AAACBHicbVC7TsNAEDzzJrwMlDQnEiSqyE4BVAiJhhIkAki2FZ0v6+SU84O7dSCyUtDwKzQUIETLR9DxN1yCC0gYaaXRzK52d8JMCo2O82XNzM7NLywuLVdWVtfWN+zNrSud5opDk6cyVTch0yBFAk0UKOEmU8DiUMJ12Dsd+dd9UFqkySUOMghi1klEJDhDI7XsHZne1bw8oH4HbqmPcI9FO9JDrx/UWnbVqTtj0GnilqRKSpy37E+/nfI8hgS5ZFp7rpNhUDCFgksYVvxcQ8Z4j3XAMzRhMeigGD8xpHtGadMoVaYSpGP190TBYq0HcWg6Y4ZdPemNxP88L8foKChEkuUICf9ZFOWSYkpHidC2UMBRDgxhXAlzK+VdphhHk1vFhOBOvjxNrhp196DuXDSqJ8dlHEtkh+ySfeKSQ3JCzsg5aRJOHsgTeSGv1qP1bL1Z7z+tM1Y5s03+wPr4Bky+l9w=</latexit> low[u]\u0000dfs[v] Tiefensuche root 1 2/1 3/1 4/3 5/3 6/3 7/3 8/3 9/1 10/10 11/10 12/10 dfs / low Ein Knoten v ist genau dann ein Artikulationsknoten, wenn 1) v ≠ root, und v hat ein Kind u im DFS-Baum mit , oder 2) v = root, und v hat mindestens zwei Kinder im DFS-Baum. <latexit sha1_base64=\"hNuP1L21Ks9aCwemTThLcSyy5i4=\">AAACBHicbVC7TsNAEDzzJrwMlDQnEiSqyE4BVAiJhhIkAki2FZ0v6+SU84O7dSCyUtDwKzQUIETLR9DxN1yCC0gYaaXRzK52d8JMCo2O82XNzM7NLywuLVdWVtfWN+zNrSud5opDk6cyVTch0yBFAk0UKOEmU8DiUMJ12Dsd+dd9UFqkySUOMghi1klEJDhDI7XsHZne1bw8oH4HbqmPcI9FO9JDrx/UWnbVqTtj0GnilqRKSpy37E+/nfI8hgS5ZFp7rpNhUDCFgksYVvxcQ8Z4j3XAMzRhMeigGD8xpHtGadMoVaYSpGP190TBYq0HcWg6Y4ZdPemNxP88L8foKChEkuUICf9ZFOWSYkpHidC2UMBRDgxhXAlzK+VdphhHk1vFhOBOvjxNrhp196DuXDSqJ8dlHEtkh+ySfeKSQ3JCzsg5aRJOHsgTeSGv1qP1bL1Z7z+tM1Y5s03+wPr4Bky+l9w=</latexit> low[u]\u0000dfs[v] Tiefensuche root 1 2/1 3/1 4/3 5/3 6/3 7/3 8/3 9/1 10/10 11/10 12/10 dfs / low Eine Baumkante e = (v,w) (v Elternknoten, w Kindknoten) ist genau dann eine Brücke, wenn . Restkanten sind niemals Brücken. <latexit sha1_base64=\"6DqNK/lhGcMNfRp7dCKL6hyyNr0=\">AAACFnicbVC7SgNBFJ2NrxhfUUubwSjYGHZTqFUI2FhGMCpsljA7ezcZMvtg5q4alv0KG3/FxkIRW7Hzb5w8Cl8HLhzOuXfm3uOnUmi07U+rNDe/sLhUXq6srK6tb1Q3ty51kikOHZ7IRF37TIMUMXRQoITrVAGLfAlX/vB07F/dgNIiiS9wlIIXsX4sQsEZGqlXPZTJ7Z5763VpF+EOJw/mCoIip01aTMWcBqEu3Btvr1et2XV7AvqXODNSIzO0e9WPbpDwLIIYuWRau46dopczhYJLKCrdTEPK+JD1wTU0ZhFoL59sUdB9owQ0TJSpGOlE/T6Rs0jrUeSbzojhQP/2xuJ/nptheOLlIk4zhJhPPwozSTGh44xoIBRwlCNDGFfC7Er5gCnG0SRZMSE4v0/+Sy4bdeeobp83aq3mLI4y2SG75IA45Ji0yBlpkw7h5J48kmfyYj1YT9ar9TZtLVmzmW3yA9b7FzPAn14=</latexit> low[w]>dfs[v] Artikulationsknoten und Brücken Satz: Die um die Berechnung von low[] ergänzte Tiefensuche berechnet in einem zusammenhängenden Graphen alle Artikulationsknoten und Brücken in Zeit O(m). Kapitel 1.3 Kreise • Sei G = (V, E) ein Graph.  • Hamiltonkreis: • Ein Kreis in G, der jeden Knoten genau einmal enthält. • Eulertour: • Ein geschlossener Weg in G, der jede Kante genau einmal enthält. Hamiltonkreise und Eulertouren Königsberger Brückenproblem Gesucht: Eulertour Leonard Euler (1707 - 1783) Eulertour: Charakterisierung Satz: Ein zusammenhängender Graph G = (V, E) enthält eine Eulertour gdw. der Grad jedes Knotens gerade ist. … und eine solche kann man in O(|E|) Zeit ﬁnden Bem: Sind in einem zusammenhängenden Graphen G = (V, E) alle bis auf zwei Knotengrade gerade, so enthält der Graph einen Eulerweg (Ein Eulerweg ist ein Weg, der alle Kanten des Graphen enthält — aber nicht notwendigerweise im gleichen Knoten startet und endet.) Idee des AlgorithmusIdee des AlgorithmusIdee des AlgorithmusIdee des AlgorithmusIdee des AlgorithmusIdee des Algorithmus • Sei G = (V, E) ein Graph.  • Hamiltonkreis: • Ein Kreis in G, der jeden Knoten genau einmal enthält. • Eulertour: • Ein geschlossener Weg in G, der jede Kante genau einmal enthält. Hamiltonkreise und Eulertouren Hamiltonkreis Gesucht: Hamiltonkreis Sir William Hamilton (1805 - 1865) Ikosaeder Spiel Hamiltonkreis - Beispiele Ikosaeder Petersengraph Hamiltonkreis - Beispiele Ikosaeder Petersengraph Hamiltonkreis - Beispiele Satz: Seien m,n ≥ 2.  Ein n×m Gitter enthält einen Hamiltonkreis gdw n*m gerade ist. Hamiltonkreis - Beispiele Beweis:  „“ siehe Skizze: Satz: Seien m,n ≥ 2.  Ein n×m Gitter enthält einen Hamiltonkreis gdw n*m gerade ist. Hamiltonkreis - Beispiele n Sensoren Hamiltonkreis - Beispiele d-dimensionaler Hyperwürfel H d Knotenmenge: {0,1} d Kantenmenge: alle Knotenpaare, die sich in genau einer Koordinate unterscheiden d=2: 00 01 10 11 000 001 010 101 110 111 d=3: Enthält H d einen Hamiltonkreis ? Hamiltonkreis im Hyperwürfel: Gray-Code d=2: 00 01 10 11 000 010 100 d=3: 101 111 00 10 11 01 011 000 100 110 010 011 111 101 001 analog für d ≧ 4","libVersion":"0.3.1","langs":""}