{"path":"sem4/FMFP/UE/slides/CN-u08-slides.pdf","text":"Computer Networks - Exercise 8 Link Layer ETH Zürich Slides by Ferdinand Brunne and Joël Vögtlin Based on the work of Linus Baumberger, Nicolas Stucki, Paul Ellsiepen and Janic Moser April 2025 - Link Layer - Retransmission (ARQ) - Multiple Access - Switching - Kahoot! - Exercise #8 2 Table of contents Link Layer Before: What path should a packet take? (Routing) Now: How is data actually sent between two nodes? 4 Link Layer Source: ﬂaticon.com Many things to consider when talking about Linking Layer: - Reliability - Multiplexing (Multiple Access) - Switching - Framing - Error detection/correction 5 Link Layer Next exercise session We still want reliability at lower levels: - Better to retransmit/correct some bits than to retransmit a whole packet ARQ is the strategy for reliability we’ve also seen at the transport layer: - Receiver automatically acknowledges correct frames with an ACK - Sender automatically resends after timeout, until an ACK is received When do we use it? - Errors are common - Errors must be corrected 6 ARQ (Automatic Repeat reQuest) Time Division Multiplexing Divide time in slots Take turns on a ﬁxed schedule Frequency Division Multiplexing Put different users on different frequency bands 7 Multiplexing We have one link, that multiple boxes have to share when sending data Note! In link layer context: - MAC = Medium/Multiple Access Control Two methods: - Randomized - Great for low load (low chances for collision) - Contention-free (Turn based) - Good for high load - Provides quality of service guarantees 8 Multiple Access Simple protocol: - Node just sends when it has trafﬁc - If there was a collision (no ACK received), then wait a random interval and resend Problem: Not efﬁcient under high load (max 18% efﬁciency, 36% with time slots) ➡ Improvement: Listen for activity before sending (CSMA) 9 ALOHA Problem: How do we know if somebody transmits data at the same time? Idea: Make sure we transmit for enough time to detect collisions D = maximum propagation delay between any 2 nodes connected to a link Solution: Impose minimum frame size, such that it takes 2D seconds to send it Other improvements: - Exponential Backoff - Randomness (CSMA Persistence) 10 CSMA/CD - (Carrier Sense Multiple Access / Collision Detection) 11 Why not D instead of 2D? A B A B D D 2D Undetected collision! Detected collision D Until now, only connections via cables. But what about wireless connections? Problems: - Nodes may have different areas of coverage - Nodes can’t listen while sending ➡ no Collision Detection 12 Wireless Multiple Access Hidden Terminal - A and C are sending data to B - They can’t hear each other, but they collide at B (so A and C have to coordinate sending) - A and C are hidden terminals 13 Wireless Media Access Phenomenons Exposed Terminal - B wants to send to A - C wants to send to D - They can hear each other, but they don’t collide at A and D (so B and C can send in parallel) - B and C are exposed terminals Idea: Use short handshakes Protocol 1. A sender node transmits a RTS (Request-to-Send, with frame length) 2. The receiver replies with a CTS (Clear-to-Send, with frame length) 3. Sender transmits the frame while nodes hearing the CTS stay silent - Collisions on the RTS/CTS are still possible, but less likely 14 MACA (Multiple Access with Collision Avoidance) - Clients get connectivity from a wired AP (access point) - Multiple Access via CSMA/CA (Collision Avoidance) - Sender avoids collision by waiting for a random period of time - This period is paused when waiting for idle (somebody else is sending) 15 CSMA/CA for 802.11 (WiFi) Idea: Deﬁne order in which nodes get a chance to send (pass if no trafﬁc) Token Ring: - Arrange nodes in a “ring” - Token rotates “permission to send” to each node in turn - Pros - Fixed overhead with no collisions - Regular chance to send with no unlucky nodes - Cons - Higher overhead at low load - More things that can go wrong (token lost, the leader is a single point of failure) In practice, random MAC is hard to beat (simple, scalable, usually good enough) 16 Turn-Taking Multiple Access Protocols (Contention-free) Switching - Most popular LAN of the 1980s, 1990s - 10 Mbps over shared coaxial cable, with baseband signals - Multiple access with 1-persistent CSMA/CD with BEB (Binary Exponential Backoff) - With reasonable parameters, 85% efﬁciency - Frame includes ﬁelds for: - Source and destination addresses - Checksum (CRC-32 error detection) but no ACKs or retransmission - Physical layer preamble to identify the frame and sync the clocks - Modern Ethernet is based on switches, not multiple access 18 Classic Ethernet Idea: Hosts are wired to Ethernet switches (no multiple access) Switches: - Use frame address to connect to the right input/output ports - Full-duplex (port can be used for both input/output) - Buffers for multiple inputs to send to one output (can lead to frame loss) Advantages - Convenient to run wires to one location - More reliable - Offers scalable performance 19 Switched Ethernet Problem: How does a switch ﬁnd the correct output port for a given destination address? Solution: Backward Learning How it works: - Look at the source address of input frames to create the (address → port) mapping - To forward: If a mapping exists, then send it to the speciﬁed port; otherwise broadcast to all ports This works the same with multiple switches assuming no loops 20 Backward Learning Problem: Avoid forwarding loops while allowing for redundant topologies Solution: Find a spanning tree for the topology - No loops but reaches all switches - Switches only use the tree for forwarding - Broadcasts travel up the tree until the root and then down all the branches 21 Spanning Tree Protocol How this works: 1. Elect a root node of the tree (switch with the lowest address) 2. Grow the tree as shortest distances from the root (lowest address break distance ties) 3. Ports not on the forwarding tree are disabled Each switch stores a state (I, R, D) with I being the ID of the switch, R the ID of the root and D the distance to the root. This is shared with all its neighbors. After reaching steady state: Algorithm keeps running to change the tree in case of a failure 22 Spanning Tree Protocol 23 Spanning Tree Protocol - Example Initially: Every switch thinks it is root 1st round: A and A’s direct neighbors already reach the solution 2nd round: All switches except F have the correct solution 3rd round: Final spanning tree Updated Switch state: (ID, RootID, Distance to Root) KahootExercise #8 Question 1: Collision Avoidance / Detection 26 To reduce ambiguities about which station is sending, 802.11 deﬁnes channel sensing to consist of both physical sensing and virtual sensing. Physical sensing simply checks the medium to see if there is a valid signal. With virtual sensing, each station keeps a logical record of when the channel is in use by tracking the NAV (Network Allocation Vector). Each frame carries a NAV ﬁeld that speciﬁes how long the sequence to which the frame belongs will take to complete. The lecture states that nodes only wait after receiving a CTS. Node C reserved a NAV upon receiving a RTS which is the effect of an optimization in the implementation: Upon receiving an RTS the node waits for a potential following CTS ﬁnally reserving the whole transmission time if a CTS is received. Question 1: Collision Avoidance / Detection 27 1) Can you say something about the distance of the stations from A? Is station C or D closer? Brieﬂy explain. ● Station C is the closest to A since it heard the RTS and responded to it by asserting its NAV signal. ● D did not respond, so it must be outside A's radio range. Question 1: Collision Avoidance / Detection 28 Assume there are 4 wireless stations in a straight line, communicating using the Multiple Access with Collision Avoidance (MACA) protocol. Every station is only in the range of its neighbors and vice versa. 2) Is it possible for two transmissions to take place simultaneously? If yes, what is the minimum number of stations required? Yes, 4 Question 1: Collision Avoidance / Detection 29 Now assume CSMA/CD (not CSMA/CA) for a wired network. In CSMA/CD a node does not transmit if it senses a transmission. After transmitting for RTT of the shared medium without collisions the node can be sure that no other node started transmitting at roughly the same time. Here we refer to this time as the \"contention slot\". CSMA/CD CSMA/CA Used in wired networks Mostly used in wireless networks Focus at recovering fast from collisions Focus at preventing collisions (TS/CTS) Question 1: Collision Avoidance / Detection 30 The signal propagation speed in twin lead is 2.46 ⋅ 10^8 m/s and signal propagation speed in multimode ﬁber is 1.95 ⋅ 10^8 m/s 3.a) What is the minimum time a node must transmit such that to be sure that no other node started transmission without sensing its message for a 2 km twin-lead cable? Signal propagation speed in twin lead is 2.46 ⋅ 10^8 m/s Signal propagation time for 2 km is 8.13 μs So, the length of contention slot is 16.26 μs Question 1: Collision Avoidance / Detection 31 The signal propagation speed in twin lead is 2.46 ⋅ 10^8 m/s and signal propagation speed in multimode ﬁber is 1.95 ⋅ 10^8 m/s 3.b) What is the minimum time a node must transmit such that to be sure that no other node started transmission without sensing its message for a 40 km multimode ﬁber optic cable? Signal propagation speed in multimode ﬁber is 1.95 ⋅ 10^8 m/s Signal propagation time for 40 km is 205.13 μs So, the length of contention slot is 410.26 μs Question 2: Wireless 32 The following topology consists of 6 wireless nodes, A through F, illustrated by the corresponding dots. The circle around each node illustrates its transmission range. Question 2: Wireless 33 1) For the transmission from A to B, list the potential hidden terminals from A and the exposed terminals. Hidden terminals: ○ C ○ F Exposed terminals: ○ E Question 2: Wireless 34 2.a) Explain what prevents a hidden terminal from interfering with a sender. Although the hidden terminal does not see the RTS of the sender, it sees the CTS of the receiver and infers that it should not transmit at the same time. 2.b) Explain how a terminal infers that it is exposed and can thus send to another destination. The exposed terminal sees the RTS of the sender, but not the CTS of the receiver, thus it knows it can send. Assume you are using an RTS/CTS protocol to reduce the hidden/exposed terminal problems. Question 2: Wireless 35 2.c) An exposed terminal in an RTS/CTS protocol may still be unsuccessful in sending. Explain how this is possible. Another simultaneous transmission may interfere with the receipt of a CTS or ACK. In other words, a frame sent between another pair of nodes may collide with a control frame that the transmitter is supposed to receive. This is why the RTS/CTS mechanism alone does not completely solve the exposed terminal problem. Assume you are using an RTS/CTS protocol to reduce the hidden/exposed terminal problems.","libVersion":"0.5.0","langs":""}