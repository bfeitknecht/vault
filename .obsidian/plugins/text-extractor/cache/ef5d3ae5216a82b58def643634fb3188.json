{"path":"sem4/CN/VRL/extra/slides/CN-s14-network-stack.pdf","text":"Computer Networks: A day in the life of a webpage access Adrian Perrig Slides by Markus Legner Photo: ETH Z√ºrich / Gian Marco Castelberg Plan for the remaining lectures 2 ‚Ä¢ Summary of networking stack ‚Ä¢ Algorithms in networking - Optimal paths, flow problems, matchings - Repetition of algorithms in the networking context - Variations of problems known from A&D/A&W ‚Ä¢ Linear programming - General approach - Apply to problems discussed in previous lecture ‚Ä¢ Probabilistic techniques in networking ‚Ä¢ State-of-the-art and future topics in networking: SCION and more. Setup of this lecture 3 ‚Ä¢ Please contribute - Think actively - Ask questions ‚Ä¢ Please do not look ahead in PDF slides; rather think for yourself ‚Ä¢ Lecture covers many but not all important topics - Many details removed - Focus on concepts and interconnection ‚Ä¢ You may want to keep the list of acronyms ready ‚Ä¢ Content based on KR 6.7 Situation: Markus wants to access the ETH webpage ‚Ä¢ I boot my laptop and connect it to my home LAN ‚Ä¢ I type www.ethz.ch into my web browser ‚Ä¢ We will look at what needs to happen until I see the ETH homepage 4 Network topology How many routers are between my laptop at home and ETH‚Äôs webserver? a. 1‚Äì5 b. 6‚Äì10 c. 11‚Äì15 d. >15 5 Question Network topology 6 Home LAN Init7 ETH SWITCH $ traceroute www.ethz.ch traceroute to www.ethz.ch (129.132.19.216), 30 hops max, 60 byte packets 1 _gateway (192.168.1.1) 0.468 ms 0.296 ms 0.334 ms 2 790see1.fiber7.init7.net (212.51.128.1) 1.072 ms 1.046 ms 1.013 ms 3 r1glb1.core.init7.net (82.197.164.214) 0.714 ms 0.690 ms 0.662 ms 4 r1zrh2.core.init7.net (77.109.128.237) 0.817 ms 1.488 ms 0.741 ms 5 r1bsl1.core.init7.net (77.109.128.130) 9.287 ms 9.266 ms 9.232 ms 6 swiBA2-G2-5.switch.ch (82.197.163.138) 2.566 ms 2.511 ms 2.364 ms 7 swiBS1-100GE-0-0-0-0.switch.ch (130.59.37.34) 2.660 ms 2.642 ms 2.561 ms 8 swiZH3-100GE-0-0-0-2.switch.ch (130.59.36.170) 4.329 ms 4.301 ms 4.286 ms 9 swiEZ3-100GE-0-1-0-4.switch.ch (130.59.38.109) 3.874 ms 3.865 ms 3.847 ms 10 rou-gw-lee-tengig-to-switch.ethz.ch (192.33.92.1) 3.932 ms 3.831 ms 4.019 ms 11 rou-fw-rz-rz-gw.ethz.ch (192.33.92.169) 4.439 ms 4.693 ms 4.863 ms DNS Server Web Server Host Network topology 7 Home LAN SWITCH Init7 ETH Exercise: What protocols and mechanisms do we need? 8 What protocols run in the background before I even boot my laptop? ‚Ä¢ Spanning Tree Protocol (STP) in home LAN ‚Ä¢ Border Gateway Protocol (BGP) between ASes ‚Ä¢ Internal Gateway Protocols (IGPs; OSPF or IS-IS) inside Init7‚Äôs and SWITCH‚Äôs networks Which protocols are used to exchange data between my laptop and the web server? ‚Ä¢ Ethernet, IP ‚Ä¢ Transmission Control Protocol (TCP) ‚Ä¢ Hypertext Transfer Protocol (HTTP) ‚Ä¢ NAT ‚Ä¢ [Multiprotocol Label Switching (MPLS), QUIC] What auxiliary protocols are needed before data can be exchanged with ETH's web server? ‚Ä¢ Dynamic Host Configuration Protocol (DHCP) ‚Ä¢ Address Resolution Protocol (ARP) ‚Ä¢ Domain Name System (DNS) ‚Ä¢ Ethernet, Internet Protocol (IP) ‚Ä¢ User Datagram Protocol (UDP) ‚Ä¢ Network Address Translation (NAT) DNS Server Web Server Host 1. Obtain IP address and further network configuration via DHCP 2. Obtain IP address of ETH web server via DNS a. Obtain MAC address of gateway router via ARP b. Router performs NAT 3. Set up TCP connection with ETH web server 4. Send HTTP GET request 9 (2b) (3)(3, 4) (2) (1)(1, 2a) What happens until I see the ETH webpage? Background LAN, intra-domain, and inter-domain control plane Spanning Tree Protocol (STP) ‚Ä¢ Ethernet may contain redundant links creating loops ‚Ä¢ Spanning Tree Protocol runs in the background and disables links such that resulting topology is a tree - Switch with lowest address is root of the tree ‚Ä¢ Distributed algorithm run by all switches in the network - Keep sending (i) own address, (ii) address of currently believed root, (iii) distance to currently believed root - Converges after at most ùëõ (number of switches) rounds ‚Äî> disable all interfaces that are not on spanning tree ‚Ä¢ Normally not relevant in home LANs - Often simple topology without redundant links 11 Intra-domain routing ‚Ä¢ Init7 and SWITCH run an Interior Gateway Protocol (IGP) inside their networks - Probably OSPF or IS-IS - Based on link-state routing ‚Ä¢ Find shortest paths inside the AS ‚Ä¢ Fill forwarding tables of routers 12 Inter-domain routing ASes exchange routing information using BGP ‚Ä¢ Path-vector protocol ‚Ä¢ Announce IP prefix ‚Ä¢ Different types of links: Provider, Customer, Peer In our example: Init7 and SWITCH are peers at an IXP in Basel: ‚Ä¢ 5 r1bsl1.core.init7.net (77.109.128.130) 9.287 ms 9.266 ms 9.232 ms ‚Ä¢ 6 swiBA2-G2-5.switch.ch (82.197.163.138) 2.566 ms 2.511 ms 2.364 ms 13 How do we know they are peering in Basel? SWITCH providers: https://radar.qrator.net /as559/providers 14 How do we know they are peering in Basel? Init7 providers: https://radar.qrator.net/as 13030/providers 15 How do we know they are peering in Basel? SWITCH peerings: https://radar.qrator.ne t/as559/peerings 16 How do we know they are peering in Basel? Init7 peerings: https://radar.qrator.net /as13030/peerings 17 Do both SWITCH and Init7 have locations in Basel? https://www.peeringdb. com/asn/559 18 Do both SWITCH and Init7 have locations in Basel? https://www.peeringdb .com/asn/13030 19 Auxiliary Protocols Host configuration, address resolution, name resolution ‚Ä¢ Allows automatic configuration of hosts in a LAN ‚Ä¢ Obtain network information from DHCP server - Host‚Äôs IP address - Local DNS servers - IP address of default gateway - Network mask (size of subnet) ‚Ä¢ Standard deployment in home LANs: router also acts as DHCP server 21 L7: Application L4: Transport L3: Network L2: Link Dynamic Host Configuration Protocol (DHCP) ‚Ä¢ Translates layer-3 IP addresses to layer-2 MAC addresses ‚Ä¢ Necessary for constructing Ethernet frames when only IP address (but not MAC address) of destination is known ‚Ä¢ Initiator sends ARP query message with target IP address as Ethernet broadcast ‚Ä¢ All other hosts compare target IP address with their own IP address - If addresses match, reply with ARP reply message containing MAC address ‚Ä¢ Hosts store IP/MAC address mapping in ARP table 22 L7: Application L4: Transport L3: Network L2: Link Address Resolution Protocol (ARP)Domain Name System (DNS) ‚Ä¢ Maps domain names to IP addresses (and additional information) ‚Ä¢ Names organized and administered hierarchically - Starts with root (administered by IANA; distributed root DNS servers) - Next level: top-level domains (TLDs); .ch TLD administered by SWITCH - ethz.ch is managed locally by ETH ‚Ä¢ Name resolution is generally performed by DNS resolvers - Normally deployed by ISPs for their customers - Some open resolvers reached by anycast addresses: 1.1.1.1 (Cloudflare), 8.8.8.8 (Google), 9.9.9.9 (Quad9) 23 L7: Application L4: Transport L3: Network L2: Link Networking Stack Ethernet, IP, UDP, TCP, NAT, HTTP Switched Ethernet ‚Ä¢ Layer-2 network of switches ‚Ä¢ Addresses are 48bit MAC addresses ‚Ä¢ Switched Ethernet is self-learning (backward learning): - Forwarding table maps MAC addresses to interfaces (initially empty) - If a MAC address is not in the forwarding table: broadcast frame - Source address is added to the forwarding table with corresponding interface 25 L7: Application L4: Transport L3: Network L2: Link Internet Protocol (IP) ‚Ä¢ Addresses are 32bit (IPv4) or 128bit (IPv6) ‚Ä¢ IP prefixes are blocks of addresses: - Example of a private prefix (home LAN): 192.168.1.0/24 - Example of a public prefix (Init7): 212.51.128.0/19 ‚Ä¢ Forwarding based on longest matching prefix - Cannot store 2!\" ~ 4 billion IPv4 addresses in forwarding table (much worse for IPv6) - Aggregate to larger IP prefixes and store those - Select longest (most specific) matching prefix to determine forwarding interface - Core routers use Ternary-Content-Addressable Memory (TCAM) ‚Ä¢ ‚ÄúNarrow waist‚Äù of networking stack ‚Ä¢ Few guarantees to higher layers, best-effort delivery 26 L7: Application L4: Transport L3: Network L2: Link ‚Ä¢ NAT is a middlebox functionality: inspects and modifies higher-layer (>2) headers ‚Ä¢ Solves multiple problems: - Address scarcity: there are fewer IPv4 addresses than devices - Privacy: may want to hide hosts in private networks from Internet - Security: hosts in private IP prefixes (e.g., 192.168/16) cannot be addressed directly from the Internet ‚Ä¢ NAT is widely used for home networks - NAT functionality provided by home router - Network looks like a single host to the Internet ‚Ä¢ NAT device modifies IP addresses and transport-layer ports of forwarded packets 27 L7: Application L4: Transport L3: Network L2: Link Network Address Translation (NAT)User Datagram Protocol (UDP) ‚Ä¢ Datagram delivery to application - Source port - Destination port ‚Ä¢ That‚Äôs it: no in-order delivery, no congestion control, no reliability (besides checksum) ‚Ä¢ Advantages: lightweight, no connection establishment, low overhead ‚Ä¢ Used when no reliable transport necessary: VoIP, DNS, gaming 28 L7: Application L4: Transport L3: Network L2: Link SRC Port DEST Port Checksum Length DATA ‚Ä¢ Provides reliable transport to applications: - ACKs, resend lost segments - In-order delivery (sequence numbers) - Checksums ‚Ä¢ 3-way handshake sets up bidirectional connection 1. Client sends SYN 2. Server replies with SYN ACK 3. Client replies with ACK ‚Ä¢ Receiving window provides flow control (don‚Äôt overwhelm destination host) ‚Ä¢ Congestion window avoids congestion and ensures fairness of competing flows - Additive increase, multiplicative decrease (AIMD) - ‚ÄúTCP sawtooth‚Äù - Additional congestion-control mechanisms: slow start, fast retransmit 29 L7: Application L4: Transport L3: Network L2: Link Transmission Control Protocol (TCP) ‚Ä¢ Stateless, text-based protocol based on TCP or QUIC ‚Ä¢ Client sends request: - Request type: GET, POST, HEAD - Uniform Resource Locator (URL) - Request body (mostly for POST requests) ‚Ä¢ Server sends reply: - Status, e.g., 200 (OK), 404 (client error, Not Found), 505 (server error, Not Found) - Response headers provide additional information - Body contains webpage ‚Ä¢ Cookies are installed at client to provide state - Sent as part of a request 30 L7: Application L4: Transport L3: Network L2: Link Hypertext Transfer Protocol (HTTP) Individual Steps of a Webpage Access Laptop‚Äôs OS sends a DHCP discovery message: ‚Ä¢ Placed in UDP segment: dest port 67 (server), src port 68 (client) ‚Ä¢ Placed in IP datagram: dest address 255.255.255.255 (broadcast), src address 0.0.0.0 (no address yet) ‚Ä¢ Placed in Ethernet frame: dest address FF:FF:FF:FF:FF:FF (broadcast), src address AA:BB:CC:DD:EE:42 (laptop‚Äôs MAC address) Ethernet switch broadcasts the frame on all ports ‚Ä¢ Backward learning: switch learns the port to which the laptop is connected and stores Laptop‚Äôs MAC address in its forwarding table Router receives frame and extracts DHCP discovery message DHCP 32 AA:BB:CC:DD:EE:42 192.168.1.1 AA:BB:CC:DD:EE:01 1 3 2 Forwarding table of switch Address Interface AA:BB:CC:DD:EE:42 1 DHCP Router allocates IP address and creates DHCP offer message: ‚Ä¢ IP address of laptop: 192.168.1.42 ‚Ä¢ IP address of gateway (router): 192.168.1.1 ‚Ä¢ IP address of DNS server(s): 77.109.128.2 (ISP‚Äôs DNS server) ‚Ä¢ Network mask: 255.255.255.0 (or subnet: 192.168.1.0/24) Router sends DHCP offer message: ‚Ä¢ Placed in UDP segment: dest port 68 (client), src port 67 (server) ‚Ä¢ Placed in IP datagram: dest address 192.168.1.42, src address 192.168.1.1 ‚Ä¢ Placed in Ethernet frame: dest address AA:BB:CC:DD:EE:42 (laptop), src address AA:BB:CC:DD:EE:01 (router) 33 AA:BB:CC:DD:EE:42 192.168.1.1 AA:BB:CC:DD:EE:01 DHCP Switch forwards frame to laptop ‚Ä¢ Look up destination in forwarding table ‚Ä¢ Perform backward learning Laptop extracts the DHCP offer message Laptop sends DHCP request message to router as broadcast frame Router responds with DHCP ACK message as unicast frame Finally, laptop can set its own configuration: ‚Ä¢ Sets its own IP address to 192.168.1.42 ‚Ä¢ Sets IP address of DNS server to 77.109.128.2 ‚Ä¢ Installs gateway‚Äôs address in forwarding table: all datagrams with dest addresses outside the subnet 192.168.1.0/24 will be sent to gateway 34 Forwarding table of switch Address Interface AA:BB:CC:DD:EE:42 1 AA:BB:CC:DD:EE:01 3 1 3 2 192.168.1.1 AA:BB:CC:DD:EE:01 192.168.1.42 AA:BB:CC:DD:EE:42ARP Laptop wants to send a DNS request to the DNS server outside 192.168.1.0/24 subnet; needs MAC address of gateway router Laptop creates ARP query message: ‚Ä¢ Target IP address 192.168.1.1 (gateway router) ‚Ä¢ Placed in Ethernet frame: dest address FF:FF:FF:FF:FF:FF (broadcast) Switch broadcasts the frame on all ports Router receives frame and extracts ARP query message ‚Ä¢ Target IP address matches its own address Router sends ARP reply: ‚Ä¢ 192.168.1.1 has MAC address AA:BB:CC:DD:EE:01 ‚Ä¢ Placed in Ethernet frame: dest address AA:BB:CC:DD:EE:42 Laptop receives frame and extracts ARP reply ‚Ä¢ Records correspondence of 192.168.1.1 with AA:BB:CC:DD:EE:01 in ARP table 35 ARP table of laptop IP Address MAC address 192.168.1.1 AA:BB:CC:DD:EE:01 192.168.1.1 AA:BB:CC:DD:EE:01 192.168.1.42 AA:BB:CC:DD:EE:42DNS request: Local network Laptop creates DNS query message: ‚Ä¢ Query string ‚Äúwww.ethz.ch‚Äù ‚Ä¢ Placed in UDP segment: dest port 53, src port 31415 (random) ‚Ä¢ Placed in IP datagram: dest address 77.109.128.2, src address 192.168.1.42 ‚Ä¢ Placed in Ethernet frame: dest address AA:BB:CC:DD:EE:01 (router) Ethernet frame is forwarded to router Router performs Network Address Translation: ‚Ä¢ Allocates new port and replaces internal address (L3) + port (L4) by external address + port Forwards modified IP datagram to ISP‚Äôs router 36 192.168.1.1 AA:BB:CC:DD:EE:01 192.168.1.42 AA:BB:CC:DD:EE:42 77.109.128.2 212.51.128.73 NAT table of router Internal IP:port External IP:port 192.168.1.42:31415 212.51.128.73:1001 DNS request: IP forwarding Init7‚Äôs routers forward IP datagram Forwarding tables were filled in by OSPF or IS-IS Routers compute longest-matching prefix to determine next hop 37 B C A 77.109.128.2 Forwarding table in router A Prefix Next hop 77.109.128.0/18 C 77.109.128.0/22 B 77.109.130.0/23 D 77.109.128.0/24 C DNS request: Reply DNS server looks up www.ethz.ch in its cache and creates DNS reply message ‚Ä¢ IP address of www.ethz.ch: 129.132.19.216 ‚Ä¢ Placed in UDP segment: dest port 1001 ‚Ä¢ Placed in IP datagram: dest address 212.51.128.73 (router‚Äôs external IP address) IP datagram is forwarded to gateway router Router performs NAT again: replaces external IP:port by internal IP:port Router sends reply to laptop (AA:BB:CC:DD:EE:42) in Ethernet frame 38 NAT table of router Internal IP:port External IP:port 192.168.1.42:31415 212.51.128.73:1001 192.168.1.1 AA:BB:CC:DD:EE:01 192.168.1.42 AA:BB:CC:DD:EE:42 77.109.128.2 212.51.128.73 DNS exercise 39 Which two types of resolving are there and which of the two is performed by Init7‚Äôs DNS server? What does Init7‚Äôs DNS server have to do, if www.ethz.ch is not in the cache? DNS: Iterative queries by Init7‚Äôs DNS server 40 Init7‚Äôs DNS server Root name server .ch TLD name server ethz.ch name server 1) Where is .ch? 2) Where is ethz.ch? 3) Where is www.ethz.ch? At 129.132.19.216 4) Reply to client TCP Laptop OS creates TCP socket with dest IP address 129.132.19.216 ‚Ä¢ Dest port 80 (HTTP), src port 27182 (random) Send TCP SYN segment: ‚Ä¢ Placed in IP datagram: src address 192.168.1.42, dest address 129.132.18.216 ‚Ä¢ Send in Ethernet frame to AA:BB:CC:DD:EE:01 Router performs NAT ‚Ä¢ Allocates new NAT entry ‚Ä¢ Replaces internal IP:port by external IP:port ‚Ä¢ Forwards datagram to Init7‚Äôs router Routers forward datagram to ETH‚Äôs web server according to forwarding-table entries (filled by OSPF and BGP) 41 192.168.1.1192.168.1.42 212.51.128.73 AA:BB:CC:DD:EE:01 129.132.19.216 NAT table of router Internal IP:port External IP:port 192.168.1.42:31415 212.51.128.73:1001 192.168.1.42:27182 212.51.128.73:1002 Client TCP socket Protocol TCP Src port 27182 Src IP 192.168.1.42 Dest port 80 Dest IP 129.132.19.216 Server TCP socket Protocol TCP Src port 80 Src IP 129.132.19.216 Dest port 1002 Dest IP 212.51.128.73 TCP Web server extracts TCP SYN segment from IP datagram Web server creates TCP socket and sends SYNACK segment Segment is forwarded to laptop ‚Ä¢ Forwarded through ISPs ‚Ä¢ NAT at router Laptop replies with ACK segment TCP connection is established 42 192.168.1.1192.168.1.42 212.51.128.73 AA:BB:CC:DD:EE:01 129.132.19.216 NAT table of router Internal IP:port External IP:port 192.168.1.42:31415 212.51.128.73:1001 192.168.1.42:27182 212.51.128.73:1002 HTTP Web browser creates HTTP GET request ‚Ä¢ URL ‚Äú/‚Äù, empty body ‚Ä¢ Sent to TCP socket TCP socket transports request to web server (via, IP, NAT, Ethernet) TCP segment is demultiplexed to the HTTP server HTTP server prepares HTTP response and sends it to TCP socket TCP socket transports response to laptop (via, IP, NAT, Ethernet) Web browser receives HTTP response and renders website 43 Wrapup *Labels may be used multiple times 45 (c) (d) (f) (g) (e) (a) (b) (i)(h) ARP Backward learning BGP DHCP DNS response HTTP request HTTP response NAT OSPF TCP socket creation TCP SYNACK Exercise: Match protocols to the labels* in the figure (c) (d) (f) (g) (e) (a) (b) (i)(h) 46 ARP Backward learning BGP DHCP DNS response HTTP request HTTP response NAT OSPF TCP socket creation TCP SYNACK (b) (c) (i) (b) (e) (f) (g) (d) (h) (a) (g) Exercise: Match protocols to the labels in the figureAdditional Resources Web site to learn about BGP, IS-IS, OSPF, etc.: https://learn.nsrc.org/bgp Get information about AS numbers, connectivity, etc.: https://radar.qrator.net/ IP networks peering points (with bandwidths): https://www.peeringdb.com/ 47","libVersion":"0.3.2","langs":""}