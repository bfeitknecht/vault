{"path":"sem4/FMFP/UE/s/FMFP-u07-s.pdf","text":"Formal Methods and Functional Programming Solutions Sheet 7 252-0058-00L March 31, 2025 1. Typing (a) Solution 1. (\\x y z -> (y x, x z)):: ((c -> b) -> ((c -> b) -> a) -> c -> (a, b) 2. (\\x y -> (\\z -> y)):: a -> b -> c -> b 3. map (1 :) :: Num a => [[a]] -> [[a]] 4. (\\x ys -> inits (map (x <) ys)) :: Ord a => a -> [a] -> [[Bool]] (b) Solution The derivation tree is as follows. Let Γ := y : τ1, x : τ5. y : τ1 ⊢ True :: τ3 T rue Γ ⊢ 1 :: Int Int Γ ⊢ x :: τ7 → Int V ar1 Γ ⊢ y :: τ7 V ar2 Γ ⊢ x y :: Int App Γ ⊢ 1 + x y :: τ6 BinOp y : τ1 ⊢ λx. 1 + x y :: τ4 Abs2 y : τ1 ⊢ (True, λx. 1 + x y) :: τ2 T up ⊢ λy. (True, λx. 1 + x y) :: τ0 Abs1 The collected constraints are: (Abs1) : τ0 = τ1 → τ2 (T up) : τ2 = (τ3, τ4) (T rue) : τ3 = Bool (Abs2) : τ4 = τ5 → τ6 (BinOp) : τ6 = Int (V ar1) : τ5 = τ7 → Int (V ar2) : τ1 = τ7 1 Formal Methods and Functional Programming Solutions Sheet 7 252-0058-00L March 31, 2025 Solving these constraints we get: τ0 =τ1 → τ2 =τ1 → (τ3, τ4) =τ1 → (Bool, τ4) =τ1 → (Bool, τ5 → τ6) =τ1 → (Bool, τ5 → Int) =τ1 → (Bool, (τ7 → Int) → Int) =τ7 → (Bool, (τ7 → Int) → Int) Therefore, the most general type for the given expression is: a → (Bool, (a → Int) → Int) 2","libVersion":"0.5.0","langs":""}