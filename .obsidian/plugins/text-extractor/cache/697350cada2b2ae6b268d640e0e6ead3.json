{"path":"var/attachments/scratch-442F88EED569B13C9EF1A24AE490608B.png","text":"1 public class SemaphoreBarrier { 2 private final int threads = 8; 3 4 public synchronized void barrier() { 5 volatile int count = 0; 6 Semaphore s@ = new Semaphore(0); 7 Semaphore s1 = new Semaphore(1); 8 9 count++; 10 if (count == threads) { 11 s1.acquire(); s@.release(); 12 } 13 s@.acquire(); s@.release(); 14 15 count--; 16 if (count == @) { 17 s@.acquire(); si.release(); 18 } 19 s1.acquire(); s@.release(); 20 } 21 }","libVersion":"0.3.2","langs":"deu+eng"}