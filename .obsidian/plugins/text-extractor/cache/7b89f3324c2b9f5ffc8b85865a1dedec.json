{"path":"sem3/LinAlg/VRL/extra/misc/cs-lens/LinAlg-lens-matrix-fibonacci.pdf","text":"Linear Algebra ETH Z¨urich, HS 2023, 401-0131-00L The Computer Science Lens Fast Fibonacci Numbers by Iterative (Matrix) Squaring Bernd G¨artner October 2, 2024 Fibonacci numbers at Z¨urich HB 2 / 9 Fibonacci numbers The sequence 2 + 3 = 5 13 + 21 = 34 0 1 1 2 3 5 8 13 21 34 55 . . . f0 f1 f2 f3 f4 f5 f6 f7 f8 f9, f10 . . . f3 + f4 = f5 f7 + f8 = f9 Every number is the sum of the previous two. Mathematical definition: f0 = 0 f1 = 1 fn = fn−1 + fn−2, if n ≥ 2 3 / 9 The Fibonacci number f100. . . . . . is something you always wanted to know! Here you go (Python): a = 0 # f 0 b = 1 # f 1 f o r n i n range ( 2 , 1 0 1 ) : c = a + b # f n a = b # f n−2 −> f n−1 b = c # f n−1 −> f n p r i n t ( ” f ” , n , ”=” , c ) 4 / 9 f 2 = 1 f 3 = 2 f 4 = 3 f 5 = 5 f 6 = 8 f 7 = 13 f 8 = 21 f 9 = 34 f 10 = 55 f 11 = 89 f 12 = 144 f 13 = 233 f 14 = 377 f 15 = 610 f 16 = 987 f 17 = 1597 f 18 = 2584 f 19 = 4181 f 20 = 6765 f 21 = 10946 f 22 = 17711 f 23 = 28657 f 24 = 46368 f 25 = 75025 f 26 = 121393 f 27 = 196418 f 28 = 317811 f 29 = 514229 f 30 = 832040 f 31 = 1346269 f 32 = 2178309 f 33 = 3524578 f 34 = 5702887 f 35 = 9227465 f 36 = 14930352 f 37 = 24157817 f 38 = 39088169 f 39 = 63245986 f 40 = 102334155 f 41 = 165580141 f 42 = 267914296 f 43 = 433494437 f 44 = 701408733 f 45 = 1134903170 f 46 = 1836311903 f 47 = 2971215073 f 48 = 4807526976 f 49 = 7778742049 f 50 = 12586269025 f 51 = 20365011074 f 52 = 32951280099 f 53 = 53316291173 f 54 = 86267571272 f 55 = 139583862445 f 56 = 225851433717 f 57 = 365435296162 f 58 = 591286729879 f 59 = 956722026041 f 60 = 1548008755920 f 61 = 2504730781961 f 62 = 4052739537881 f 63 = 6557470319842 f 64 = 10610209857723 f 65 = 17167680177565 f 66 = 27777890035288 f 67 = 44945570212853 f 68 = 72723460248141 f 69 = 117669030460994 f 70 = 190392490709135 f 71 = 308061521170129 f 72 = 498454011879264 f 73 = 806515533049393 f 74 = 1304969544928657 f 75 = 2111485077978050 f 76 = 3416454622906707 f 77 = 5527939700884757 f 78 = 8944394323791464 f 79 = 14472334024676221 f 80 = 23416728348467685 5 / 9 f 81 = 37889062373143906 f 82 = 61305790721611591 f 83 = 99194853094755497 f 84 = 160500643816367088 f 85 = 259695496911122585 f 86 = 420196140727489673 f 87 = 679891637638612258 f 88 = 1100087778366101931 f 89 = 1779979416004714189 f 90 = 2880067194370816120 f 91 = 4660046610375530309 f 92 = 7540113804746346429 f 93 = 12200160415121876738 f 94 = 19740274219868223167 f 95 = 31940434634990099905 f 96 = 51680708854858323072 f 97 = 83621143489848422977 f 98 = 135301852344706746049 f 99 = 218922995834555169026 f 100 = 354224848179261915075 f100 = 354224848179261915075. 6 / 9 Let’s do it faster! Observation [Mat10]: [ fn−1 fn ] = [0 1 1 1 ] ︸ ︷︷ ︸ A [fn−2 fn−1 ] , if n ≥ 2 [fn−1 fn ] = A [fn−2 fn−1 ] = A (A [ fn−3 fn−2 ]) = · · · = A ( · · · (A [ f0 f1 ]) · · · ) = A (· · · ( A [0 1 ]) · · · ) ︸ ︷︷ ︸ n − 1 A’s = A n−1 [ 0 1 ] (generalized associativity!) To compute fn, we need the matrix An−1 = A · A · · · A︸ ︷︷ ︸ n − 1 times . Then fn is found in the lower right corner (recall [fn−1 fn ] = An−1 [0 1 ]). 7 / 9 Fast powers by iterative squaring A99 = (A49)2 · A = [135301852344706746049 218922995834555169026 218922995834555169026 354224848179261915075 ] ↙ = f100 A49 = (A24)2 · A = [4807526976 7778742049 7778742049 12586269025 ] ↙ A24 = (A12)2 = [28657 46368 46368 75025 ] ↙ A12 = (A6)2 = [ 89 144 144 233 ] ↙ A6 = (A3)2 = [ 5 8 8 13 ] ↙ A3 = (A) 2 · A = [1 2 2 3 ] 8 / 9 References Jiˇr´ı Matouˇsek. Thirty-three Miniatures - Mathematical and Algorithmic Applications of Linear Algebra. American Mathematical Society, 2010. https://kam.mff.cuni.cz/~matousek/stml-53-matousek-1.pdf. 9 / 9","libVersion":"0.3.2","langs":""}