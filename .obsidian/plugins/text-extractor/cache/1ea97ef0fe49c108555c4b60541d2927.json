{"path":"sem4/FMFP/UE/e/FMFP-u07-e.pdf","text":"Formal Methods and Functional Programming Exercise Sheet 7 252-0058-00L March 31, 2025 For the first part of the course, there will be both pen-and-paper exercises and programming exercises. The programming exercises are uploaded on Code Expert: https://expert.ethz.ch/enrolled/SS25/fmfp/exercises Happy coding! The goal of this week’s exercise sheet and Code Expert exercises is to review all the material of the FP part of the course, hence they consist in exercises taken from previous years’ exams. Since this is the last week of FP, we will not be discussing the solutions of this sheet in the exercise sessions. However, if you have any questions about the solutions (or course material), please don’t hesitate to reach out to your TA. 1. Typing (a) Recall the following functions from the Haskell libraries. (:) :: a -> [a] -> [a] map :: (a -> b) -> [a] -> [b] inits :: [a] -> [[a]] 1 :: Num a => a (<) :: Ord a => a -> a -> Bool Give the most general type for each of the following functions. 1. (\\x y z -> (y x, x z)) 2. (\\x y -> (\\z -> y)) 3. map (1 :) 4. (\\x ys -> inits (map (x <) ys)) (b) Use the typing rules for Mini-Haskell (recalled on the following page) to infer the type of λy. (True, λx. 1 + x y ) 1 Formal Methods and Functional Programming Exercise Sheet 7 252-0058-00L March 31, 2025 The typing rules for Mini-Haskell are as follows: 2","libVersion":"0.5.0","langs":""}