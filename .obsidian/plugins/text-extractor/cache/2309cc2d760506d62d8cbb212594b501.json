{"path":"sem1/EProg/extra/slides/EProg_s11_arrays.pdf","text":"252 - 0027 Ei n f ü h r u n g in d ie Pr o g r a m m i e r u n g 3. 0 Ar r a y s ( Re i h e n ) Th o m a s R . G r o s s De par t m e n t In f o r m a t i k ET H Z ü r i c h 1 Üb e r s i c h t Ve r w a n d t e The m e n : § 3. 0 A r r a y s § 4. 0 K l a s s e n u n d Ob j e k t e Wi c h t i g um « in t e r e s s a n t e » Pr o gr a m m e zu sc h r e i b e n : § 5. 0 In p u t / O u t p u t 2 3 .0 Re i h e n (A r r a y s) Ba s e d o n S l i d e s b y R e g e s e t a l . C o p y r i g h t © P e a r s o n 2 0 1 3 . Co p y r i g h t © T h o m a s G r o s s 2 0 2 3 . Al l r i g h t s r e s e r v e d . 3 Üb e r s i c h t § 3. 0 A r r a y s § 3. 1 M o t i v a t i o n § 3. 2 D e k l a r a t i o n u n d E r s t e l l e n § 3. 3 A r b e i t e n m i t A r r a y s § 3. 4 A r r a y s u n d M e t h o d e n § 3. 5 In v a r ia n t e n – Bei s p i el mi t Ar r a y 4 3 .1 E i n ne ue s Pr o b l e m Si e wo l l e n für di e Mi t g l i e d e r ei n es Sp o r tv e r e i n s ( od e r ei n er Gr uppe / T e a m / Se k ti o n ) Da t e n an al y si e r e n z.B . Gr ös s e : Dur c hs c hni t t s g r ö s s e und An z a h l de r S pie le r / inne n die übe r de m Dur c hs c hni t t lie g e n Kö n n t e so au sse h e n § In p u t un t e r s t r ic he n Anzahl Mitglieder ? 6 Groesse in cm: 165 Groesse in cm: 164 Groesse in cm: 158 Groesse in cm: 163 Groesse in cm: 169 Groesse in cm: 181 Durchschnitt in cm = 166.7 Anzahl ≥ Durchschnitt : 2 (33 %) 5 Sc h ri t t e § Je d e r We r t ( Gr ös s e ) m u ss ei n g eg eb en we r d e n um de n Dur c hs c hni t t zu be r e c hne n ( Su m m e div idie r t dur c h An z a h l Mi t g l i e d e r ) § Na c h de r Be r e c h n u n g de s Dur c hs c hni t t s mü s s e n wi r zä h l e n wi e v i e l e Pe r s o n e n gr ö s s e r ( gl e i ch ) al s de r Dur c hs c hni t t si n d § Ab e r d e n Dur c hs c hni t t ke n n e n wi r er s t zu m Sc h l u ss § Mü s s e n die Me s sw e r t e bis zu m En d e sp e i c h e r n 6 Wa s is t pr o ble m a t is c h ? § Je d e r We r t m u s s zw e i m a l ve r w e n d e t we r d e n : § Um d e n Dur c hs c hni t t zu be r e c hne n § Um d i e An z a h l Pe r s o n e n die gr ö s s e r ( gl e i ch ) al s de r Dur c hs c hni t t si n d zu fi n d e n § Kö n n te n na t ür lic h je d e n We r t i n ei n er Va r i a b l e sp e i c h e r n … a b e r : § Wi r wi s s e n nic h t mi t wi e v i e l e n Pe r s o n e n wi r ar be i t e n bis das Pr og r a m m aus g e f ühr t wi r d § Wi r wi s s e n nic h t wi e v i e l e Va r i a b l e wi r br auc he n § Wi r br auc he n ei n en We g , me h r e r e Va r i a b l e a u f ei n m a l zu de k lar ie r e n 7 «A rr a y s » ( Re i h e n ) § Ei n A r r a y er l a u b t uns me h r e r e We r t e de s se l b e n Ty p s zu sp e i c h e r n § El e m e n t : Ei n W e r t i n ei n em Ar r a y . § In d e x: Za h l (> = 0 ) u m ei n El e m e n t ei n es Ar r a y s aus z uw ähl e n § Ba s e : D a s er s t e El e m e n t h a t d e n I n d e x 0 8 «A rr a y s » ( Re i h e n ) § Ei n A r r a y er l a u b t uns me h r e r e We r t e de s se l b e n Ty p s zu sp e i c h e r n . § El e m e n t : Ei n W e r t i n ei n em Ar r a y . § In d e x: Za h l (> = 0 ) u m ei n El e m e n t ei n es Ar r a y s aus z uw ähl e n § Ba s e : D a s er s t e El e m e n t h a t d e n I n d e x 0 In d e x 0 1 2 3 4 5 6 7 8 9 We r t 12 49 - 2 26 5 17 - 6 84 72 3 Ele m e n t 0 Ele m e n t 4 Ele m e n t 9 Ei n A r r a y f ü r int We r t e 9 «A rr a y s » ( Re i h e n ) § Ei n A r r a y er l a u b t uns me h r e r e We r t e de s se l b e n Ty p s zu sp e i c h e r n § El e m e n t : Ei n W e r t i n ei n em Ar r a y . § In d e x: Za h l (> = 0 ) u m ei n El e m e n t ei n es Ar r a y s aus z uw ähl e n § Ba s e : D a s er s t e El e m e n t h a t d e n I n d e x 0 § Mü s s e n Va r i a b l e de k l a r i e r e n um a uf A r r a y zu g r e i f e n zu kö n n e n § De k l ar a t i o n in ei n er Met h o d e ( z.B . main ) 10 3 .2 A r r a y Va r i a b l e – De kl a r a t i on d e r V a r i a b l e und Er s t e l l e n d e s A r r a y s De k l a r i e r e n d e r V a r i a b l e Er s t e l l e n d e s A r r a y s In i t i a l i s i e r e n (A rr a y w i r d im m e r init ia lis ie r t w e nn e r s t e llt ) § Zw e i V a r i a n t e n § De k l ar a t i o n de r V ar i abl e und Er s t e l l e n de s A r r a y s zu s am m e n § Nu r De k l ar a t i o n de r V ar i abl e 11 ty p e [] name = new ty p e [ le n g t h ] § ty p e : D e r Ty p de r El e m e n t e de s A r r a y s De k l a r a t i o n und Ini t i a l i s i e r ung nam e ve r w e i s t a u f Ar r a y v o n ty p e El e m e n t e n ty p e [] name = new ty p e [ le n g t h ] § ty p e : D e r Ty p de r El e m e n t e de s A r r a y s § Ge n a u e r : § ty p e _ v a r [] nam e = new ty p e _ e l e m e n t [ le n g t h ]; § Z. Zt . mü s s e n ty p e _ v a r und ty p e _ e l e m e n t ide n t is c h se i n § Be is p ie l : § int [] numbers = new int [10]; z. Z t . : s e l b e r Ty p ! ty p e [] name = new ty p e [ le n g t h ] § ty p e : D e r Ty p de r El e m e n t e de s A r r a y s § nam e : N a m e d e r V a ri a b l e mi t de r Zu g r i f f mö g l i c h is t § new : O p e r a t o r d e r A rr a y mi t Pl a t z für le n g t h El e m e n t er s t el l t § le n g t h : Lä n g e – be l i e bi g e r int Au s d r u c k ≥ 0 § Be is p ie le : § int[] numbers = new int[10]; § int x = 2 * 3 + 1; § int[] data = new int[x % 9 + 3]; ty p e [] name = new ty p e [ le n g t h ] Sy n t a x § Be is p ie l : int [] numbers = new int [10]; § De k l ar i e r t Va r i a b l e numbers und lä s s t si e auf A r r a y mi t 10 El e m e n t e n de s Ty p s int ve r w e i s e n In d e x 0 1 2 3 4 5 6 7 8 9 We r t numbers Pl a t z für int We r t Pl a t z für int We r t 15 ty p e [] name = new ty p e [ le n g t h ] Sy n t a x § Be is p ie l : int [] numbers = new int [10]; § De k l ar i e r t Va r i a b l e numbers und lä s s t si e auf A r r a y mi t 10 El e m e n t e n de s Ty p s int ve r w e i s e n numbers Pl a t z für int We r t Pl a t z für int We r t 16 In d e x 0 1 2 3 4 5 6 7 8 9 We r t ? ? ? ? ? ? ? ? ? ? Ar r a y : De k l a r i e r e n und Er s t e l l e n § new : O p e r a t o r d e r A r r a y mi t Pl a t z fü r le n g t h El e me n t er s t el l t § Wa s für We r t e so l l e n da ( a m An f a n g ) ge s p e i c h e r t we r d e n ? § Wo l l e n ve r h i n d e r n das s ei n Pr og r a m Da t e n ei n es ande r e n lie s t § Wo l l e n be i wi e d e r h o l t e r Au s f ü h r u n g das se lb e Re s u l t a t ( oh n e In p u t … ) § Dahe r ge n a u de f inie r t : § Je d e s El e m e n t wi r d au f ei n en We r t de r N ul l « en t s p r i c h t » ge s e t z t § Vo r e i n s t e l l u n g (« d e f a u l t » ) Ty p e De f aul t W e r t int 0 long 0 double 0.0 boolean false String null 22 Ar r a y : De k l a r i e r e n (d e r V ar i ab l e ) ohne Er s t e l l e n (d e s A r r a y s) ty p e [] na m e ; § De k l a r i e r t ei n e Va r i a b l e ( na m e ) d i e a u f A r r a y s mi t ty p e El e m e n t e n ve r w e i s t § Be is p ie l : int[] numbers; § Ke i n e Lä n g e nö t ig § Va r i a b l e numbers ka n n auf A r r a y mi t 10 int El e m e n t e n , a u f A r r a y mi t 7 int El e m e n t e n , a u f A r r a y mi t 42 int El e m e n t e n … ve r w e i s e n § Sp ä t e r Zu w e i s u n g nö t ig § z.B . numbers = new int[42]; 24 «A rr a y s » ( Re i h e n ) § Ei n A r r a y er l a u b t uns me h r e r e We r t e de s se l b e n Ty p s zu sp e i c h e r n § El e m e n t : Ei n W e r t i n ei n em Ar r a y . § In d e x: Za h l (> = 0 ) u m ei n El e m e n t ei n es Ar r a y s aus z uw ähl e n § Ba s e : D a s er s t e El e m e n t h a t d e n I n d e x 0 § Zu g r i f f au f E l e m e n t : N am e ei n er Va r i a b l e d i e a u f d e n A r r a y ve r w e i s t und I nde x 25 Zug r if f au f El e m e n t e : name [ in d e x ] Se t z e n § nam e [ in d e x ] = ex p r e s s i o n ; // Modifikation § nam e : N a m e d e r V a ri a b l e u m a u f Ar r a y e l e m e n t e zu zu gr e i f e n § in d e x : int We r t ( Au s d r u c k de r int er g i b t ) § ex p r e s s i o n : Au s d r u c k de r W e r t vo m Ty p de r El e m e n t e de s Ar r a y s er g i b t int[] data; data = new int[10]; data[0] = 27; data[3] = - 6; In d e x 0 1 2 3 4 5 6 7 8 9 We r t 0 0 0 0 0 0 0 0 0 0 In d e x 0 1 2 3 4 5 6 7 8 9 We r t 27 0 0 - 6 0 0 0 0 0 0 data Zug r if f au f El e m e n t e : name [ in d e x ] Lesen § nam e [ in d e x ] lie f e r t We r t d e s E l e m e n t s in d e x § nam e : N a m e d e r V a ri a b l e u m a u f Ar r a y e l e m e n t e zu zu gr e i f e n § in d e x : int We r t ( Au s d r u c k de r int er g i b t ) § Ka n n übe r a l l au f t r e t e n wo ei n We r t ( d i e s e s Ty p s ) ve r w e n d e t we r d e n ka n n int j = data[0]; int k = data[3]; System.out.print ( j+k ) in d e x 0 1 2 3 4 5 6 7 8 9 va l u e 0 0 0 0 0 0 0 0 0 0 In d e x 0 1 2 3 4 5 6 7 8 9 We r t 27 0 0 - 6 0 0 0 0 0 0 21 27 Ar r a y s fü r an d e r e Ty p e n boolean [] results = new boolean [5]; results[2] = true; results[4] = true; String[] address = new String[6]; address[3] = \" Florastrasse 6\"; In d e x 0 1 2 3 4 We r t fa l s e fa l s e tr u e fa l s e tr u e In d e x 0 1 2 3 4 5 We r t nul l nul l nul l \" Fl o r a s t r a s s e 6\" nul l nul l 28 Leg a le In d e x We r t e Le g a l e In d e x We r t e : zw i s c h e n 0 u n d ( Lä n g e de s A r r a y s - 1). § Ei n s c h l i e s s l i c h § Les en od e r Sc h r e i b e n ( Zu g r i f f , « a c c e s s » ) mi t ei n em In d e x aus s e r hal b die s e s Be r e ic h s re s u l t i e r t in ei n er ArrayIndexOutOfBoundsException § «O u t - of - bo unds » Fe h l e r In d e x 0 1 2 3 4 5 6 7 8 9 We r t 0 0 0 0 0 0 0 0 0 0 10 11 12 … … - 3 - 2 - 1 29 Out - of - bo unds Zug r if f e § Ex a m p l e : int [] data = new int[10]; System.out.println(data[0]); // okay System.out.println(data[9]); // okay System.out.println(data[ - 1]); // exception System.out.println(data[10]); // exception In d e x 0 1 2 3 4 5 6 7 8 9 We r t 0 0 0 0 0 0 0 0 0 0 Ex c e p t i o n b e w i r k t Ab b r u c h de r Au s f ü h r u n g d i e s e s Pr og r a m m s data 30 Ar r a y s und Zug r if f e au f El e m e n t e int [] numbers = new int[8]; numbers[1] = 3; numbers[4] = 99; numbers[6] = 2; int x = numbers[1]; numbers[x ] = 42; numbers[numbers[6]] = 11; // use numbers[6] as index xx 3 In d e x 0 1 2 3 4 5 6 7 We r t 0 0 0 0 0 0 0 0 In d e x 0 1 2 3 4 5 6 7 We r t 0 3 11 42 99 0 2 0 In d e x 0 1 2 3 4 5 6 7 We r t 0 3 0 0 99 0 2 0 In d e x 0 1 2 3 4 5 6 7 We r t 0 3 0 42 99 0 2 0 numbers 32 Ar r a y s und f o r - Sc h l e i f e n § Of t wi r d au f Ar r a y e l e m e n t e in ei n er «f o r» - Sc h l e i f e zu g e g r i f f e n for ( int i = 0; i < 8; i ++) { System.out.print(numbers[i ] + \" \"); } System.out.println (); // output: 0 3 11 42 99 0 2 0 § Ei n e Sc h l e i f e ei g n e t si c h au c h zu r Zu w e i su n g an je d e s El e m e n t ei n es Ar r a y s . for ( int i = 0; i < 8; i ++) { numbers[i ] = 2 * i ; } In d e x 0 1 2 3 4 5 6 7 We r t 0 2 4 6 8 10 12 14 numbers 33 Da s length At t r i b u t Da s length At t r i b u t ei n es Ar r a y s na m e lie f e r t di e An z a h l de r El e m e n t e na m e .length for ( int i = 0; i < numbers.length ; i ++) { System.out.print(numbers[i ] + \" \"); } // output: 0 2 4 6 8 10 12 14 34 A r r a y In i t i a l i s i e r u n g § (R i c h t i g e ) P r og r a m m e l e s e n D a t e i e n u m A r r a y z u in it ia lis ie r e n § Wi r k ö n n e n e i n e n L o o p v e r w e n d e n … for (int i = 0; i < 8; i ++) { numbers[ i ] = 2 * i ; } § Ma n c h m a l m ü h s a m § Ja v a e r l au b t I n i ti al i s i e r u n g m i t K o n s t an t e n 41 A r r a y In i t i a l i s i e r u n g § ty p e [] na m e = { va l ue 1 , va l ue 2 , … . , va l ue N } § De k l a r i e r t u n d i n i t i a l s i e r t A r r a y na m e mi t N E l e me n t e n § va l ue i : T y p m u s s m i t ty p e übe r e i ns ti m m e n int[] myIntArray = { 1, 3, 8, 4, 10, 11, 0, - 2} 42 In d e x 0 1 2 3 4 5 6 7 We r t 1 3 8 4 10 11 0 - 2 myIntArray A r r a y In i t i a l i s i e r u n g f ü r a n d e r e T y p e n § ty p e [] na m e = { va l ue 1 , va l ue 2 , … . , va l ue N } double[] myDoubleArray = {1.0, 0.0, 0.5, 0.99999999999}; boolean [] myBooleanArray = {true, true, true, false}; String[] myStringArray = {\" ein \", \" Versuch \"} 43 In d e x 0 1 2 3 We r t 1. 0 0. 0 0. 5 0. 99999999999 myBooleanArray In d e x 0 1 2 3 We r t tr u e tr u e tr u e fa l s e myDoubleArray myBooleanArray In d e x 0 1 We r t \" ei n \" \" Ve r s u c h \" Un s er Be i s p i e l am An f a n g ( Me s s w e r t a n a l y s e ) Ei n Ar r a y hi l ft uns , di e s e s Pr o gr a m m zu sc h r e i b e n Anzahl Mitglieder ? 6 Groesse in cm: 165 Groesse in cm: 164 Groesse in cm: 158 Groesse in cm: 163 Groesse in cm: 169 Groesse in cm: 181 Durchschnitt in cm = 166.7 Anzahl ≥ Durchschnitt : 2 (33 %) 44 Pr o gr a m m // Liest Groessen , berechnet Durchschnitt , gibt Anzahl und // Prozentsatz >= Durchschnitt aus import java.util.Scanner ; public class Analyse { public static void main(String[] args ) { Scanner input = new Scanner( System.in ); System.out.print (\" Anzahl Mitglieder ? \"); int members = input.nextInt (); int[] data = new int[members]; double sum = 0.0; for (int i = 0; i < members; i ++) { // Groesse einlesen System.out.print (\" Groesse in cm: \"); data[ i ] = input.nextInt (); sum += data[ i ]; } // Fortsetzung naechste Seite 45 Pr o gr a m m , Fo r t s e t z u n g // compute results double avg = (double) sum/members; System.out.println (\" Durchschnitt in cm = \" + avg); int count = 0; for (int i = 0; i < members; i ++) { if (data[ i ] >= avg) { count++; }; } // report results System.out.println (\" Anzahl >= Durchschnitt : \" + count + \" (\" + (double)count/members*100 + \" %)\"); // Formatierung koennte besser sein … } } 46 Di s k u s s i o n § Id e a le r w e is e k ö n n e n w ir d ie s e A n w e is u n g e n in e in e r Me t h o d e o r g a n i s i e r e n § Mö c h t e n d e n A r r a y d e r Me s sw e r t e a l s P a r a m et e r ü b e r g e b e n k ö n n e n § Wi r i g n o r i e r e n F o r m a t i e r u n g d e r E r g e b n i s s e 47 3 .3 A r b e i t e n m i t A r r a y s 50 Ja v a V ari ab l e – Re f e r e n z t y p § Ei n e Re f e r e n z v a r i a b l e ( auc h : «r e f e r e n ce t y p e v a ri a b l e », V a ri a b l e ei n es Re f e r e n z t y p s ) er l au b t den Zu g ri f f au f ei n en Ar r a y int[] myArray ; § myArray is t ei n e Re f e r e n z v a r i a b l e ( ka n n für Ar r a y s v o n int We r t e n ge b r a u c h t we r d e n ) § Ni c h t fü r ande r e Ar t e n vo n A r r a y s ( daz u sp ä t e r me h r ) § Sp e i c h e r t / lie f e r t In f o r m a t i o n d i e Zu g r i f f au f A rr a y er l au b t § Na c h de r De k l a r a t i o n gi b t es no c h ke i n e n Pl a t z fü r di e Da t e n 51 Ja v a V ari ab l e – Re f e r e n z t y p § int[] myArray de k lar ie r t ei n e Re f e r e n z v a r i a b l e ( ka n n fü r Ar r a y s v on int We r t e n ge b r a u c ht we r d e n ) § Spe i c he r t / lie f e r t In f o r m a t io n d ie Zu g r i f f auf A r r a y er l a u b t § No c h gi b t es ke i n e n Be r e i c h de r Da t e n sp e i c h e r t § Er s t Zu w e i su n g ve r k n ü p f t Re f e r e n z v a r i a b l e mi t ei n em Ar r a y § En t w e d e r in de r De k l ar a t i o n int[] myArray = new int[10] ; § Od e r i n se p a r a t e n Sc h r i t t e n § int[] myArray ; § myArray = new int[10]; 52 int[] myArray = {0, 1, 4, 9}; Di r e k t e In i t i a l i s i e r u n g nur mi t De k l ar a t i o n mö g l i c h Ja v a V ari ab l e – Re f e r e n z t y p § int[] myArray de k lar ie r t ei n e Re f e r e n z v a r i a b l e ( ka n n fü r Ar r a y s v on int We r t e n ge b r a u c ht we r d e n ) § Er s t Zu w e i su n g ve r k n ü p f t Re f e r e n z v a r i a b l e mi t ei n em Ar r a y § Wi e d e r h o l t e Zu w e i su n g e n si n d mö g l i c h int [] myArray = {0, 1, 4, 9}; // Deklaration // myArray [2]== 4 myArray = new int [3]; // myArray verweist auf {0,0,0} § Au c h Zu w e i su n g au f an d e r e n ( ex i s t i e re n d e n Ar r a y) is t mö g l i c h int[] yourArray = myArray ; 53 § Du r c h ei n e Zu w e i su n g ka n n ei n e Re f e r e n z v a r i a b l e au f ei n en an d e r e n Ar r a y ve r w e i s e n int [] a = { 4, 3, 2, 1, 0}; int[] b = { 10, 20, 30, 40 }; a = b ; // a:[10, 20, 30, 40] § Di e re c h t e Se i t e ei n er Zu w e i su n g zu ei n er Re f e r e n z v a r i a b l e mu s s au c h ei n e Re f e r e n z v a r i a b l e se i n . § De r Ty p de r El e m e n t e mu s s übe r e ins t im m e n § Di e An z a h l de r El e m e n t e mu s s ni c h t übe r e ins t im m e n § (O d e r Er g e b n i s de s new Op e r a t o r s ) 54 In d e x 0 1 2 3 4 We r t 4 3 2 1 0 a b In d e x 0 1 2 3 We r t 10 20 30 40 § Du r c h ei n e Zu w e i su n g ka n n ei n e Re f e r e n z v a r i a b l e au f ei n en an d e r e n Ar r a y ve r w e i s e n int [] a = { 4, 3, 2, 1, 0}; int [] b = { 10, 20, 30, 40}; a = b; § Und we n n a ni c h t me h r au f di e s e n Ar r a y ve r w e i s e n so l l ? § Zu w e i s u n g de s be s o nde r e n We r t e s null a = null; § null he is s t das a auf ke i n e n Ar r a y ve r w e i s t § Nu r no c h b ve r w e i s t je t zt auf de n A r r a y 55 In d e x 0 1 2 3 4 We r t 4 3 2 1 0 a b In d e x 0 1 2 3 We r t 10 20 30 40 Zug r if f au f El e m e n t e de s Ar r a y s … er f o r d er t [ .. ] ( mi t le g a le m In d e x ) ( we n n Ar r a y ex i s i t i e r t ) myArray [1] = 99; int b = myArray [7]; System.out.println ( myArray [1]); //99 [..] is t au c h ei n Op e r a t o r ( mi t hö c hs t e m Ra ng ) So n s t ma c h t myArray [1]+1 ke i n e n Si n n 56 Ja v a Re f e r e n z va r i a b l e § Wi r mü s s e n un t e r s c he i de n zw i s c h e n § Zu g r i f f auf ei n El e m e n t ( mi t t e l s name[index] ) § Zu g r i f f auf de n A r r a y auf de n di e Re f e r e n z v a r i a b l e ve r w e i s t § z.B . um ande r e Re f e r e n z v a r i a b l e zu se t z e n ( = name ) § Re f e r e n z v a r i a b l e is t ei n e Ku r z f o r m um zu sag e n : d i e s is t ei n e Ja v a V ar i ab l e d e s Ty p s «R e f e r e n ce a u f … . » long[] longArray ; // Ve r w e i s t au f A rr a y mi t long El e m e n t e n int[] intArray ; // Ve r w e i s t au f A rr a y mi t int El e m e n t e n 58 null § null is t de r W e r t ei n er Re f e r e n z v a r i a b l e di e a uf ke i n e n Ar r a y ve r w e i s t . 59 int[] a = new int[10]; a[0] = 1; ✓ System.out.println(a.length); ✓ a = null; System.out.println(a.length); ✘ a[1] = 2; ✘ System.out.println(a); ✓ //null Wa s p a s s i e r t m i t d e m A r r a y {4 , 3 , 2 , 1 , 0}? Na c h Zu w e i s u n g vo n null ve r w e i s t ei n e Re f e r e n z v a r i a b l e auf ke i n e n Ar r a y int[] a = { 4, 3, 2, 1, 0}; int[] b = { 10, 20, 30, 40}; a = b; a = null; We n n ke i n e we i t e r e Re f e r e n z v a r i a b l e au f d e n A r r a y ve r w e i s t da nn is t de r A r r a y une r r e i c hba r § Ke i n e di r e k t e Au s w i r k u n g au f Pr o g r a m m a u s f ü h r u n g § Ka n n (u n d wi r d ) ir g e n d w a n n vo m Ja v a S y s t em en t f er n t we r d e n ( ni c h t uns e r Th e m a , ab h än g i g vo n V e r s i o n , Sp e i c h e r p l a tz , H o s t , … ) § Wi r kö n n e n uns au f d as Er s t e l l e n ei n es ko r r e k t e n Pr o g r a m m s « be sc hr ä nk e n » 60 In d e x 0 1 2 3 4 We r t 4 3 2 1 0 a b In d e x 0 1 2 3 We r t 10 20 30 40 Re f e r e n c e S e m a n t i c s § We n n ei n e Re f e r e n z v a r i a b l e al s Op e r a n d i n ei n er Zu w e i su n g er s c h ei n t ( x=y ) da nn wi r d de r A r r a y ni c h t ko p i e r t so n d e r n be i de Va r i a b l e n be z i e he n si c h nun ( ve r w e i s e n nun) au f d e n se l b e n Ar r a y : Re f e r e n c e S e m a n t i c s ! § Va r i a b l e n x und y en t h a l t en nun ei n e Re f e r e n z (« r e f e r e n c e » , Ve r w e i s ) a u f d e n se l b e n Ar r a y . Ve r ä n d e r u n g e n de r El e m e n t e ei n er Re f e r e n z v a r i a b l e be w i r k e n ei n e Än d e r u n g de r We r t e de r ande r e n Re f e r e n z v a r i a b l e . § Al i a s i n g : zw e i ( od e r me h r ) Re f e r e n z v a r i a b l e ve r w e i s e n auf de n se l b e n Ar r a y 61 Ve r w e i s e und Ar r a y s § Ar r a y s ve r w e n d e n Re f e r e n c e S e m a n t i c s . Wa r u m ? § Ef f i z i e n z . Das Ko p i e r e n gr o s s e r A r r a y s ko s t e t ( zu ) v i e l Ze i t . § Pr o g r a mms t r u k t u r . Es is t of t si n n v o l l (u n d lo g is c h ) we n n ve r s c h i e d e n e Met h o d e n mi t ei n em ( ge m e i n s a m e n ) A rr a y ar be i t e n . int [] dataSet = new int [ … ]; step1(dataSet); step2(dataSet); § Ob j e k t e ve r w e n d e n au c h Re f e r e n c e S e m a n t i c s 62 Ar r a y s sin d Obj ek t e § … ab e r vi e l e Op e r a t o r e n si n d für Ob j e k t e ni c h t de fi ni e r t § De r Ad d i t i on s op e r a t or + is t nur fü r St r i n g s de f inie r t String s = \"hello\"; String t = \"world\"; s = s + \" \" + t; // \"hello world\" Scanner sc = new Scanner( System.in ); Scanner ec = new Scanner( System.in ); sc = sc + ec ; // operator + cannot be applied § De r Mu l t i p l i k a t i o n s o p e r a t o r * is t auc h fü r St r i n g s nic h t de f inie r t s = 2 * s ; // operator * cannot be applied § Au c h d i e me i s t e n Ve r g l e i c h s o p e r a t o r e n si n d ni c h t de fi ni e r t § Und O ut put au c h ni c h t so wi e wi r es wo l l e n 66 Ar r a y s § Ma n c h m a l wü n s c h en wi r uns ( vi e l l e i c h t ) da s s ( z. B .) + de fi ni e r t is t int [] a = new int[10]; int [] b = new int[10]; a = a + b; // error if ( a >= b ) { … } // error § Ab e r J a v a un t e r s tütz t di e s ni c h t . 68 Ve r g l e i c h e vo n A r r a y s § Le i d e r gi b t es ke i n equals für Ar r a y s § Wi e fü r St r i n g s: if (\" hello\".equals ( myString )) { … } § Ma n ka n n zw e i Ar r a y s we d e r mi t == no c h mi t equals ve r g l e i c h e n um zu pr üf e n ob si e die se l b e n El e m e n t e habe n int [] a1 = {42, - 7, 1, 15}; int [] a2 = {42, - 7, 1, 15}; if ( a1 == a2 ) { ... } // incorrect! if ( a1.equals(a2) ) { ... } // incorrect! 69 3 .4 A r r a y s u n d Me th od en § Ar r a y P a r a m e t e r § Ar r a y Rüc k g a be We r t e 70 Fi l t e r § Sc h r e i b e n Si e ei n Pr o gr a m m (s e g m e n t ) d a s i n ei n em Ar r a y al l e El e m e n t e < 0 a u f 0 se t z t § Zu m Be is p ie l fü r die s e n Ar r a y : [11, - 42, - 5, 27, 0, 89] § So l l t e de r ge f i l t e r t e Ar r a y s o aus s e he n : [11, 0, 0, 27, 0, 89] § Da s Pr o gr a m m so l l t e für int Ar r a y s je d e r Gr ö s s e funk t i o ni e r e n . 71 Fi l t e r — Va r i a n t e 1 § De r A r r a y d e r El e m e n t e is t si c h t b ar , N a m e de r Re f e r e n z v a r i a b l e numbers // filter the array numbers for ( int i = 0; i < numbers.length ; i ++) { if ( numbers[i ] < 0) { numbers[i ] = 0; } } 72 Fi l t e r , Ve r b e s s e r t e An f o r d e r u n g e n § Sc h r e i b e n Si e ( au sg e h e n d vo n d e m Pr o gr a m m Se g m e n t d as ei n en Ar r a y fi l t e r t ) ei n e filter Me t h o d e § So l l d e n A r r a y , de s s e n We r t e zu fi l t e r n si n d , al s Pa r a m e t e r ak z e p t i e r e n . int [] numbers = {11, - 42, - 5, 27, 0, 89}; filter( the_numbers ); 73 Fi l t e r , Ve r b e s s e r t e An f o r d e r u n g e n § Sc h r e i b e n Si e ( au sg e h e n d vo n d e m Pr o gr a m m Se g m e n t d as ei n en Ar r a y fi l t e r t ) ei n e filter Me t h o d e § So l l d e n A r r a y , de s s e n We r t e zu fi l t e r n si n d , al s Pa r a m e t e r ak z e p t i e r e n . int [] numbers = {11, - 42, - 5, 27, 0, 89}; filter( the_numbers ); § Fr a g e n : 1. Wi e sc h r e i b e n wi r ei n e Met h o d e die ei n en Ar r a y al s Pa r a m e t e r ha t ? 2. (W i e ) Mü s s e n wi r de n In h a l t de s ge ä n d e r t e n Ar r a y s nac h Ve r a r b e i t u n g zu r ü c k ge b e n ? 74 Ar r a y P a r a m e t e r ( De k l a r a t i o n ) re t u rn _ t y pe me t h o d N a me ( ty p e [] na m e ) § De k l ar a t i o n ei n er Met h o d e me t h o d Na me die ei n en Ar r a y al s Pa r a m e t e r ak z e p t i e r t § … u n d da nn au c h er f o r d er t § me h r e r e Pa r a m e t e r mö g l i c h ( wi e bi s he r ), au c h ge w ö h n l i c h e ( sk a l a r e ) P a r a m e t e r § re t u rn _ t y p e : Ty p de s Rü c k g a b e w e r t e s § Di e be k a nn t e n Re g e l n ( we r d e n de m nä c hs t er w ei t er t ) § ty p e : Ty p de r El e m e n t e de s A r r a y s § na m e : N a m e d e s fo r m a l e n Pa r a m e t e r s 75 Ar r a y P a r a m e t e r ( De k l a r a t i o n ) re t u rn _ t y p e me t h o d Na me ( ty p e [] na m e ) § Be i s p i e l : // Returns the average of the given array of numbers int average( int[] numbers ) { int sum = 0; for ( int i = 0; i < numbers.length ; i ++) { sum += numbers[i ]; } return sum / numbers.length ; } 76 Ar r a y P a r a m e t e r ( De k l a r a t i o n ) re tu rn _ ty p e me t h o d N a me ( ty p e [] na m e ) § In de r De k l a r a t i o n st e h t da s s ei n Ar r a y P a r a m e t e r ge b r a u c h t wi r d § Ke i n e An g a b e de r Gr ös s e § An g a b e de s Ty p s de r El e m e n t e § Ob w o h l die Lä n g e de s A r r a y s nic h t in de r Pa r a m e t e r l i s t e er s c h ei n t so ka n n die Met h o d e die Lä n g e je d o c h he r aus f inde n § le ng t h At t r i b u t name.length 77 Au f r u f ei n er Me t h o d e mi t Ar r a y P a r a m e t er § Wi e g e h a b t ( A u f r u f e i n e r Me t h o d e m i t B a s i s t y p P a r a m e t e r n ) 78 Ar r a y P a r a m e t e r ( Auf r uf ) me t h o d N a me ( array N am e ); § ar r ayN am e : Na m e d e s ak t u e l l e n Pa r a m e t e r s § Bei s p i el : // figure out the average TA IQ int [] iq = {126, 84, 149, 167, 95}; int avg = average( iq ); System.out.println (\"Average IQ = \" + avg); 79 Ar r a y P a r a m e t e r ( Auf r uf ) me t h o d N a me ( array N am e ); § ar r ayN am e : Na m e d e s ak t u e l l e n Pa r a m e t e r s § Bei s p i el : // figure out the average TA IQ int [] iq = {126, 84, 149, 167, 95}; int avg = average( iq ); System.out.println (\"Average IQ = \" + avg); Ke i n e [] we n n de r Ar r a y übe r g e be n wi r d ! 80 Ar r a y Rü c kg ab e ( De k l a r a t i o n ) § Me t h od e n kö n n e n au c h Ar r a y s zu r ü c k g e b e n re t u rn _ t y p e [] me t h o d Na me ( Pa r a m e t e r L i s t e ) { re t u rn _ t y p e : Ty p de r El e m e n t e de s zu r ü c k g e g e b e n e n Ar r a y s § Wi e d e r ve r w e n d e n wi r ei n return St a t e m e n t u m an z u g e b e n , w a s al s Er g e b n i s ei n er Me t h od e zu r ü c k g e g e b e n wi r d . 81 Ar r a y Rü c kg ab e Be i s p i e l // Returns a new array with two copies of each value. // Example: [1, 4, 0, 7] - > [1, 1, 4, 4, 0, 0, 7, 7] int[] duplicateElements (int[] numbers) { int [] result = new int[2 * numbers.length ]; for ( int i = 0; i < numbers.length ; i ++) { result[2 * i ] = numbers[i ]; result[2 * i + 1] = numbers[i ]; } return result; } 82 Ar r a y Rü c kg ab e w e rt e § Di e au f r u f e n d e Me t h o d e so l l t e de n Rüc k g a be w e r t en t g eg en ne hm e n § Da f ür br auc he n wi r ei n e pas s e nde Va r i a b l e re t u rn _ t y pe [] na m e = me t h o d N a me ( pa r a m e t e r s ); int[] iq = {126, 84, 149, 167, 95}; int[] iqd = duplicateElements ( iq ); 85 Fi l t e r , Ve r b e s s e r t e An f o r d e r u n g e n § Sc h r e i b e n Si e ( au sg e h e n d vo n d e m Pr o gr a m m Se g m e n t d as ei n en Ar r a y fi l t e r t ) ei n e filter Me t h o d e § So l l d e n A r r a y , de s s e n We r t e zu fi l t e r n si n d , al s Pa r a m e t e r ak z e p t i e r e n . int [] numbers = {11, - 42, - 5, 27, 0, 89}; filter( the_numbers ); § Fr a g e n : 1. Wi e sc h r e i b e n wi r ei n e Met h o d e die ei n en Ar r a y al s Pa r a m e t e r ha t ? 2. (W i e ) Mü s s e n wi r de n In h a l t de s ge ä n d e r t e n Ar r a y s nac h Ve r a r b e i t u n g zu r ü c k ge b e n ? 87 Fi l t e r – Va r i a n t e 2 § Sc h r e i b e n Si e ( au sg e h e n d vo n de m Pr o gr a m m Se g m e n t d as ei n en Ar r a y fi l t e r t ) ei n e filter Me t h o d e . § So l l d e n A r r a y , de s s e n We r t e zu fi l t e r n si n d , al s Pa r a m e t e r ak z e p t i e r e n . int [] numbers = {11, - 42, - 5, 27, 0, 89}; int [] filteredNumbers = filter(numbers); § An t w o r t au f Fr a g e 1: int[] filter (int[] inputArray ) { … return filtered; // result Array } 88 Fi l t e r – vo l l s t ä n d i g e Va r i a n t e 2 int[] filter (int [] numbers) { int [] filtered = new int[numbers.length ]; for ( int i = 0; i < numbers.length ; i ++) { if ( numbers[i ] < 0) { filtered[i ] = 0; } } return filtered; } 89 Fi l t e r – vo l l s t ä n d i g e Va r i a n t e 2 int[] filter (int [] numbers) { int [] filtered = new int[numbers.length ]; for ( int i = 0; i < numbers.length ; i ++) { if ( numbers[i ] < 0) { filtered[i ] = 0; } } return filtered; } § Ve r g i s s t ( le id e r ) d i e We r t e di e > = 0 si n d ! 90 Fi l t e r – Va r i a n t e 3: Lö sung mi t Ei n s c h r ä n k u n g e n int[] filter (int[] numbers) { int [] filtered = new int [ numbers.length ]; for ( int i = 0; i < numbers.length ; i ++) { if ( numbers[i ] < 0) { filtered[i ] = 0; } else { filtered[i ] = numbers[i ]; } } return filtered ; } 91 Di s k u s s i o n § Lö s ung ko r r e k t ( gi b t uns de n ge w ü n s c h te n Ar r a y ) § Ne h me n wi r an d e r A r r a y h a t d i e Lä ng e 8’ 500’ 000 u n d 20 El e m e n t e < 0 § Wi e vi e l e Zu w e i s u n g e n we r d e n au s g e f ü h r t ? § Wi e vi e l e da v o n si n d ab s o l u t no t w e ndig ? § Ei n e Me t h od e mö c h t e El e m e n t e ei n es Ar r a y s mo d i f i z i e r e n ohne di e El e m e n t e ko p i e r e n zu mü s s e n § Ei n Be i s p i e l vo n vi e l e n … 92 Ar r a y P a r a m e t e r § Wi r wo l l e n ei n er Me t h o d e er l a u b en , ei n en Ar r a y ( od e r ei n Obj e k t ) al s Pa r a m e t e r zu er h a l t en ohne da s s di e Ar r a y e l e m e n t e ko p i e r t we r d e n mü s s e n § Wi r sp a r e n Ze i t . § Wi r sp a r e n Pl a t z . § Wi r kö n n e n Ve r ä n d e r u n g e n (« U p d a t e s» ) dir e k t (« i n p l a c e » ) vo r n e h m e n § Da n n br a uc he n wi r ( ev t l ) au c h ke i n e n Rüc k g a be w e r t 93 Wi r e ri n n e rn u n s : R e f e r e n c e Se m a n t i c s § Re f e r e n c e S e m a n t i c s : E i n e V a r i a b l e en t h ä l t ei n e Re f e r e n z (« r e f e r e n c e » , Ve r w e i s ) a u f ei n en Ar r a y § We n n ei n e Re f e r e n z v a r i a b l e al s Op e r a n d i n ei n er Zu w e i s u n g er s c h ei n t dann wi r d de r A r r a y nic h t ko p i e r t so n d e r n be ide Va r i a b l e n be z ie he n si c h nun ( ve r w e i s e n nun) auf de n se lb e n Ar r a y . § Ve r ä n d e r u n g e n de r El e m e n t e ei n er Re f e r e n z v a r i a b l e be w i r k e n ei n e Än d e r u n g de r We r t e de r ande r e n Re f e r e n z v a r i a b l e . 94 Üb e r g a b e e i n e s A rr a y P a r a m e t e r s § Wi e e i n e Z u w e i s u n g int[] localA = new int[3]; int[] localB = localA; § // irgendwo: void method(int[] pA) { … } method(localA); § // beim Aufruf: int[] pA = localA; § Wi e g e h t d a s ? D a s S y s t e m k o p i e r t d i e I n f o r m a t i o n d i e b e s a g t , wo s i c h d e r A r r a y b e f i n d e t 95 Re f e r e n c e S e m a n t i c s § We n n wi r ei n en Ar r a y al s Pa r a m e t e r übe r g e be n ka n n di e au f g e r u f e n e Me t h o d e de n A r r a y ve r ä n d e r n und di e Ve r ä n d e r u n g e n si n d für de n Au fr u f e r si c h t b ar § Bei Va r i a b l e n ei n es Ba s i s t y p s ( int , double , boolean , … ) is t da s an d e r s 97 Fi l t e r , vo l l s t ä n d i g e Lö sung public static void filter (int [] numbers) { for ( int i = 0; i < numbers.length ; i ++) { if ( numbers[i ] < 0) { numbers[ i ] = 0; } } } 98 Fi l t e r public static void filter ( int [] numbers) { for ( int i = 0; i < numbers.length ; i ++) { if ( numbers[i ] < 0) { numbers[i ] = 0; } } } int[] data = {11, - 42, - 5, 27, 0, 89}; filter (data); // Nach Ende von filter: data ist Array mit Werten // [11, 0, 0, 27, 0, 89] 99 Ar r a y al s Pa r a m e t e r § We n n ei n Ar r a y al s Pa r a m e t e r übe r g e be n wi r d , da nn wi r d de r A r r a y ni c h t ko p i e r t . D e r P a r a m e t e r ve r w e i s t au f d e n se l b e n ( ur s pr üngl i c he n ) A r r a y . § We n n de r A r r a y mo d i f i z i e r t wi r d , dann wi r d auc h de r A r r a y , de n die auf r uf e nde Met h o d e si e h t , ve r ä n d e r t . 101 A r r a y P a r a m e t e r ve r w e n d e n Re f e re n c e S e m a n t i c s § Wi r sag e n da s s Ar r a y P a r a m e t e r « by re f e re n c e » übe r g e be n we r d e n . § Ve r ä n d e r u n g e n in ei n er Met h o d e we r d e n vo n d e r auf r uf e nde n Met h o d e ge s e h e n . 102 Re f e r e n c e S e m a n t i c s § Wi r d ei n e Ar r a y V a r i a b l e ( al s Ar g u m e n t ) übe r g e be n be z i e h t si c h de r Pa r a m e t e r i n d e r au f g e r u f e n e n Me t h o d e au f d e n se l b e n Ar r a y § Wi e ei n e Zu w e i s u n g vo n ei n er Re f e r e n z v a r i a b l e n an ei n e ande r e int[] z = { 1, 3, 5}; // print z aMethod (z); // print z 104104 void aMethod (int[] x) { x[x.length - 1] = 9; // print \"in ... \" // print x } Ou t p u t : {1,3,5} in ... {1,3,9} {1,3,9} z In d e x 0 1 2 We r t 1 3 5 x Ou t p u t : {1,3,5} in ... {1,3,9} Ar r a y s und O ut put § Au c h fü r Ar r a y s gi b t e s e i n e D e f a u l t D a r s t e l l u n g § int[] myArray = new int[5]; § System.out.println(myArray); 106 Ar r a y s und O ut put § Au c h fü r Ar r a y s gi b t e s e i n e D e f a u l t D a r s t e l l u n g § int[] myArray = new int[5]; § System.out.println(myArray); § Nu r l e i d e r h i l f t u n s d i e s e n i c h t w e i t e r 107 Ou t p u t I@2a139a55 Di e Kl a s s e Arrays § Di e Kl a sse Arrays in de r Bib lio t h e k java.util en t h ä l t ei n i g e Met h o d e n , d ie wi r in ei n er static Met h o d e auf r uf e n kö n n e n Me th od n a m e De sc r i p t i o n binarySearch ( ar r ay , va l u e ) re t u r n s t h e i n d e x o f t h e g i v e n v a l u e i n a so r t ed ar r a y (or < 0 i f n ot f ou n d ) copyOf ( ar r ay , le ng t h ) re t u r n s a n e w c o p y o f a n a r r a y equals( ar r ay 1 , ar r ay 2 ) re t u r n s true if t h e t w o a r r a y s c o n t a i n s a m e e l e m e n t s in t h e s a m e o r d e r fill( ar r ay , va l u e ) set s ev er y el em en t t o t h e gi v en v a l u e sort( ar r ay ) ar r an g e s t h e e l e m e n t s i n t o s or t e d or d e r toString ( ar r ay ) re t u r n s a s t r i n g re p re s e n t i n g t h e a r r a y , s u c h a s \"[42, - 7, 1, 15]\" 108 Di e Arrays Kl a s s e § Sy n t a x : Arrays. me t h o d N a me ( par am e t er s ) § me t h o d Na me : Se r v i c e d e n wi r br a uc he n § par am e t e r ( s ) : E i n od e r me h r Pa r a m e t e r § Bei s p i el import java.util.Arrays ; int [] a1 = {42, - 7, 1, 15}; int [] a2 = {42, - 7, 1, 15}; if ( Arrays.equals(a1, a2) ) { ... } 109 Be s o n d e r s pr a k t is c h : Arrays.toString § Di e Kl a sse Arrays in de r Bib lio t h e k java.util en t h ä l t ei n i g e Met h o d e n , d ie wi r in ei n er static Met h o d e auf r uf e n kö n n e n Me th od n a m e De sc r i p t i o n binarySearch ( ar r ay , va l u e ) re t u r n s t h e i n d e x o f t h e g i v e n v a l u e i n a so r t ed ar r a y (or < 0 i f n ot f ou n d ) copyOf ( ar r ay , le ng t h ) re t u r n s a n e w c o p y o f a n a r r a y equals( ar r ay 1 , ar r ay 2 ) re t u r n s true if t h e t w o a r r a y s c o n t a i n s a m e e l e m e n t s in t h e s a m e o r d e r fill( ar r ay , va l u e ) set s ev er y el em en t t o t h e gi v en v a l u e sort( ar r ay ) ar r an g e s t h e e l e m e n t s i n t o s or t e d or d e r toString ( ar r ay ) re t u r n s a s t r i n g re p re s e n t i n g t h e a r r a y , s u c h a s \"[42, - 7, 1, 15]\" 110 Arrays.toString § Arrays.toString ni m m t ei n en Ar r a y al s Pa r a m e t e r u n d lie f e r t ei n en String mi t de n A r r a y El e m e n t e n int [] e = {0, 2, 4, 6, 8}; e[1] = e[3] + e[4]; System.out.println(\"e is \" + Arrays.toString(e )); Ou t p u t : e is [0, 14, 4, 6, 8] § Ei n f a c h e r We g Str i n g mi t de n We r t e n de s A r r a y s zu er h a l t en 111","libVersion":"0.3.1","langs":""}