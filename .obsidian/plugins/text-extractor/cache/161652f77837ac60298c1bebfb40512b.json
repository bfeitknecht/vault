{"path":"sem4/FMFP/UE/e/FMFP-u09-e.pdf","text":"P. M¨uller, D. Basin and R. Jung Formal Methods and Functional Programming Exercise Sheet 9: States and Expressions Submission deadline: April 29th/30th, 2025 Assignment 1 (Simplifying State Updates) In this assignment, we will prove statements that allow us to “clean up” states as we apply additional state updates to them: If many state updates to the same variable have been applied, you can always leave out all but the last one (Tasks 1.1 and 1.3), and reordering state updates applied to different variables never change the state (Task 1.2). Task 1.1: Prove that, for all states σ, all variables x, and all values v1 and v2, we have σ[x ↦→ v1][x ↦→ v2] = σ[x ↦→ v2]. Task 1.2: Prove that, for all states σ, all variables x and y with x ̸≡ y, and all values v and w, we have σ[x ↦→ v][y ↦→ w] = σ[y ↦→ w][x ↦→ v]. Task 1.3: Prove that, for all states σ, all variables x, all values v1 and v2, all natural numbers n, and all sequences ⃗y ≡ ⟨y1, . . . , yn⟩ and ⃗w ≡ ⟨w1, . . . , wn⟩ of variables and values, respectively, we have σ[x ↦→ v1][⃗y ↦→ ⃗w][x ↦→ v2] = σ[⃗y ↦→ ⃗w][x ↦→ v2], where σ[⃗y ↦→ ⃗w] denotes the sequence of updates σ[y1 ↦→ w1] . . . [yn ↦→ wn]. Note: This task is a bit more involved. 1 Assignment 2 (Substitution Properties) In the exercise session, we proved a substitution lemma for arithmetic expressions: ∀σ, e, e ′, x · (A[[e[x ↦→ e′]]]σ = A[[e]](σ[x ↦→ A[[e ′]]σ]) ) Task: Prove the corresponding statement for boolean expressions, i.e, prove that ∀σ, b, e, x · ( B[[b[x ↦→ e]]]σ = B[[b]](σ[x ↦→ A[[e]]σ]) ) . 2","libVersion":"0.5.0","langs":""}