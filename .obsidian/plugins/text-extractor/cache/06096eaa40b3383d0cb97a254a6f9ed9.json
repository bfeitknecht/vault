{"path":"sem4/CN/UE/slides/CN-u06-routing.pdf","text":"Computer Networks - Exercise 6 Routing ETH Zürich Slides by Ferdinand Brunne and Joël Vögtlin Based on the work of Linus Baumberger, Nicolas Stucki and Janic Moser April 2025 - Routing - Intra-Domain Routing - Distance-Vector Routing - Link-State Routing - OSPF - IS-IS - Kahoot! - Exercise #6 2 Table of contents Routing - Correctness: Finds paths that work - Efﬁcient paths: Given path is minimal for some metric - Full connectivity: Doesn’t starve any nodes - Fast convergence: Recovers quickly after changes - Scalability: Works well as network grows large 4 Goals of Routing Algorithms - Link cost = combination of possible parameters - E.g. Latency, Bandwidth, Money, Hops - Best Path = Shortest Path (lowest total cost) - Pick randomly to break ties - ECMP (Equal-Cost Multi-Path Routing): keep all shortest paths - Optimality Property = Subpaths of shortest path are also shortest path - Source/sink trees: All shortest paths from/to a node - In ECMP: Directed Acyclic Graphs (DAG) instead of trees 5 Shortest Path Routing 6 Equal-Cost Multi-Path Routing - Forwarding Table Idea: Multiple paths from node to destination instead of just one Extension of shortest path model: Keep set if two paths are in a tie Source/sink trees now become Directed Acyclic Graphs (DAGs) How to forward: 1. Randomly select from the set + Balanced - Jitter - Reordering 2. Send packets from same ﬂow along same path - Not as balanced + Less jitter 7 Equal-Cost Multi-Path Routing Goal: Reduce routing table sizes Idea: Create a new larger unit to aggregate hosts → Regions How it works: 1. Route packets to the region 2. Route packets using IP preﬁx routing once inside the region For all hosts in a region, there is only one route to all hosts inside another region But inside a region, each router may choose a different route 8 Hierarchical Routing 9 Hierarchical Routing - Example Subnetting: Create smaller networks (more speciﬁc preﬁx) out of a larger one. Aggregation: Join multiple smaller networks into a large one. Note: Aggregation can still happen even if the entire preﬁx is not owned by the same entity because of “Longest Matching Preﬁx” routing 10 Subnets and Aggregation The Internet Structure - Network of networks, called Autonomous Systems (ASes) - ASes interconnect to form the global internet - Each AS independently administers their own network - Deﬁne topology and networking equipment - Decide which protocols to use 12 The Internet Structure - Intra-Domain Routing - Routing within an AS - Interior Gateway Protocols (IGPs) - Distance-Vector Routing - RIP - Link-State Routing - OSPF - IS-IS - Inter-Domain Routing - Routing between multiple ASes - Exterior Gateway Protocols (EGPs) - BGP 13 Types of routing Image source: vmware docs Distance-Vector Routing General Idea: Distributed version of Bellman-Ford Algorithm All nodes do: - At the beginning, only know the cost to their neighbours (not the whole graph) - Communicate only with their neighbours (via messages) - Maintain a vector of distances to all destinations (with next hops) Nodes/Links can fail, messages may be lost 15 Distance-Vector Routing - Initialize distance vector: - 0 cost to self - ∞ cost to all other destinations - Periodically send distance vector to neighbors - Every round, after receiving vectors of all neighbors - For each neighbor X: Add the cost from self to X to each entry of the vector received from X - Set all vector entries (except to self) to the minimum of all received values - Set the corresponding neighbor as next hop 16 Distance-Vector Routing - Behaviour for each node 17 Distance-Vector Routing - Dynamics Adding nodes - Fully converged after at most (#nodes-1) rounds Removing routes - When a node fails, no more exchanges, other nodes forget What happens if we have partitions in the network? (unreachable nodes) ➡ Problem: “Count to inﬁnity” problem Solution: Heuristics (Split Horizon, Poison reverse) Problem: Nodes trying to ﬁnd distance to a failed node, end up never converging 18 Count to inﬁnity problem Round A B C D 1 2 2 1 0 2 2 2 3 x 3 3 3 3 x 4 4 4 4 x Proposed Heuristics: - Split Horizon - Do not send routes to the neighbour you found them from - Poison reverse - Set inﬁnity for routes learned from neighbour sent back to that neighbour 19 Count to inﬁnity problem Round A B C D 1 2 2 1 0 2 2 2 ∞ x 3 3 3 ∞ x 4 ∞ ∞ 4 x Problem: Nodes trying to ﬁnd distance to a failed node, end up never converging Proposed Heuristics: - Split Horizon - Do not send routes to the neighbour you found them from - Poison reverse - Set inﬁnity for routes learned from neighbour sent back to that neighbour Example of a Distance-Vector Routing protocol - Uses hop count as metric - Runs on top of UDP - Implements the heuristics (Poison reverse, Split horizon) - Inﬁnity is 16 hops ➡ limits network size - Routers send vectors every 30 seconds - 180 seconds timeout for failures 20 Routing Information Protocol (RIP) Link-State Routing General Idea: All nodes learn the whole network topology and use it for routing How to spread network topology information? ➡ Flooding - Send incoming messages to all neighbours - Remember messages to not send twice (duplicate suppression) 22 Link-State Routing 1. Nodes learn full topology of the network - Done by ﬂooding the topology in the form of link state packets (LSP) - LSPs describe the topology portion of the node (i.e neighbouring links) 2. Each node computes its own forwarding table - I.e. by using Dijkstra (needs positive link costs) Changes in the network (node/link additions, failures and changes): - Flood LSP - Recompute forwarding tables 23 Link-State Routing 24 Distance-Vector vs Link-State Goal Distance-Vector Link-State Correctness Distributed Bellman-Ford Replicated Dijkstra Efﬁcient paths Approx. with shortest paths Approx. with shortest paths Fair paths Approx. with shortest paths Approx. with shortest paths Convergence Slow: many exchanges Fast: ﬂood and compute Scalability Excellent: storage/compute Moderate: storage/compute OSPF and IS-IS Intra-domain routing protocol - Split AS into different areas identiﬁed by 32-bit numbers (formatted like IP address) - Areas run link-state routing algorithms independently - Area border routers and AS border routers distribute additional information about their area or neighboring ASes respectively - Routers keep database for the areas they are connected to - An area’s topology is invisible from the outside - All areas are connected exclusively through a backbone area with ID (0.0.0.0) 26 OSPF 27 OSPF - Types of Routers - OSPF is loosely based on IS-IS - Very similar to OSPF: - Link-state routing - Dijkstra for best paths - Network separated into areas 28 IS-IS OSPF IS-IS Purpose IP trafﬁc Neutral towards layer 3 Encapsulation On top of IP Directly over layer 2 Area boundaries Routers Links Backbone area Yes No IPv6 support In OSPF v3 Implicit support Kahoot time!Exercise #6 Question 1: OSI Layers, IP, DHCP, ARP 31 1) A packet (i.e., a sequence of bytes sent over a network) is called differently depending on the OSI layer in which it occurs. Fill in the following table with the corresponding entries from the following list (note that some terms may be used in multiple layers and some terms may not be used at all): Layer Name of respective packet Application Message Transport (TCP) Segment Transport (UDP) Segment, Datagram Network Datagram, Packet Link Frame Physical This layer moves single bits (no notion of packets) Question 1: OSI Layers, IP, DHCP, ARP 32 2) Which of the following informations are contained inside of the IPv4 header: ● Sequence number ● NAT translation table ● TTL (time to live) ● The DNS A-record for the corresponding hostname ● checksum ● used Transport protocol (TCP, UDP,...) Question 1: OSI Layers, IP, DHCP, ARP 33 3) What does the acronym DHCP stand for and what is its purpose? ● Dynamic host congestion protocol - is used to handle congestion issues ● Dynamic host conﬁguration protocol - is used to set IP conﬁgurations ● Dynamic hamster cuddle protocol - is used to cuddle your favorite pet Question 1: OSI Layers, IP, DHCP, ARP 34 4) How does a machine connected to a LAN learn about its own MAC address? It knows it beforehand. Every machine is shipped with a unique MAC address that is registered by the manufacturer. Note that it might be possible to simulate any MAC address via software. 5) How does a machine connected to a LAN learn about the MAC addresses of other machines in the same LAN? ARP is used to translate IP addresses to MAC addresses. If a machine wants to send trafﬁc to another machine of which it knows the IP address but not the MAC address, it initiates an ARP request and waits for the reply containing the MAC address associated with this IP address. Question 2: Distance-Vector Routing 35 In the Figure below, after the network is already stabilized, the link connecting nodes C and D breaks. 1) Show how nodes A, B and C might experience the count-to-inﬁnity phenomenon for their distances to node D. Show at least two updates in the DV algorithm. For each of these updates, specify the distance-to-D that each node advertised to the neighbors. Question 2: Distance-Vector Routing 36 In the Figure below, after the network is already stabilized, the link connecting nodes C and D breaks. … Question 2: Distance-Vector Routing 37 In the Figure below, after the network is already stabilized, the link connecting nodes C and D breaks. 2) Will the problem be resolved after some iterations? Yes, the problem will eventually be resolved. Thanks to the link between B and D, all nodes will ﬁnd an alternative path to D and reach a stable state. Question 3: Link-State Routing 38 We are now trying to set up a routing system so that the routers forward packets efﬁciently. We decide to use a Link-State routing protocol. 1) What are the two basic steps in each LS routing algorithm? First Step Nodes ﬂood topology in the form of link state packets and each node learns full topology Second step Each node computes its own forwarding table by ﬁnding the shortest path to each other node. (e.g., using Dijkstra) Question 3.2: Link-State Routing 39 We are given a reduced model of the network In the topology, D has low latency but low bandwidth links to all other nodes, while there are high bandwidth high latency links between routers A, B, and C. Latency in ms Bandwidth in Mbps Draw the sink tree of the network for router A (A is the sink) only considering the latency metric. Question 3.2: Solution 40 We are given a reduced model of the network In the topology, D has low latency but low bandwidth links to all other nodes, while there are high bandwidth high latency links between routers A, B, and C. 1) Will this always minimize the experienced latency in practice and what could be an issue here? No. Why? As we can see in the sink tree, all trafﬁc to A is routed over (D,A) which only has bandwidth of 1 Mbps. With that we could experience congestion on this link -> poor transmission performance regarding latency. Question 3.3: Solution 41 Assume you implement LS-Routing considering only the latency metric . Question 3.4: New Idea 42 1) Propose a new routing metric to reduce the experienced latency in this case. One idea could be to combine latency and bandwidth. We can see that low latency values are good, but low bandwidth is the exact opposite. We now reverse bandwidth value and compute: cost = latency + 1/bandwidth. Question 3.4: New Idea 43 2) What will the resulting network model look like? 3) Draw again the sink tree for A Extra slides Send incoming message to all neighbours Duplicate suppression: Remember message to not send twice Remember source and Seq. NO For reliability, use stop-and-wait (ACKs and retransmission) 45 Flooding Adding a node - New node sends new LSP to all nodes - Neighbour nodes update their LSPs Node/Link changes - Flood updated LSPs and re-compute routes Node/Link Fail - Nodes notice a link has failed - They update their LSPs and the link is removed 46 Link-State Routing Dynamics","libVersion":"0.5.0","langs":""}