{"path":"sem4/CN/UE/s/CN-u05-s.pdf","text":"Exercise 5: Forwarding & Network Layer Question 1: Longest prefix matching (exam style question) Without prefix aggregation, a possible forwarding table looks like the one below. Using longest prefix matching, we can combine a few entries without changing the forwarding behavior. In order to reduce the table size, you are allowed to change, delete and add entries as you like. Be careful to preserve the exact forwarding behavior for any address. Original forwarding table: Prefix Outgoing Interface 128.128.0.0/9 eth0 128.160.0.0/11 eth1 128.176.0.0/12 eth0 128.192.0.0/10 eth0 default eth2 Solution: The first thing to notice is that the outgoing interface must be the same for all rows that are possibly merged. We thus only consider the three rows with eth0. The binary notation of all non-default rows looks as follows (prefix is underlined). Prefix Binary Notation Interface 128.128.0.0/9 10000000.10000000.x.x eth0 128.160.0.0/11 10000000.10100000.x.x eth1 128.176.0.0/12 10000000.10110000.x.x eth0 128.192.0.0/10 10000000.11000000.x.x eth0 In other words, whatever goes to 10000000.1x.x.x should be routed via eth0, with the one exception of 10000000.101x.x.x via eth1. Since the prefix length is 11 for eth1, and since the /10 rule is a subset of the /9 rule, we can remove the /10 rule. By changing one of the rules, we can obtain an even more compact solution: Prefix Outgoing Interface 128.128.0.0/9 eth0 128.160.0.0/12 eth1 default eth2 1 Question 2: Forwarding The following is a forwarding table at router R. Suppose packets with the following destination IP addresses arrive at router R. Determine the next hop. Give only one answer for each destination, using longest prefix matching. Destination Network Next Hop 139.179.200.0/23 R1 139.179.128.0/18 R2 139.179.112.0/20 R3 139.179.216.0/21 R4 139.179.0.0/16 R5 (a) 139.179.60.10 (b) 139.179.226.40 (c) 139.179.124.55 (d) 139.179.220.180 Solution: Let us write down the networks in binary notation (prefix underlined). Destination Network Binary Notation Next Hop 139.179.200.0/23 10001011.10110011.11001000.x R1 139.179.128.0/18 10001011.10110011.10000000.x R2 139.179.112.0/20 10001011.10110011.01110000.x R3 139.179.216.0/21 10001011.10110011.11011000.x R4 139.179.0.0/16 10001011.10110011.00000000.x R5 The address (From-To) ranges are thus as follows: Prefix Next Hop From To 10001011.10110011.11001000.x R1 139.179.200.0 139.179.201.255 10001011.10110011.10000000.x R2 139.179.128.0 139.179.191.255 10001011.10110011.01110000.x R3 139.179.112.0 139.179.127.255 10001011.10110011.11011000.x R4 139.179.216.0 139.179.223.255 10001011.10110011.00000000.x R5 139.179.0.0 139.179.255.255 Therefore, we get the following next hops: (a) R5 (b) R5 (c) R3 (d) R4 2 Question 3: Analyzing a network topology The following figure shows a network with 3 routers (shown as hexagons with an R), connected by an Ethernet switch (shown as a circle with an S). The routing table for the left-hand router is also shown. The first column “prefix” specifies all the prefixes for which the router has a specified forwarding behavior. The “next hop” column specifies the destination IP address and output interface to forward the datagram to. Note how some prefix ranges have no specified next hop IP address. This is because the router has a link-layer connection to the receivers in this address range and can thus directly send the packet to the actual destination address. Verify that the entries of the routing table make sense (any datagram with any used destination IP address is correctly forwarded by the left-hand router). Note that the prefix is chosen to cover the IP addresses of all connected interfaces (including the source interface). For example, both 1.2.3.46 and 1.2.3.45 are considered, which results in the prefix 1.2.3.44/30 (instead of 1.2.3.46/32). Network Topology Question 3.1 Write the routing table for the right-hand router, so that packets will be delivered appropriately. I.e. Every packet addressed to any IP-address shown in the figure 3 must be forwarded correctly by the right-hand router. Use no more than 5 route table entries and use the longest possible prefixes for all entries. Prefix Next Hop Output Next Hop IP Solution: Prefix Next Hop Output Next Hop IP 1.2.2.0/27 1 1.2.5.2 1.2.3.0/26 1 1.2.5.4 1.2.5.0/29 1 - 1.2.1.28/30 3 - 1.2.1.8/30 2 - First, we set up rules for all prefixes reachable over interface 1. The rules for subnets behind interfaces 2 and 3 can be set up analogously. • All devices directly connected to Ethernet switch: The longest prefix cover- ing the IPs of all devices directly connected to the Ethernet switch S is derivable by finding the longest common bit-string of all IPs: IP Binary Notation 1.2.5.1 00000001.00000010.00000101.00000001 1.2.5.2 00000001.00000010.00000101.00000010 1.2.5.3 00000001.00000010.00000101.00000011 1.2.5.4 00000001.00000010.00000101.00000100 1.2.5.0/29 00000001.00000010.00000101.00000xxx -> Rule: Prefix 1.2.5.0/29 is reachable over interface 1 (No next-hop IP needed as destination can be accessed over link layer alone) • Devices reachable via top router: External interface has IP 1.2.5.2. The longest (most specific) prefix covering the subnet behind the top router is: IP Binary Notation 1.2.2.9 00000001.00000010.00000010.00001001 4 IP Binary Notation 1.2.2.10 00000001.00000010.00000010.00001010 1.2.2.17 00000001.00000010.00000010.00010001 1.2.2.18 00000001.00000010.00000010.00010010 1.2.2.0/27 00000001.00000010.00000010.000xxxxx -> Rule: Prefix 1.2.2.0/27 is reachable over interface 1 with next-hop IP 1.2.5.2 • Devices reachable via left router: External interface has IP 1.2.5.4. The longest (most specific) prefix covering the subnet behind the left router is: IP Binary Notation 1.2.3.9 00000001.00000010.00000011.00001001 1.2.3.10 00000001.00000010.00000011.00001010 1.2.3.45 00000001.00000010.00000011.00101101 1.2.3.46 00000001.00000010.00000011.00101110 1.2.3.0/26 00000001.00000010.00000011.00xxxxxx -> Rule: Prefix 1.2.3.0/26 is reachable over interface 1 with next-hop IP 1.2.5.4 Question 3.2 Are all entries in the left-hand router’s table necessary? If not, show how to reduce the number of entries, without changing the routing behavior. Try to use the fewest number of entries and the longest possible prefixes for all entries. (Hint) Do not confuse prefix length with subnet size. The subnet specified by a longer prefix contains less addresses(“is smaller”) Solution: We can combine entry 1 and entry 4 IP Binary Notation 1.2.2.8/30 00000001.00000010.00000010.000010 00 1.2.2.16/30 00000001.00000010.00000010.000100 00 leads to 5 IP Binary Notation 1.2.2.0/27 00000001.00000010.00000010.000 xxxxx which doesn’t collide with any of the other address prefixes Prefix Next Hop Output Next Hop IP 1.2.2.0/27 2 1.2.5.2 1.2.1.0/27 2 1.2.5.1 1.2.5.0/29 2 - 1.2.3.44/30 1 - 1.2.3.8/30 3 - Question 4: Network Address Translation (NAT) Unlike the traditional client-server model, in peer-to-peer (P2P) applications, peers communicate with each other directly. In this question, we explore how network address translation (NAT) complicates P2P communication. When two peers both have public IP addresses, P2P communication works without a hitch, as both peers are directly reachable. But in reality, most Internet users are behind a NAT device, and these devices can disrupt P2P communication. Despite NAT devices, we can enjoy P2P applications, such as BitTorrent, Skype, etc. We will explore here how peers behind NAT devices can still connect to each other for P2P applications. For the following questions, assume that all communication is taking place over UDP. Also, assume that the NAT devices behave identically for UDP and TCP, i.e, they perform the same address and port translation: Question 4.1 Revisiting the traditional client-server model, the Figure below illustrates a typical communication model that we see in the Internet, where a client is behind a NAT and a server has a public IP address. 1. How can the client access the server (get the destination address)? 2. How can the server respond back to the client (To which address does the server reply to)? 3. What information is stored by the NAT for a correct translation? 1. client IP address 2. server IP address 3. client port 4. server port 6 Client/Server Model Solution: 1. The client can simply contact the server through its public IP address. The NAT will then translate the source address in the client’s packet (192.168.0.100) to the NAT’s public address (77.56.10.10). The NAT will also choose a new port number from a pool of available ports and keep a mapping between the selected port number and the internal host information. 2. The server can then reply to the client as if it was communicating with the NAT, which will then perform the address/port translation in the other direction and forward the packet to the client. 3. The NAT device has to store the address & port from the client in any case. Depending on the NAT configuration, also the IP address (and port number) of the server has to be stored. For more information about different NAT mapping and filtering behaviors, you can take a look at Section 5 in RFC3489 and Sections 4.1 and 5 in RFC4787. Question 4.2 Now let’s shift our discussion to P2P communication. As shown in the Figure below, both Peer A and B are behind NAT devices. Assume that the NAT’s translation tables are empty. Assume that peers know each other’s external IP addresses a priori. • Can the peers communicate with each other? Explain and provide a brief justification. P2P Model Solution: 7 No, the peers cannot communicate with each other in this scenario, since NAT boxes do not forward incoming traffic unless they have a corresponding entry in their translation table (which we assume to be empty initially). Question 4.3 Most P2P systems (including Skype) have special servers called rendezvous servers to assist Peer A to talk with Peer B as shown in the Figure below. Let’s consider a Skype call between the two peers, where Peer A (whose Skype ID is “OS”) calls Peer B (whose Skype ID is “NET”). How can this call be made? Please explain the steps that are necessary for Peer A, Peer B and the rendezvous server to make this call work. Furthermore, please explain the information that may be necessary at the two NATs and the rendezvous server. Assume that the rendezvous server listens for UDP packets over port 10,000. Hint: You may want to define application layer messages between the peers and the rendezvous server. P2P Model with Rendezvous Server Solution: The “UDP hole punching” technique is described in detail by Ford et al. in the paper “Peer-to-Peer Communication Across Network Address Translators”. In essence the rendezvous server exchanges the necessary connection details between the two peers. Question 5: IPv6 Question 5.1: Addresses Which one of these is a valid IPv6 address? • If the address is invalid, give the rule that the address breaks. • If the address is valid, give either it’s shortened or lengthened version. 1. 20f:306g:0:a8ef:28b1::05de 2. 2001:0db8:85a3:0000:0000:8a2e:0370:7334 3. :: 8 4. fe80::1ff::890a Solution 1. Invalid, g is not a hex character 2. Valid, 2001:db8:85a3::8a2e:370:7334 3. Valid, 0000:0000:0000:0000:0000:0000:0000:0000 4. Invalid, two omitted blocks of 0000 are not allowed Question 5.2: NAT with IPv6 1. Why is NAT no longer necessary with IPv6? 2. Give a reason why it might still be deployed. Solution 1. There is a sufficiently large address space, so we no longer need NAT to cover local networks. 2. For privacy and security reasons it can still be beneficial to hide your network behind a NAT device and/or Firewall. 9","libVersion":"0.5.0","langs":""}