{"path":"sem4/DMDB/UE/slides/DMDB-s09-transactions.pdf","text":"Anıl Eren Göçer & Soufiane Barrada Data Modeling & Databases agoecer@student.ethz.ch sbarrada@student.ethz.ch Exercise 9 Transactions & ACID Spring 25 Goals of Transactions • Define DB behaviour on concurrent DB access & system failure ->ACID ACID ▪ Atomicity Transaction is executed entirely or not at all. ▪ Isolation State of DB after execution of transactions needs to be equivalent to one of the serial executions. ▪ Consistency All integrity constraints hold before and after the transactions. ▪ Durability The state of the DB after transaction finished is not lost. Data Modeling & Databases Exercise 9 Relaxing Isolation Levels Relaxing Isolation LevelsRelaxing Isolation Levels Read Committed: Transaction cannot read any written values of another uncommited transaction (no dirty reads) Repeatable Read: Item that is read multiple times cannot change its value Serializability: Execution is equivalent to a serial execution order Data Modeling & Databases Exercise 9 Conflict Serializability Conflict Serializability ▪ Conflict Serializable If the schedule can be turned into serial schedule by performing swaps on non-conflicting operations. Conflict operations are (assuming same object): • Read-Write: leads to unrepeatable reads • Write-Read: leads to dirty reads • Write-Write: overwriting uncommitted data • operations in the same transaction are conflict… Deciding Conflict Serializability Dependency Graph: • Nodes are Transactions • Directed edge (T , T‘), if there exists a conflicting operations between T, T‘ and the operation in T comes before the operation in T‘ Conflict Serializable iff. Dependency Graph is acyclic (DAG) Topological order will then decide equivalent serial schedule Deciding Conflict SerializabilityDeciding Conflict Serializability Data Modeling & Databases Exercise 9 Quiz 9 Quiz 9.1 Conflict Serializability Are the following Interleavings Conflict Serializable? If yes, give the Serial Order • T2, T1 • T1, T2 • T1, T2 • Not CS • Not CS Quiz 9.1.1Quiz 9.1.2Quiz 9.1.3Quiz 9.1.4Quiz 9.1.5Quiz 9.1.6Quiz 9.1.7Quiz 9.1.8Quiz 9.1.9Quiz 9.1.10Quiz 9.1.11Quiz 9.1.12Quiz 9.1.13Quiz 9.1.14Quiz 9.1.15 Quiz 9.2 Which of the following statements are true? a. A history with only read operations is always serializable. b. When determining the serializability of a history, only the fact whether transactions write or not is important, no matter which objects the different transactions write. c. Transactions do not need to be isolated in databases where a majority of applications are read-only and a minority of applications perform updates. d. If transactions are not isolated from one another, lost updates might occur for mixed read-write applications. Quiz 9.2 Which of the following statements are true? a) A history with only read operations is always serializable. Conflicting Operations on the Same Data Object – Write - Write – Write - Read Quiz 9.2 Which of the following statements are true? b) When determining the serializability of a history, only the fact whether transactions write or not is important, no matter which objects the different transactions write. W1(A), W2(A): Conflict W1(A), W2(B): No conflict Quiz 9.2 Which of the following statements are true? c) Transactions do not need to be isolated in databases where a majority of applications are read-only and a minority of applications perform updates. R1(A),R2(A),...R100(A),...W(A),...,R999(A),R1000(A) Quiz 9.2 Which of the following statements are true? d) If transactions are not isolated from one another, lost updates might occur for mixed read-write applications. Phantom Read Problem Quiz 9.3 Why do systems check integrity constraints only at the end of a transaction? Initial Balance: 100$, CHECK Balance >= 0 BEGIN TRANSACTION BALANCE -= 200 BALANCE += 400 COMMIT Quiz 9.3 Why do systems check integrity constraints only at the end of a transaction? Integrity constraint properties only have to hold in the end, and are allowed to be broken inside transactions. Initial Balance: 100$, CHECK Balance >= 0 BEGIN TRANSACTION BALANCE -= 200 BALANCE += 400 COMMIT COMMITS SUCCESSFULLY Quiz 9.4 The following is a true story. An ETH professor flew to San Francisco. At the airport, there are electronic barriers equipped with bar-code readers. At the gate, the passengers insert their boarding pass into the bar-code reader, the barrier opens, the passenger can pass and the barrier closes. Unfortunately, just when the professor inserted his boarding pass, the electronic barrier broke down. Hence, he tried again at a different barrier, only to find out that he was rejected because the same boarding pass had allegedly already been used. Nonetheless, the staff let the professor enter the airplane. Later on, when the professor was already seated in the airplane, it was announced that the take-off was delayed: Some passenger's luggage had to be removed from the airplane, because he or she apparently had not boarded the airplane. It was only in San Fransisco that the professor realized that it was actually his luggage that was removed from the airplane. Quiz 9.4 This only happened because an important principle of transaction management was violated. Which one is it? a. Atomicity b. Consistency c. Isolation d. Durability Quiz 9.4 This only happened because an important principle of transaction management was violated. Which one is it? a. Atomicity b. Consistency c. Isolation d. Durability BEGIN TRANSACTION SCAN THE BARCODE ❌ PASS THE BARRIER ✅ COMMIT Partial updates should not be allowed! Quiz 9.5 1. R3(A) W1(A) R3(B) W2(B) R1(C) W2(C) C1 C2 C3 Quiz 9.5 1. R3(A) W1(A) R3(B) W2(B) R1(C) W2(C) C1 C2 C3 T3 → T1 → T2 Quiz 9.5 2. R1(A) W2(A) R1(B) W3(B) R2(C) W3(C) C1 C2 C3 Quiz 9.5 2. R1(A) W2(A) R1(B) W3(B) R2(C) W3(C) C1 C2 C3 T1 → T2 → T3 Quiz 9.5 3. W4(D) R1(A) R3(B) W2(A) W1(C) R3(A) W3(B) R4(B) C1C2C3C4 Quiz 9.5 3. W4(D) R1(A) R3(B) W2(A) W1(C) R3(A) W3(B) R4(B) C1C2C3C4 T1 → T2 → T3 → T4 Quiz 9.5 4. W4(D) R1(A) W2(A) R2(B) W3(B) R3(C) W1(C) C1 C2 C3 C4 Not conflict ‑serialisable (cycle) T1 T2 T3T4 Quiz 9.6 Abbrev Full name Observation pattern in a schedule DR Dirty read Tx 2 reads data written by still‑uncommitted Tx 1 LU Lost update Two txns read the same item, then both write it – the first write is overwritten NRR Non‑repeatable read Tx 1 reads A, another committed write changes A, Tx 1 reads A again and sees a new value PH Phantom read Tx 1 reads a set satisfying a predicate, another txn inserts/deletes a matching row and commits, Tx 1 re‑evaluates the predicate and sees a different set Quiz 9.6.1 1 W1(A) 2 R2(A) 3 W2(A) 4 W1(B) 5 C1 6 C2 Quiz 9.6.1 1 W1(A) 2 R2(A) 3 W2(A) 4 W1(B) 5 C1 6 C2 Dirty Read Quiz 9.6.2 1 W3(X) 2 R2(X) 3 W2(A) 4 R1(X) 5 C2 6 W1(X) 7 C1 C3 Quiz 9.6.2 1 W3(X) 2 R2(X) 3 W2(A) 4 R1(X) 5 C2 6 W1(X) 7 C1 C3 Dirty Read Lost Update Quiz 9.6.3 1 R1(B) 2 R1(A) 3 W2(A) 4 C2 5 R1(B) 6 R1(A) 7 C1 Quiz 9.6.3 1 R1(B) 2 R1(A) 3 W2(A) 4 C2 5 R1(B) 6 R1(A) 7 C1 Non repeatable read Quiz 9.7 ● Basketball Ticket Reservation System ● Keeping track of counters in a database Quiz 9.7 ● Read Uncommitted ● 1- Client A fetches the remaining tickets for a match ● 2- Client A sees the #remaining tickets is 1 for that match ● 3- Client A updates the #remaining tickets decreasing by 1 ● 4- Client B fetches the remaining tickets for the same match ● 5- Client B sees there is no remaining tickets for that match ● 6- Client A changes his/her mind and decides not buying the ticket which results in abortion of the transaction. ● 7- Client B cannot purchase the ticket although there is a ticket available. Dirty Read problem → solved using Read Committed Quiz 9.7 Read Committed 1- Client A fetches the remaining tickets for a match 2- Client A sees the #remaining tickets is 1 for that match 3- Client B fetches the remaining tickets for a match 4- Client A sees the #remaining tickets is 1 for that match 5- Client A purchases the ticket which makes the #remaining tickets is 0 for that match 6- Client B tries to buy it (first read, then update) but it sees there is no ticket available Non-repeatable Read problem → solved using Repeatable Read Quiz 9.7 ● Serializable ● Solves the previous problems, but no phantom reads occur ● Repeatable Read ● Solves the previous problems, but less restricted than serializable ● Choosing the lowest (least restrictive) isolation level is important because of performance requirements. Quiz 9.8Quiz 9.8Quiz 9.8 x 20 x 130 Commits Successfully Quiz 9.9Quiz 9.9 x 180 x -30 Check constraint violated Transaction aborted Quiz 9.10 Atomicity: All or Nothing Thank you.","libVersion":"0.5.0","langs":""}