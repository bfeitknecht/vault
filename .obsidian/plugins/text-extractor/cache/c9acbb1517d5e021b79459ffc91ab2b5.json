{"path":"var/attachments/dynamic programming-8AB62AE22FD8EC2A37BCC437ACEDDE07.png","text":"Bounds O E N A Z CS o Usually can evaluate each individually o Base cases and starting args as endpoints S AT ELE e Should | use a map/dict? o Extremely efficient: Great cache locality! o Extremely versatile: negatives and more! o Requires non-negative integer bounds o @functools.cache uses this m Consider adding if-checks o Great for sparse bounds (memoization) m= Consider 1-indexing o Great for complex arguments (strings) o Great for compact bounds (tabulation) o Much slower than arrays o Fastest option and can be allocated and initialized at compile time in C++ via constinit","libVersion":"0.3.2","langs":"deu+eng"}