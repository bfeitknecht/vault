{"path":"sem3/TI/UE/s/TI-s-u05.pdf","text":"Departement Informatik Theoretische Informatik Prof. Dr. Dennis Komm Prof. Dr. Juraj Hromkoviˇc Dr. Hans-Joachim B¨ockenhauer Exemplary Solutions – Sheet 5 Z¨urich, October 25, 2024 Solution to Task 13 (a) We use the Kolmogorov complexity argument to show that the language L1 = {ww | w ∈ {0, 1} ∗} is not regular. Assume that L = L1 is regular. For every m ∈ N, 0 m1 is the first word in the language L0m1 = {y | 0 m1y ∈ L}. According to Theorem 3.19 from the textbook, there exists a constant c, independent of m, such that K(0 m1) ≤ ⌈log2(1 + 1)⌉ + c = 1 + c . As there are only finitely many programs of a constant length at most 1 + c, but infinitely many words of the form 0 m1, we derive a contradiction. Hence, the assumption is false and L1 is not regular. (b) Let L2 = {0 p | p ∈ N is a prime number}. We first show that L2 is not regular using the pumping lemma. Proof using the pumping lemma. Suppose that L2 is regular. Then the pumping lemma (Lemma 3.14) yields a constant n0 ∈ N such that every word w ∈ {0} ∗ with |w| ≥ n0 can be split into three parts y, x, and z so that (i) |yx| ≤ n0, (ii) |x| ≥ 1, and (iii) either {yx kz | k ∈ N} ⊆ L2 or {yx kz | k ∈ N} ∩ L2 = ∅. We choose the word w = 0 p for a prime number p ≥ n0. It clearly holds that |w| ≥ n0. Hence, there exists a decomposition w = yxz of w satisfying the conditions (i), (ii), and (iii). Because of (ii), |x| =: m > 0 holds. Because w ∈ L2, (iii) implies that {yx kz | k ∈ N} = {0 p+(k−1)·m | k ∈ N} ⊆ L2 . Now we choose k = p + 1. Then yx kz = 0p+(k−1)m = 0p+pm = 0p·(m+1). Hence, we derive a contradiction because p · (m + 1) is no prime number (recall that m > 0). Hence, the assumption is wrong and the language L2 is not regular. A consequence of the prime number theorem. We can also show that L2 is not regular using the Kolmogorov complexity argument or Lemma 3.12. To this end, we need the prime number theorem (Theorem 2.67 in the textbook) that we have not proved in the lecture. The prime number theorem implies that the difference between two consecutive prime numbers can be arbitrarily large: if the difference was upper bounded by some k ∈ N, then there were at least n/k prime numbers among the first n natural numbers. This would contradict the prime number theorem saying that there are approximately n/ ln n such prime numbers. Now we use this observation in the Kolmogorov complexity argument showing that L2 is not regular. Proof using the Kolmogorov complexity argument. Suppose that L = L2 is regu- lar. Let pm be the m-th prime number. Then 0 pm+1−pm−1 is the first word in the language L0(pm)+1 = {y | 0 (pm)+1y ∈ L}. Theorem 3.19 yields a constant c, independent of m, so that K(0 pm+1−pm−1) ≤ ⌈log2(1 + 1)⌉ + c = 1 + c. Since there are only finitely many programs of constant length at most 1 + c, but the above consequence of the prime number theorems implies that there are infinitely many words of the form 0 pm+1−pm−1, we derive a contradiction. Hence, the assumption is wrong and the language L2 is not regular. We can also use the above consequence of the prime number theorem to show that L2 is not regular, using Lemma 3.12. Proof using Lemma 3.12. Suppose that L2 is regular. Then there exists an automa- ton A2 = (Q, {0}, δ, q0, F ) with L(A2) = L2. Let m = |Q|. We choose m + 1 distinct prime numbers pl0, . . . , plm such that the differences plj +1 − plj between consecutive prime numbers are pairwise distinct and – without loss of genera- lity – monotonically increasing. Such prime numbers exist due to the above consequence of the prime number theorem. Then we consider the words 0 pl0 , 0 pl1 , . . . , 0 plm . Since these are m + 1 words, i.e., more words than the number of A2’s states, there exist i, j ∈ {0, . . . , m} with i < j such that ˆδA2(q0, 0 pli ) = ˆδA2(q0, 0 plj ). By Lemma 3.12, for all z ∈ {0}∗, we have 0 pli z ∈ L2 ⇐⇒ 0 plj z ∈ L2. However, choosing z = 0 pli+1−pli leads to a contradiction because 0 pli z = 0 pli+1 ∈ L2 and 0 plj z = 0 plj +(pli+1−pli ) /∈ L2 by the assumption on the chosen prime numbers. Hence, the assumption is wrong and the language L2 is not regular. 2 Solution to Task 14 (a) The following nondeterministic finite automaton M1 accepts the language L1 := {w ∈ {0, 1} ∗ | w = x0y0z such that x, z ∈ {0, 1}∗ and y ∈ {0, 1} 2} . q0 q1 q2 q3 q4 0, 1 0 0, 1 0, 1 0 0, 1 This NFA nondeterministically decides at which position in the input the desired pattern starts, and changes from state q0 into state q1 at this point. If this nondeter- ministic decision was correct, the automaton now is able to read the pattern and to end in the accepting state q4. If the input does not contain the desired pattern, there is no possibility for the NFA to accept the input. (b) To prove that every deterministic finite automaton A accepting the language L2 = {w ∈ {a, b}∗ | |w|b ≡ 1 (mod 3) and w starts with ab} needs at least 6 states, we determine 6 words w1, . . . , w6 and show that these words have to lead the automaton into 6 pairwise distinct states. If there exists an FA ending in the same state after reading two different words wi and wj, then, according to Lemma 3.12 from the book, for each z ∈ {a, b}∗, we know that also wiz and wjz lead the automaton to the same state. We want to prove that this is not possible for an automaton with less than 6 states, by exhibiting a word zi,j, for any two different words wi and wj, such that wizi,j ∈ L(A) ⇐⇒ wjzi,j /∈ L(A) . (1) One possible strategy to find suitable words w1, . . . , w6 is to first determine an FA A with 6 states for the language L2 and then to choose, for each state q, the shortest word from the class Kl[q]. The following automaton A with 6 states accepts the language L2. q0 q1 q2 q3 q4 qS a b a b a b a b a b a, b 3 The shortest words in the classes associated with the states of A are w1 = λ, w2 = a, w3 = b, w4 = ab, w5 = abb, and w6 = abbb. The following table contains, for all pairs (wi, wj) with i < j, a word zi,j. zi,j w2 = a w3 = b w4 = ab w5 = abb w6 = abbb w1 = λ ab ab ab ab b w2 = a − b λ bb ab w3 = b − − λ bb b w4 = ab − − − λ λ w5 = abb − − − − b It is easy to see that these words satisfy the condition (1); for example, we have w2z2,6 = aab /∈ L(A), but w6z2,6 = abbbab ∈ L(A). 4","libVersion":"0.5.0","langs":""}