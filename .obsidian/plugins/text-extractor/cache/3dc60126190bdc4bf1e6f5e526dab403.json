{"path":"sem4/FMFP/UE/e/FMFP-u11-e.pdf","text":"P. M¨uller, D. Basin and R. Jung Formal Methods and Functional Programming Exercise Sheet 11: Small-Step Semantics Submission deadline: May 13th/14th, 2025 Assignment 1 (Applying Small-Step Semantics) Consider the following IMP statement s: while n # 0 do a := a+n; (b := b*n; n := n-1) end Task. Let σ be a state such that σ(a) = 0, σ(b) = 1, and σ(n) = 2. Prove using the structural operational semantics that there is a state σ′ with σ′(a) = 3, σ′(b) = 2, and σ′(n) = 0 such that ⟨s, σ⟩ → ∗ 1 σ′. Provide the complete derivation sequence, and show the derivation trees of the first three single- step transitions. Assignment 2 (Equivalence Lemmas) In this exercise, we prove the two lemmas from the lecture that formalize the equivalence of small-step and big-step semantics. Hint: You might want to consider using results from the lecture. Task 2.1 Prove the first equivalence lemma (cf. slide 138): ∀σ, σ′, s· ⊢ ⟨s, σ⟩ → σ′ =⇒ ⟨s, σ⟩ → ∗ 1 σ′ 1 Task 2.2 Prove the second equivalence lemma (cf. slide 139): ∀σ, σ′, s, k · ⟨s, σ⟩ → k 1 σ′ =⇒ ⊢ ⟨s, σ⟩ → σ′ 2","libVersion":"0.5.0","langs":""}