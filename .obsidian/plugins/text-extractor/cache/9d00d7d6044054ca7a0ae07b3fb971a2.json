{"path":"sem2/DDCA/VRL/slides/DDCA-L13-memory.pdf","text":"C a r ne gi e M e l l on 1 D i g i t a l D e s i g n a nd C o m put e r A r c hi t e c t ur e M o ha m m a d S a dr o s a da t i F r a nk K . G ür k a y na k A d a p t e d f r o m D i g i t a l D e s i g n a n d C o m p u t e r A r c h i t e c t u r e , D a v i d M o n e y H a r r i s & S a r a h L . H a r r i s © 2 0 0 7 E l s e v i e r http:// safari.ethz.ch / ddca Me m o r i e s C a r ne gi e M e l l on 2 Wh a t w ill w e lea r n tod a y ? ¢ O n e m o r e c o m m o n s e q u e n t i a l b u i l d i n g b l o c k § C o unt e r s ¢ Ho w c a n w e s t o re da t a ? ¢ A r r a y o r ga n i z a t i o n o f m e m o r i e s C a r ne gi e M e l l on 3 Co u n t e rs ¢ I n c r e m e n t s o n e a c h c l o c k e d ge . § U s e d t o c y c l e t hr o ug h num be r s . F o r e x a m pl e , § 000, 001, 010, 011, 100, 101, 110, 111, 000, 001… ¢ Ex a m p l e u se s: § D i g i t a l c l o c k di s pl a y s § P r o g r a m c o unt e r : k e e ps t r a c k o f c ur r e nt i ns t r uc t i o n e x e c ut i ng Q CLK Reset N+ N 1 CLK Reset N N Q N r Symbol Implementation C a r ne gi e M e l l on 6 Mo t i v a t i o n: Me m o r y E l e m e nt s ¢ M e m o r i e s a r e l a r ge b l o c k s § A s i g ni f i c a nt po r t i o n o f a m o de r n c i r c ui t i s m e m o r y . ¢ M e m o r i e s a r e p r a c t i c a l t o o l s f o r s ys t e m d e s i gn § P r o g r a m m a bi l i t y , r e c o nf i g ur a bi l i t y a l l r e qui r e m e m o r y ¢ A l l o w s yo u t o s t o r e d a t a a n d w o r k o n s t o r e d d a t a § N o t a l l a l g o r i t hm s a r e de s i g ne d t o pr o c e s s da t a a s i t c o m e s , s o m e r e qui r e da t a t o be s t o r e d. § D a t a t y pe de t e r m i ne s r e qui r e d s t o r a g e § S M S : 1 6 0 by t e s § 1 s e c o nd no r m a l a udi o : 6 4 k by t e s § 1 H D pi c t ur e : 7 . 3 2 M by t e s C a r ne gi e M e l l on 7 D i e p h o t o g r a p h o f a n I n t e l p r o c e s s o r i n 4 5 n m C a r ne gi e M e l l on 8 La r g er Mem or y B loc k s C a r ne gi e M e l l on 9 Ho w c a n w e s t o r e da t a ¢ Fl i p - Fl o ps ( o r La t c he s ) § V e r y f a s t , pa r a l l e l a c c e s s § E x pe ns i v e ( o ne bi t c o s t s 2 0 + t r a ns i s t o r s ) C a r ne gi e M e l l on 10 Ho w c a n w e s t o r e da t a ¢ Fl i p - Fl o ps ( o r La t c he s ) § V e r y f a s t , pa r a l l e l a c c e s s § E x pe ns i v e ( o ne bi t c o s t s 2 0 + t r a ns i s t o r s ) ¢ St at i c R A M ( w e w i l l d e s c r i b e t h e m i n a m o m e n t ) § Re l a t i v e l y f a s t , o nl y o ne da t a w o r d a t a t i m e § L e s s e x pe ns i v e ( o ne bi t c o s t s 6 t r a ns i s t o r s ) C a r ne gi e M e l l on 11 Ho w c a n w e s t o r e da t a ¢ Fl i p - Fl o ps ( o r La t c he s ) § V e r y f a s t , pa r a l l e l a c c e s s § E x pe ns i v e ( o ne bi t c o s t s 2 0 + t r a ns i s t o r s ) ¢ St at i c R A M ( w e w i l l d e s c r i b e t h e m i n a m o m e n t ) § Re l a t i v e l y f a s t , o nl y o ne da t a w o r d a t a t i m e § L e s s e x pe ns i v e ( o ne bi t c o s t s 6 t r a ns i s t o r s ) ¢ D yn a m i c R A M ( w e w i l l d e s c r i b e t h e m a b i t l a t e r ) § Sl o w e r , r e a di ng de s t r o y s c o nt e nt ( r e f r e s h) , o ne da t a w o r d a t a t i m e , ne e ds s pe c i a l pr o c e s s § C he a pe r ( o ne bi t i s o nl y a t r a ns i s t o r ) C a r ne gi e M e l l on 12 Ho w c a n w e s t o r e da t a ¢ Fl i p - Fl o ps ( o r La t c he s ) § V e r y f a s t , pa r a l l e l a c c e s s § E x pe ns i v e ( o ne bi t c o s t s 2 0 + t r a ns i s t o r s ) ¢ St at i c R A M ( w e w i l l d e s c r i b e t h e m i n a m o m e n t ) § Re l a t i v e l y f a s t , o nl y o ne da t a w o r d a t a t i m e § L e s s e x pe ns i v e ( o ne bi t c o s t s 6 t r a ns i s t o r s ) ¢ D yn a m i c R A M ( w e w i l l d e s c r i b e t h e m a b i t l a t e r ) § Sl o w e r , r e a di ng de s t r o y s c o nt e nt ( r e f r e s h) , o ne da t a w o r d a t a t i m e , ne e ds s pe c i a l pr o c e s s § C he a pe r ( o ne bi t i s o nl y a t r a ns i s t o r ) ¢ O t h e r s t o r a ge t e c h n o l o gy ( h a r d d i s k , f l a s h ) § M uc h s l o w e r , a c c e s s t a k e s a l o ng t i m e , no n - vol a t i l e § P e r bi t c o s t i s l o w e r ( no t r a ns i s t o r s di r e c t l y i nv o l v e d) C a r ne gi e M e l l on 13 A r r a y O r g a n i z a t i o n o f M e m o r i e s ¢ E f f i c i e n t l y s t o r e l a r ge a m o u n t s o f d a t a § C o ns i s t s o f a m e m o r y a r r a y ( s t o r e s da t a ) § A ddr e s s s e l e c t i o n l o g i c ( s e l e c t s o ne r o w o f t he a r r a y ) § R e a do ut c i r c ui t r y ( r e a ds da t a o ut ) ¢ An M - bi t v a l ue c a n be re a d o r wri t t e n a t e a c h uni que N - bi t a ddre s s § A l l v a l ue s c a n be a c c e s s e d, but o nl y M - bi t s a t a t i m e § A c c e s s r e s t r i c t i o n a l l o w s m o r e c o m pa c t o r g a ni z a t i o n Address Data Array N M C a r ne gi e M e l l on 14 Me m o r y A r r a y s ¢ Two - d i m e n s i o n a l a r r a y o f b i t c e l l s § E a c h bi t c e l l s t o r e s o ne bi t ¢ A n a r r a y w i t h N a d d r e s s b i t s a n d M d a t a b i t s : § 2 N r o w s a nd M c o l um ns § D e pt h: num be r o f r o w s ( num be r o f w o r ds ) § W i dt h: num be r o f c o l um ns ( s i z e o f w o r d) § A r r a y s i z e : de pt h × w i dt h = 2 N × M Address Data Array N M Address Data 11 10 01 00 depth 010 100 110 011 width Address Data Array 2 3 C a r ne gi e M e l l on 15 Me m o r y A r r a y : E x a m pl e ¢ 2 2 × 3 - bi t a rra y ¢ N u m b e r o f w o r d s : 4 ¢ W o r d s i z e : 3 - bi t s ¢ Fo r e xa mpl e , t he 3 - bi t wo rd s t o re d a t a ddre s s 1 0 i s 1 0 0 AddressData 11 10 01 00 depth 010 100 110 011 width Address Data Array 2 3 C a r ne gi e M e l l on 16 Me m o r y A r r a y s Address Data 1024-word x32-bitArray 10 32 C a r ne gi e M e l l on 17 T y p e s o f M e m o r i e s ¢ Vo l a t i l e m e m o r i e s ( l o s e s d a t a w h e n p o w e r i s o f f ) § S t a t i c R a ndo m A c c e s s M e m o r y ( S R A M ) § D y na m i c R a ndo m A c c e s s M e m o r y ( D R A M ) ¢ No n - vo l at i l e m e m o r i e s ( k e e p s d at a e ve n w i t h o u t p o w e r ) § R e a d O nl y M e m o r y ( R O M ) § V a r i o us f o r m s o f f l a s h m e m o r y ( i . e . E E P R O M ) C a r ne gi e M e l l on 18 St at i c Ran d o m A c c e s s M e mo ry ¢ Vo l a t i l e : S t o r e s d a t a b y c r o s s c o u p l e d i n v e r t e r s , o n c e d a t a i s sto r ed th e i n v er ter s k eep th e v a l u e ( th er efo r e sta ti c ) ¢ H i s t o r i c a l l y c a l l e d R a n d o m A c c e s s M e m o r y, b e c a u s e d a t a c a n b e a c c e s s e d i n a n y o r d e r ( u n l i k e m a gn e t i c t a p e s w h i c h a l l o w e d o n l y s e r i a l a c c e s s ) C a r ne gi e M e l l on 19 Dy n a m i c R a n d o m Acce s s M e m o r y ¢ V o l a t i l e : S t o r e s d a t a b y c h a r gi n g a ( s m a l l ) c a p a c i t o r ¢ P r o b l e m i s t h a t t h e c h a r ge o n t h e c a p a c i t o r w i l l s l o w l y d i s c h a r ge ( m e m o r y w i l l f o r ge t t h e v a l u e ) w i t h t i m e . ¢ I t i s c a l l e d D yn a m i c , b e c a u s e w e h a v e t o r e f r e s h t h e c o n t e n t s b e f o r e m e m o r y f o r ge t s w h a t i t s t o r e d . ¢ T h e l a r ge r t h e c a p a c i t o r , t h e l o n ge r i t t a k e s t o f o r ge t § T hi s c o s t s a r e a , i ng e ni o us m e t ho ds a r e us e d t o i nc r e a s e c a pa c i t a nc e wordline bitline wordline bitline + +storedbit = 1 storedbit = 0 C a r ne gi e M e l l on 20 Me m o r y A r r a y Or g a ni z a t i o n ¢ S t o r a ge n o d e s i n o n e c o l u m n c o n n e c t e d t o o n e b i t l i n e ¢ A d d r e s s d e c o d e r a c t i v a t e s o n l y O N E w o r d l i n e ¢ C o n t e n t o f o n e l i n e o f s t o r a ge a v a i l a b l e a t o u t p u t wordline 3 11 10 2:4 Decoder Address 01 00 stored bit = 0wordline 2 wordline 1 wordline 0 stored bit = 1 stored bit = 0 stored bit = 1 stored bit = 0 stored bit = 0 stored bit = 1 stored bit = 1 stored bit = 0 stored bit = 0 stored bit = 1 stored bit = 1 bitline 2 bitline 1 bitline 0 Data 2 Data 1 Data 0 2 C a r ne gi e M e l l on 21 Me m o r y A r r a y Or g a ni z a t i o n ¢ S t o r a ge n o d e s i n o n e c o l u m n c o n n e c t e d t o o n e b i t l i n e ¢ A d d r e s s d e c o d e r a c t i v a t e s o n l y O N E w o r d l i n e ¢ C o n t e n t o f o n e l i n e o f s t o r a ge a v a i l a b l e a t o u t p u t wordline 3 11 10 2:4 Decoder Address 01 00 stored bit = 0wordline 2 wordline 1 wordline 0 stored bit = 1 stored bit = 0 stored bit = 1 stored bit = 0 stored bit = 0 stored bit = 1 stored bit = 1 stored bit = 0 stored bit = 0 stored bit = 1 stored bit = 1 bitline 2 bitline 1 bitline 0 Data 2 Data 1 Data 0 2 10 1 0 0 Acti v e wor d l i n e C a r ne gi e M e l l on 22 Ho w is A c c es s C o nt r o lled ? ¢ A c c e s s t r a n s i s t o r s c o n f i gu r e d a s s w i t c h e s c o n n e c t t h e b i t s t o r a ge t o t h e b i t l i n e . ¢ A c c e s s c o n t r o l l e d b y t h e w o r d l i n e stored bit wordline bitline wordline bitline bitline wordline bitline DRAM SR A M C a r ne gi e M e l l on 23 Re ad O n l y M e mo ri e s ¢ N o n V o l a t i l e : R e a d O n l y M e m o r i e s ( R O M ) c a n b e m a d e m u c h de ns e r § N o ne e d t o c ha ng e t he c o nt e nt ( no s t o r a g e t r a ns i s t o r s ) § D e ns e r a r r a y ¢ U s e d f o r k e e p i n g c o n t e n t t h a t w i l l n o t c h a n ge § P r o g r a m o f a n e m be dde d s y s t e m § C o nf i g ur a t i o n da t a § L o o k up t a bl e s ¢ Re - w r i t a b l e ( f l a s h ) m e m o r i e s a r e c o m m o n l y u s e d § T he s e a r e a c t ua l l y pr o g r a m m a bl e , but w r i t i ng i s v e r y s l o w § F r o m a n a ppl i c a t i o n po i nt o f v i e w i de nt i c a l t o R O M s C a r ne gi e M e l l on 24 RO M s : D o t N o t at i o n wordline bitline wordline bitline bit cell containing 0 bit cell containing 1 11 10 2:4 Decoder Address Data 0 Data 1 Data 2 01 00 2 C a r ne gi e M e l l on 25 RO M St o rag e 11 10 2:4 Decoder Address Data 0 Data 1 Data 2 01 00 2 AddressData 11 10 01 00 depth 010 100 110 011 width C a r ne gi e M e l l on 26 RO M L o g i c Da t a 2 = A 1 Å A 0 Da t a 1 = A 1 + A 0 Da t a 0 = A 1 A 0 11 10 2:4 Decoder Address Data 0 Data 1 Data 2 01 00 2 C a r ne gi e M e l l on 27 Log ic w ith Mem or y A r r a y s ¢ I m p l e m e n t t h e f o l l o w i n g l o gi c f u n c t i o n s u s i n g a 2 2 × 3 - bi t m e m o r y a r r a y: § X = A B § Y = A + B § Z = A B wordline 3 11 10 2:4 Decoder A, B 01 00 stored bit = 1wordline 2 wordline 1 wordline 0 stored bit = 1 stored bit = 0 stored bit = 0 stored bit = 1 stored bit = 1 stored bit = 0 stored bit = 1 stored bit = 0 stored bit = 0 stored bit = 0 stored bit = 0 bitline 2 bitline 1 bitline 0 X Y Z 2 C a r ne gi e M e l l on 28 Log ic w ith Mem or y A r r a y s ¢ C a l l e d l o o k u p t a b l e s ( L U T s ) : l o o k u p o u t p u t a t e a c h i n p u t com b in a t ion ( a d d r e s s ) stored bit = 1 stored bit = 0 00 01 2:4 Decoder A stored bit = 0 bitline stored bit = 0 Y B 10 11 4-word x 1-bit Array A B Y 0 0 0 1 1 0 1 1 0 0 0 1 Truth Table A 1 A 0 C a r ne gi e M e l l on 29 Mul t i - po r t e d Me m o r i e s ¢ P o r t : a d d r e s s / d a t a p a i r ¢ 3 - p o r t e d m e m o r y: § 2 r e a d po r t s ( A 1 /R D 1 , A 2 /R D 2 ) § 1 w r i t e po r t ( A 3 /W D 3 , W E 3 e na bl e s w r i t i ng ) ¢ Sm al l m u l t i - p o r t e d m e m o r i e s a r e c a l l e d r e gi s t e r f i l e s A1 A3WD3 WE3 A2 CLK Array RD2RD1 MMNN NM C a r ne gi e M e l l on 30 Me m o r y A r r a y s i n V e r i l o g // 256 x 3 memory module with one read/write port module dmem ( input clk , // clock input we, // write enable input [7:0] a // 8 - bit address input [2:0] wd , // 3 - bit write data output [2:0] rd ); // 3 - bit read data reg [2:0] RAM[255:0]; // Memory array, holds // 256 entries each 3 bits wide assign rd = RAM[a]; // Read access always @( posedge clk ) // with rising clock if (we) // if write enable RAM[a] <= wd ; // write data is stored in array endmodule C a r ne gi e M e l l on 31 Wh a t h a v e we l e a r ne d? ¢ D i f f e r e n t w a ys o f s t o r i n g d a t a § Re g i s t e rs § St a t i c M e m o r y § D y na m i c M e m o r y ¢ A r r a y o r ga n i z a t i o n § C o m pa c t f o r m § O ne r o w a c t i v e a t a t i m e","libVersion":"0.3.1","langs":""}