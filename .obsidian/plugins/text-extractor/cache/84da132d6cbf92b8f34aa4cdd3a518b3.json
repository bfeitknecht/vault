{"path":"sem1/AuD/VRL/extra/lbehric/A&D-lbehric-w01.pdf","text":"Serie 01 Exercise 1.1 an = 2 Ann = 39n- 2 fü r >1 2, 4, 10, 28, 82, ... an = 34n- 1 - 2 = 3(3An-z = 2) - 2 = 3(3(34n-z - 2) - 2) - 2 = 3(3(3(3an- 1 - 2) - 2) - 2) - 2 = 3\"an- 4 - 33 .2 - 32.2 - 3 .2 - 2 = 34an - 4 - 2(33 + 32 + 31 + 30 =an = 3\"an - 2 zi i = 0 -34 %.2 - 2 = 2(zn - 1 - zi) i = 0 = 2(34 + ) = 19 2 = 2 . 34 - + 1 - 3 n - 1 an = 3 - - + 1/ Proof by induc tion : Base Case n -1 an = 2 = 3 + 1 1. H . wir nehmen an, dass au = 3\" +1 für ein 41 1 . S. K -k+1 an + 1 = 3an - z\"3(3 +1) - 2 = 3 + 3 - 2 = 3 + 1 Exercise 1 .3 a) zu zeigen : Eine 2, = 1 + 2 + 3 + ... + 4 En .. I * n+n 2 4 = n- n = 44 + 1- i = 1 b) · gen:Ein n n - mal - 2. i = \" + ... (+ 1) + ... + n( ) + (+ ) + ... n = ( = (n - 1 + 1)( =(2)4 = (1) = n -1 =n - +27 + 17 , Exercise 1 . 4 al f(m) = 10m3 - m2 , g(m) = 100 m3 lim Im liM 10mm = linin so b) + (m) = 100 - m2-10g(m) + 10 - m3 , g(m) = 5. m3 · log(m lin 1005m3 · log (m) 2) lim Im line Im im (m f lim , in lim im f(m) = 2g(m) = h(m) = m f(m) = g(h(m) = F O-Notation - Eingabegrösse n - Ops : < ,, =, +, - , 0, + N-Menge mögl . Eingabegrössen Definition : Für f :N ->R * O( f ) : = [g: N - IR/7C)0 kn EN g(n) = ( f(n)3 = Menge aller Funktionen g, die ab einem gewissen Punkt kleiner sind als f (mit Konstantem FaktorC) log(n) + Vn = 0 (n) 10 ·( 0z(n) + log(log(n) -O(log(n) 1 E8(n ) log(a) 0(n) Implikationen 90(t) = = beschränkt is t CantN) lim n = 0 = gEO(t) n ->O lim n R = g H Zeige : g(n) = 10 -log(ns) +log(log(n) E O(login , lim 10 .log(45) + log(log(n) =lin 50 ·log() flogllogn) lin 50 log( 5er n ->G log(n) n - G logu g 0(7) lim f(n) = lim In fil uf S & (E) E alle Funktionen, die Schneller als f wachsen, oder gleich Schnell . ge0(f) = fe l(g) & (logn) = { logn, 5-logn, n, n2, 2\", ...) ⑦(t) = 0(f) n (t) - alle Funktionen, die gleich schnell wachsen ⑦(n) = En, 5n, 10n+ in, 3ntlog(ns, ...) (4) = ! (2) = - = nem-nisne ... 201 ·2 = ( +1) = m n = (m) (n-2) .(n - 3) ..... 2 .1 log(log(n) <log(n) = log (n 0) = 10912nx(n<n = n + n < n-log(n) <n - n + 2 = 2n2 + 3n = (2) = n x2 erxn ! x n 240e\"","libVersion":"0.3.2","langs":""}