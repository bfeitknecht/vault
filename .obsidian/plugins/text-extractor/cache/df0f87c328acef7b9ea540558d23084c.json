{"path":"var/export/TI-bf-u03.pdf","text":"Basil Feitknecht, 23-922-099 Camil Schmid, 23-944-234 Dennis Küenzi, 21-559-315 7 D eﬁnition 2.19 A number n in binary representation is called random if K(n) ≥ ⌈log2(n + 1)⌉ − 1. Prime N umber Theorem limn→∞ Prim(n) n/ ln(n) = 1, which can be strengthened to ln(n) − 3 2 < n Prin(n) < ln(n) − 1 2 , for all n ≥ 67 The idea of the proof is, that for some N ∈ N, the number of primes up to N that are not random approaches inﬁnity as N → ∞. This implies that the ratio of primes to random primes is at most ﬁnite. Proof by contradiction. Let's assume there is an inﬁnite amount of random primes and thus, more speciﬁcally, a Let P be a program that takes some i ∈ N+ and generates the i-th prime number. Now we'll construct a program Qn for every n ∈ N+ that generates the primes up to n. Since n is the only variable part in Qn, its kolmogorov complexity is at most log2(n) + c. The Prime Number Theorem states that the index i of any prime number pi is at most pi/ ln(pi) but its length in binary encoding is bounded by log2(pi). Since the i-th prime number's kolmogorov complexity, log2(pi), grows asymptotically faster than the kolmogorov complexity, log2(pi/ ln(pi)) of the program Qi generating all primes up to i. Assuming there are inﬁnitely many random primes, our constant c gets inﬁnitely large as we approach n → ∞. Since c must be ﬁnite, we have arrived at a contradiction which implies that the ratio of random primes to primes up to n approaches zero as n approaches inﬁnity, i.e. there are at most a ﬁnite amount of random primes per deﬁnition 2.19. □ be\u0000in N := n; for i := 1 t\u0000 N do \u0000\u0000i\u0000e(P(i)); end 8 (a) We will construct a ﬁnite automaton that accepts L1, i.e. L(M) = L1. Let M = (Q, Σ, δ, q0, F ), where Q = {q0, q1, q2, q3, q4} is the set of all states, Σ = {a, b} is the input alphabet, and F = {q4} is the set of accepted states. The graph representation of M follows. a b a b a b a b a, b q0 q1 q2 q3 q4 The equivalence classes of the states for some preﬁx words w ∈ Σ∗, where w does not contain the substring abba and doesn't end in abb. □ Kl[q0] = Σ∗ − ⋃ p∈Q−{q0} Kl[p] Kl[q1] = {wa} Kl[q2] = {wab} Kl[q3] = {wabb} Kl[q4] = {yabbaz ∣ y, z ∈ Σ∗} (b) Informally, this language L2 describes all words that contain a diﬀerent parity amount of a and b. This implies that all words in L2 have odd length, since the sum of an even and odd number is, again odd. Formally, we deﬁne a ﬁnite automaton M = (Q, Σ, δ, q0, F ), where Q = {q0, q1}, Σ = {a, b} and F = {q1}. The transition function is deﬁned for (p, x) ∈ Q × Σ. δ(p, x) = { The graph representation of M2 is below. a b a b q0 q1 The equivalence classes of M2 are all words with equal parity occurrences of a and b, and diﬀerent parity occurrences of a and b, respectively. In particular one notes, that all words of even length are in Kl[q0] and all words of odd length are in Kl[q1]. □ q1, if p = q0 q0, else Kl[q0] = {w ∈ Σ∗ ∣ |w|a ≡2 |w|b} Kl[q1] = {w ∈ Σ∗ ∣ |w|a ≢2 |w|b} 9 Let M = {Q, Σ, δM , q0, F } be a ﬁnite state machine, where Q = {q0, q1, q2, q3, q4} denotes the set of states, Σ = {a, b} is the input alphabet, q0 is the initial state, δM is the transition function between states and F = {q0, q3} is the set of accepted states. The language accepted by M can be deﬁned as L(M) = {(aa)n(bb)m ∣ n, m ∈ N}, i.e. all the words that consist of an even number of only a or b, all the words that consist of an even number of a followed by an even number of b or the empty word λ. Furthermore, we deﬁne the equivalence classes of all the states. Kl[q0] = {(aa)n ∣ n ∈ N} Kl[q1] = {an ∣ n ∈ N, n ≡2 1} Kl[q2] = {(aa)nbm ∣ n, m ∈ N, m ≡2 1} Kl[q3] = {(aa)n(bb)m ∣ n, m ∈ N, m ≥ 1} Kl[q4] = Σ∗ − ⋃ p∈Q−{q4} Kl[p] Kl[q0] contains the words that consist of an even number of a, and the empty word λ Kl[q1] is deﬁned as the words that consist of an odd number of only a Kl[q2] is the words that consist of an even number of a followed by an odd number of b and words that consist of an odd number of only b Kl[q3] is words that consist of an even number of a followed by an even number of b and words that consist of an even number of only b Kl[q4] is all the rest, i.e. all the words that are not in any of the other classes □","libVersion":"0.5.0","langs":""}