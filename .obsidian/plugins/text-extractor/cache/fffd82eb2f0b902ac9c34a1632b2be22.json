{"path":"sem2a/DDCA/VRL/slides/DDCA-L09b-timing.pdf","text":"Carnegie Mellon 1 Digital Design and Computer Architecture Mohammad Sadrosadati Frank K. Gürkaynak Adapted from Digital Design and Computer Architecture, David Money Harris & Sarah L. Harris ©2007 Elsevier http://safari.ethz.ch/ddca Sequential Circuits: Timing Carnegie Mellon 2 What will we learn? ¢ Timing of Sequential Logic § Setup time § Hold time ¢ Clock frequency ¢ Metastability and prevention Carnegie Mellon 3 Timing ¢ Flip-flop samples D at clock edge ¢ D must be stable when it is sampled ¢ Similar to a photograph, D must be stable around the clock edge ¢ If D is changing when it is sampled, metastability can occur § Recall that a flip-flop copies the input D to the output Q on the rising edge of the clock. This process is called sampling D on the clock edge. If D is stable at either 0 or 1 when the clock rises, this behavior is clearly defined. But what happens if D is changing at the same time the clock rises? Carnegie Mellon 4 Input Timing Constraints ¢ Setup time: tsetup = time before the clock edge that data must be stable (i.e. not changing) ¢ Hold time: thold = time after the clock edge that data must be stable ¢ Aperture time: ta = time around clock edge that data must be stable (ta = tsetup + thold) CLK tsetup D thold ta Carnegie Mellon 5 Output Timing Constraints ¢ Propagation delay: tpcq = time after clock edge that the output Q is guaranteed to be stable (i.e., to stop changing) ¢ Contamination delay: tccq = time after clock edge that Q might be unstable (i.e., start changing) CLK tccq tpcq Q Carnegie Mellon 6 Dynamic Discipline ¢ The input to a synchronous sequential circuit must be stable during the aperture (setup and hold) time around the clock edge. ¢ Specifically, the input must be stable § at least tsetup before the clock edge § at least until thold after the clock edge Carnegie Mellon 7 Dynamic Discipline ¢ The delay between registers has a minimum and maximum delay, dependent on the delays of the circuit elements CL CLKCLK R1 R2 Q1 D2 (a) CLK Q1 D2 (b) T c Carnegie Mellon 8 Setup Time Constraint ¢ The clock period or cycle time, Tc, is the time between rising edges of a repetitive clock signal. Its reciprocal, fc=1/Tc, is the clock frequency. ¢ All else being the same, increasing the clock frequency increases the work that a digital system can accomplish per unit time. ¢ Frequency is measured in units of Hertz (Hz), or cycles per second: § 1 megahertz (MHz) 106 Hz § 1 gigahertz (GHz) 109 Hz. Carnegie Mellon 9 Setup Time Constraint ¢ The setup time constraint depends on the maximum delay from register R1 through the combinational logic. ¢ The input to register R2 must be stable at least tsetup before the clock edge. CLK Q1 D2 Tc tpcq tpd tsetup CL CLKCLK Q1 D2 R1 R2 Tc >= Carnegie Mellon 10 Setup Time Constraint ¢ The setup time constraint depends on the maximum delay from register R1 through the combinational logic. ¢ The input to register R2 must be stable at least tsetup before the clock edge. CLK Q1 D2 Tc tpcq tpd tsetup CL CLKCLK Q1 D2 R1 R2 Tc >= tpcq + tpd + tsetup tpd <= Carnegie Mellon 11 Setup Time Constraint ¢ The setup time constraint depends on the maximum delay from register R1 through the combinational logic. ¢ The input to register R2 must be stable at least tsetup before the clock edge. CLK Q1 D2 Tc tpcq tpd tsetup CL CLKCLK Q1 D2 R1 R2 Tc >= tpcq + tpd + tsetup tpd <= Tc – (tpcq + tsetup) Carnegie Mellon 12 Hold Time Constraint ¢ The hold time constraint depends on the minimum delay from register R1 through the combinational logic. ¢ The input to register R2 must be stable for at least thold after the clock edge. CLK Q1 D2 tccq tcd thold CL CLKCLK Q1 D2 R1 R2 thold < Carnegie Mellon 13 Hold Time Constraint ¢ The hold time constraint depends on the minimum delay from register R1 through the combinational logic. ¢ The input to register R2 must be stable for at least thold after the clock edge. CLK Q1 D2 tccq tcd thold CL CLKCLK Q1 D2 R1 R2 thold < tccq + tcd tcd > Carnegie Mellon 14 Hold Time Constraint ¢ The hold time constraint depends on the minimum delay from register R1 through the combinational logic. ¢ The input to register R2 must be stable for at least thold after the clock edge. CLK Q1 D2 tccq tcd thold CL CLKCLK Q1 D2 R1 R2 thold < tccq + tcd tcd > thold - tccq Carnegie Mellon 15 Timing Analysis CLK CLK A B C D X' Y' X Yper gate Timing Characteristics tccq = 30 ps tpcq = 50 ps tsetup = 60 ps thold = 70 ps tpd = 35 ps tcd = 25 ps tpd = tcd = Setup time constraint: Tc ≥ fc = 1/Tc = Hold time constraint: tccq + tcd > thold ? Carnegie Mellon 16 Timing Analysis CLK CLK A B C D X' Y' X Y tpd = 3 x 35 ps = 105 ps tcd = 25 ps Setup time constraint: Tc ≥ (50 + 105 + 60) ps = 215 ps fc = 1/Tc = 4.65 GHz Hold time constraint: tccq + tcd > thold ? (30 + 25) ps > 70 ps ? No!per gate Timing Characteristics tccq = 30 ps tpcq = 50 ps tsetup = 60 ps thold = 70 ps tpd = 35 ps tcd = 25 ps Carnegie Mellon 17 Fixing Hold Time Violation CLK CLK A B C D X' Y' X Y tpd = tcd = Setup time constraint: Tc ≥ fc = Hold time constraint: tccq + tcd > thold ? Add buffers to the short paths:per gate Timing Characteristics tccq = 30 ps tpcq = 50 ps tsetup = 60 ps thold = 70 ps tpd = 35 ps tcd = 25 ps Carnegie Mellon 18 Fixing Hold Time Violation CLK CLK A B C D X' Y' X Y tpd = 3 x 35 ps = 105 ps tcd = 2 x 25 ps = 50 ps Setup time constraint: Tc ≥ (50 + 105 + 60) ps = 215 ps fc = 1/Tc = 4.65 GHz Hold time constraint: tccq + tcd > thold ? (30 + 50) ps > 70 ps ? Yes! Add buffers to the short paths:per gate Timing Characteristics tccq = 30 ps tpcq = 50 ps tsetup = 60 ps thold = 70 ps tpd = 35 ps tcd = 25 ps Carnegie Mellon 19 Clock Skew ¢ The clock doesn’t arrive at all registers at the same time ¢ Skew is the difference between two clock edges ¢ Examine the worst case to guarantee that the dynamic discipline is not violated for any register – many registers in a system! t skew CLK1 CLK2 CL CLK2CLK1 R1 R2 Q1 D2 CLKdelay CLK Carnegie Mellon 20 Setup Time Constraint with Clock Skew ¢ In the worst case, the CLK2 is earlier than CLK1 CLK1 Q1 D2 T c tpcq tpd tsetuptskew CL CLK2CLK1 R1 R2 Q1 D2 CLK2 Tc >= Carnegie Mellon 21 Setup Time Constraint with Clock Skew ¢ In the worst case, the CLK2 is earlier than CLK1 CLK1 Q1 D2 T c tpcq tpd tsetuptskew CL CLK2CLK1 R1 R2 Q1 D2 CLK2 Tc >= tpcq +tpd + tsetup + tskew tpd <= Carnegie Mellon 22 Setup Time Constraint with Clock Skew ¢ In the worst case, the CLK2 is earlier than CLK1 CLK1 Q1 D2 T c tpcq tpd tsetuptskew CL CLK2CLK1 R1 R2 Q1 D2 CLK2 Tc >= tpcq +tpd + tsetup + tskew tpd <= Tc – (tpcq + tsetup +tskew) Carnegie Mellon 23 Hold Time Constraint with Clock Skew ¢ In the worst case, CLK2 is later than CLK1 tccq tcd thold Q1 D2 tskew CL CLK2CLK1 R1 R2 Q1 D2 CLK2 CLK1 thold + tskew =< Carnegie Mellon 24 Hold Time Constraint with Clock Skew ¢ In the worst case, CLK2 is later than CLK1 tccq tcd thold Q1 D2 tskew CL CLK2CLK1 R1 R2 Q1 D2 CLK2 CLK1 thold + tskew =< tccq + tcd tcd >= Carnegie Mellon 25 Hold Time Constraint with Clock Skew ¢ In the worst case, CLK2 is later than CLK1 tccq tcd thold Q1 D2 tskew CL CLK2CLK1 R1 R2 Q1 D2 CLK2 CLK1 thold + tskew =< tccq + tcd tcd >= thold + tskew - tccq Carnegie Mellon 26 Violating the Dynamic Discipline ¢ Asynchronous (for example, user) inputs might violate the dynamic discipline D Q CLKbutton CLK tsetup thold taperture D Q D Q D Q ???Case ICase IICase III Carnegie Mellon 27 Metastability ¢ Any bi-stable device has two stable states and a metastable state between them ¢ A flip-flop has two stable states (1 and 0) and one metastable state ¢ If a flip-flop lands in the metastable state, it could stay there for an undetermined amount of time metastable stablestable Carnegie Mellon 28 Metastability ¢ T0/Tc describes the probability that the input changes at a bad time, i.e., during the aperture time P(tres > t) = (T0/Tc ) e-t/τ ¢ τ is a time constant indicating how fast the flip-flop moves away from the metastable state; it is related to the delay through the cross-coupled gates in the flip-flop ¢ In short, if a flip-flop samples a metastable input, if you wait long enough (t), the output will have resolved to 1 or 0 with high probability. Carnegie Mellon 29 Synchronizers ¢ Asynchronous inputs (D) are inevitable (user interfaces, systems with different clocks interacting, etc.). ¢ The goal of a synchronizer is to make the probability of failure (the output Q still being metastable) low. ¢ A synchronizer cannot make the probability of failure 0. D Q CLKSYNC Carnegie Mellon 30 Synchronizer Internals ¢ A synchronizer can be built with two back-to-back flip-flops. ¢ Suppose the input D is changing when it is sampled by F1. ¢ Internal signal D2 has (Tc - tsetup) time to resolve a 1 or 0. D Q D2 Q D2 Tc tsetup tpcq CLK CLK CLK tres metastable F1 F2 Carnegie Mellon 31 Synchronizer Probability of Failure ¢ For each sample, the probability of failure of this synchronizer is: D Q D2 Q D2 Tc tsetup tpcq CLK CLK CLK tres metastable F1 F2 Carnegie Mellon 32 Synchronizer Mean Time Before Failure ¢ If the asynchronous input changes once per second, the probability of failure per second of the synchronizer is simply P(failure). ¢ In general, if the input changes N times per second, the probability of failure per second of the synchronizer is: ¢ Thus, the synchronizer fails, on average,1/[P(failure)/second] This is called the mean time between failures, MTBF: Carnegie Mellon 33 Example Synchronizer D D2 Q CLK CLK F1 F2 Suppose: Tc = 1/500 MHz = 2 ns τ = 200 ps T0 = 150 ps tsetup = 100 ps N = 10 events per second What is the probability of failure? MTBF? P(failure) = = P(failure)/second = = MTBF = Carnegie Mellon 34 Example Synchronizer D D2 Q CLK CLK F1 F2 Suppose: Tc = 1/500 MHz = 2 ns τ = 200 ps T0 = 150 ps tsetup = 100 ps N = 10 events per second What is the probability of failure? MTBF? P(failure) = (150 ps/2 ns) e-(1.9 ns)/200 ps = 5.6 × 10-6 P(failure)/second = 10 × (5.6 × 10-6 ) = 5.6 × 10-5 / second MTBF = 1/[P(failure)/second] ≈ 5 hours Carnegie Mellon 35 What did we learn ? ¢ Timing constraints for sequential circuits § Setup time, time needed for the inputs to be present before clock § Hold time, time needed after the clock where inputs should not change § Aperture time, time around clock event where inputs should stay stable ¢ Problems related to clock skew ¢ Metastability and Synchronization","libVersion":"0.3.2","langs":""}