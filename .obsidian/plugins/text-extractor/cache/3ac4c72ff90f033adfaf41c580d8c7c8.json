{"path":"sem3/A&D/VRL/extra/lbehric/AuD-w11-lbehric.pdf","text":"Serie 11 Exercise 11 . 1 011 11/15 814 A T B = H 1n T T V F S G 4/10 E 7/13 - in 3/9 - I >C 7 D (46/17) 2/5 6/12 Exercise 11 . 2 al O (IE)\" (V12) (E) = IE/Y IEl\" Iterationer , jede Iteration benötigt O(IVP) => O(IE)\" . IVR) b) 0((k - m(2) G =(V E , 2) V = Evi : ve r , Le s , e , 2, ..., 433 IV = (+) · / We define E' and C : E -> Rasso (1) * (vu )tE , OELEG : (w ( , wKl <E with (IN' , w()) = c ( (v, w) (2) F(unIEE , OE (E k e : (r( , wICE with c'(Irl , mKH)) = 0 (3) FO E CE K : (t( , (1) -E with [I t' , th))) = 0 S ⑯ Dijkstra vo n 31 % I t => return (d[+(* J) Y ↓D Vorlesung Recap Borurka · ·X , FF - =1. Iteration while F nicht Spannbaum : · It = 2 . It . (S1, ..., Su) = EHks ronF -a (e1 , ..., (n) = minimale Kanten an Se , ..., Su ! F - Fude, ..., 2n) O (IV+E1) <log(V) Iterational = c0(((V +11) · log (2) Prim (G , 5) : A SFE s] · X , while E nicht Spannbaum : FF 0 ! UV P F minimale Kaule an s (u * ES , V * ES) FF Fu(u + -3 ; SE SuGr 0((IVI+IE1) · log(Ir)) (wie Dijkstra) Kruskal F = O (sichere Kaufen) for ur e E , aufst . Sortiert · ·X , ifur in ve r s c . EHKs vonE - F = Fu Cur3 ! 5 O (IEl · logIE) + IVl · logIV)) IE) = OCIUR) ↑ ↑ sortieren Union find 0 (IE)· log (101) + 121 · log(Ir11) =O ((IVI+IE1) . log(( V)","libVersion":"0.3.2","langs":""}