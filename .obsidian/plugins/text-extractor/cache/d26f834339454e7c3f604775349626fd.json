{"path":"sem1/AuD/VRL/other/lbehric/AuD-w03-lbehric.pdf","text":"Exercise Sheet 03 Exercise 3 .1 lim Inin = >E0(9) = (ER\" => f = ⑦(g) - => f) / l(9) (a) (1) E n3x+(10n2) V lim =in -in (2) n2 + 3n = O(nzlog(n) lim n2+3n imanalogens geng + no (3) 54\" + 3n + n + 8 = 8(n) V lim 5n4 + 342 + n + 8 =lin5 5 n = 0 nY (4) 34 (2) v lim 3 lim in (b) (1) (ein(n) + 2)n = ⑦(n) - 1 = Sin(t) = 1 = 1 E Sin(n) + 2 = E => n = (sin(n) + 2) . n = 3N-- n = 0((sin(n) + 2). n) =(sin(n) + 2) · n = O(n) => (sin(n) + 2) . n = ⑦(n) 4 ,1 = n i 2 Z i = I => = O(n3) #si 2 ne 1= 11 C 2 ~ Cine => 0(zi) = Iz = (n3) (3) z .z : (0g(n + n + n2) = 0(log(n3 + n + n) c . log(n3 +n + n) (nlog +menlog(3) ( ( = 7 ·log(n3 + n2 + n)- I log(3) = 10g(n3 + 2 + n) 2 4 · log(n) = 4 · log(n3) = - log(n3 + n2 + u) (4) 5 ri = O( n) F = Wie = nun on t = n e 0 (r) n => i = (n ) ) Exercise 3.2 S = 010010010 s = \"0110\"k = 2 N al CEO fo r i F 0, ..., n -1 fo r je i , ... in -1 * FO => O(n3) for (Ei, . . . , j do Lit S(1 if(x = = k) C + + b) Gonzo\" T(i] T = {1 , 1 , 2 , 0 , 03 i = 0 : 0 i = 1 : 01 i = 2 : 011 , 010 i = 3 : 8A i = 4 : G ↑ int (n+1] X = 0 fo r i =0 , ..., n -1 do => 0(n) if (S(i] = = 1) * + t T(x] + + return T 2) Prefixtable, Suffittable 01 * = 2 n spanning (m, 4, 5) TeSi] E Anzahl bitstrings mit i einsen, die bei menden Th e SuffixtablE (S(0 ... m]) =O(n) Tz ( i) An z . Bits mit i einsen, die bei m beginnen Tz P R E F IX TA B L E (S (m+1 , ..., n -13) O(n) min(k, m) re tu rn 2 T , (i] · Tz(k - 13 O(n) i = max(0 ,k - (n - m - 1) => O(n) O(ulogn) *- Substring Count (S ,k , i = 0 , j = n - 1) if i = j if k = 1 and S(i] = 1 then re tu r n 1 else if k = 0 and S(i] = 0 then re tu rn 1 else return 0 else m (itj)2 re tu rn substringcount (S,k , i, m) + Substring count (s ,4, m+1,s) + SPANNING (m, A(n) = 2A(E) + 0(n) = O(n-log() Exercise 3 . 4 Eure = fn + Eure to = 0 , f = 1 z .z .fn . 1 , 5 Base case n = 1, n = 2 n = 1, f = 140 , 5 = 5 . 1 , 51 V n = 2, +z = 120 ,75 = E- 1 ,52 v 1. It fuzz - 1 , 54 gilt fü r ein K =1 fu+173 - 1 , 5 k + 1 fü r k + 1 gilt. 1 . 5. K1 k + 1 -> k + 2 fu + 2 = fk+ + fk - 13 . 1 ,5441 + - 1 ,5 = ( - 1 ,5k(1 , 5 + 1) = 73 . 1 ,5\" . 2 , 5 2- - 1 , 54 - 1 , 5 = > - 1 , 5k + 2 Suchalgorithmen Lineare Suche Binäre Suche Ite rativ Rekursiv T(1) = C T(n) = T(n/2) + d n = 24 = = 1092(n) = H T(24) = +(2* ) + d = T(2-2) + 2d = +(2 - ) + 3d = ... = T(1 ) + k -d = C + K -d =( + 10gz(n) - d =O(log(n) Aufgabe Sortieralgorithmen (FS20 +1 e) Insertion Sort, Selection Sort, MergeSort, Bubble sort - - I - - - , Il I --> - U - (sy///xy #- -I // Aufgabe Invarianter (F321 +1b) Invarianten i) Zeige INV(1) ii) zeige INV(i) -> INV(i+t) iii) zeige (NV(n) -> Korrektheit Mehr zu Invarianten : ·Aufgaben Woche4 AS21, H 322 · FS20 T3 Master Theorem 1) T(n) = 4 .T(E) + 10046 = 1 T(n) = 0(n2)a 10ge(a) = 2 2) + (n) = T(nz) + En T(n) = 0(n)2 a = 1 b = 1 c = 3/2 1092a = 0 3) T(n) = 4 . T(2) + Enz T(n) = 0(n2 logn) a = 4 6 = 2 c = 1892a = Z T(n) = 4 -T(E) + 2n (1) = 1 a = 4 ,log ,a = 2 b = 1 c = 2 T(n) = 0(n2) Pe e r Grading Ex. 3.1 (in alten Gruppen)","libVersion":"0.3.2","langs":""}