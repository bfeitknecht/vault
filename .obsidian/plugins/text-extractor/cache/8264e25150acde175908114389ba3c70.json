{"path":"sem2/AuW/PV/exams/AuW-exam-FS21.pdf","text":"ETH Z¨urich Institute of Theoretical Computer Science Dr. Johannes Lengler Prof. Emo Welzl FS 2021 Algorithmen und Wahrscheinlichkeit Pr¨ufung Schlagen Sie die Klausur erst auf Anweisung der Aufsicht auf ! Kandidat/in: Name: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Vorname: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Stud.-Nr.: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Ich bezeuge mit meiner Unterschrift, dass ich die Pr¨ufung unter regul¨aren Bedingungen ablegen kann und dass ich die unten stehenden allgemeinen Bemerkungen gelesen und verstanden habe. Unterschrift: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Allgemeine Bemerkungen und Hinweise: • Diese Pr¨ufung besteht mit diesem Deckblatt aus 16 Seiten mit insgesamt 6 Aufgaben. Am Ende der Klausur ﬁnden Sie zwei leere Bl¨atter f¨ur Notizen. Ausserdem liegt eine Formelsammlung an Ihrem Platz. • Die Pr¨ufung dauert 90 Minuten. • Falls Sie w¨ahrend der Pr¨ufung in irgendeiner Weise gest¨ort oder beeintr¨achtigt werden, melden Sie dies sofort der Aufsichtsperson. Sp¨atere Klagen werden nicht akzeptiert. • Schreiben Sie nicht mit Bleistift und nicht mit roter oder gr¨uner Farbe. • Alle Mobiltelefone und sonstigen elektronischen Ger¨ate m¨ussen vollst¨andig ausgeschaltet sein und im Gep¨ack verstaut werden. • Pro Aufgabe ist h¨ochstens eine g¨ultige Version eines L¨osungsversuchs zul¨assig. Streichen Sie ung¨ultige L¨osungsversuche klar durch. • Abschreiben und sonstige Versuche des Betrugs f¨uhren zum sofortigem Ausschluss von der Pr¨ufung und k¨onnen rechtliche Folgen haben. • Wenn Sie zus¨atzliches Papier (kein eigenes!) verwenden, dann versehen Sie jedes Blatt mit Ihrem Namen. • Wenn Sie w¨ahrend der Pr¨ufung eine inhaltliche Frage stellen wollen, heben Sie bitte die Hand. Wir bringen Ihnen ein Blatt Papier, auf das Sie Ihre Frage schreiben, wir werden die Frage dann zentral beantworten und Ihnen die Antwort bringen. Bitte stellen Sie keine m¨undlichen Fragen. • Vergessen Sie nicht, dieses Deckblatt zu unterschreiben. • Sie d¨urfen Ihre L¨osungen auf Deutsch oder Englisch verfassen. Viel Erfolg! Aufgabe 1 (14 Punkte) 2 (5 Punkte) 3 (5 Punkte) 4 (5 Punkte) 5 (10 Punkte) 6 (6 Punkte) Σ (45 Punkte) Punkte 1. Korrektur 2. Korrektur 12 Aufgabe 1 – Begr¨undung oder Gegenbeispiel Kreuzen Sie f¨ur jede der folgenden Aussagen an, ob sie wahr oder falsch ist und begr¨unden Sie Ihre Antwort. Falls die Aussage falsch ist, kann die Begr¨undung auch ein Gegenbeispiel sein. Beachten Sie: Erkl¨aren Sie Ihre Begr¨undungen/Gegenbeispiele genau. Punkte werden nur ver- geben, sofern die Antwort nicht nur richtig sondern auch klar und korrekt begr¨undet ist. (a) Sei G ein Graph, der einen Hamiltonkreis hat. Dann ist G 2-zusammenh¨angend. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) (b) Sei f ein maximaler Fluss in einem Netzwerk N = (V, A, c, s, t). Dann gibt es keine zwei Knoten u, v ∈ V , sodass sowohl die Kante (u, v) als auch die Kante (v, u) im Restnetzwerk Nf vorkommt. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) 3 (c) Sei G ein Graph. Wenn es einen Knoten v ∈ V (G) gibt, f¨ur den gilt, dass G[N (v)] mit k Farben gef¨arbt werden kann, dann kann G mit k + 1 Farben gef¨arbt werden. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) (d) Seien P und Q zwei Mengen von Punkten. Dann gilt Conv(P ∩ Q) = Conv(P ) ∩ Conv(Q). WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) 4 (e) Sei G ein zusammenh¨angender Graph mit 10 Knoten und 20 Kanten. Dann gilt χ(G) ≤ ∆(G). WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (3 Punkte) (f) Sei G ein vollst¨andiger Graph mit einer Gewichtsfunktion, die auch negative Werte annehmen kann. Dann gilt dass das Gewicht eines minimalen Spannbaums h¨ochstens so gross ist wie eine optimale TSP Route. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (3 Punkte) 5 Aufgabe 2 – Obere Schranken Wir werfen einen fairen 6-seitigen W¨urfel n ≥ 1 mal. Sei X die Anzahl der W¨urfe, bei denen der W¨urfel ‘6’ zeigt. Berechnen Sie eine m¨oglichst gute obere Schranken f¨ur Pr[X ≥ 2n/9]. (a) Mithilfe der Ungleichung von Markov. (1 Punkte) (b) Mithilfe der Ungleichung von Chebychev. (2 Punkte) (c) Mithilfe der Chernoﬀ-Schranken. (2 Punkte) 6 Aufgabe 3 – Fische im Teich Sie haben einen Teich mit n Lachsen und n Forellen. Sie haben einen Kescher, mit dem Sie Fische aus dem Teich fangen wollen. Jedes Mal wenn Sie einen Fisch fangen, fangen Sie einen Fisch zuf¨allig gleichverteilt aus allen noch im Teich vorhandenen Fischen. Sie wollen nun f¨ur eine Grillparty alle Lachse fangen, um diese zu grillen. Da Sie die Forellenpopulation in Ihrem Teich erhalten wollen, werfen Sie jedes Mal, wenn Sie eine Forelle gefangen haben, diese zur¨uck in den Teich (die Tiere leiden hierunter nicht!). Zeigen Sie, dass Sie in der Erwartung ∑n i=1 n+i i Fische fangen m¨ussen, um alle Lachse zu fangen. (5 Punkte) 7 Aufgabe 4 – Restnetzwerk Sei N ein Netzwerk ohne entgegengesetzte Kanten und sei f ein Fluss in G. Unten abgebildet sehen Sie das Restnetzwerk Rf . s1234t213132221312 (a) Ist f maximal? Geben Sie eine kurze Begr¨undung f¨ur Ihre Antwort. (1 Punkte) 8 (b) Rekonstruieren sie N und f . (4 Punkte) Fluss f : s1234t Netzwerk N : s1234t 9 Aufgabe 5 – Maximale Matchings In dieser Aufgabe besch¨aftigen wir uns mit dem in der Vorlesung kennengelernten Algorithmus von Hopcroft und Karp zum Finden maximaler Matchings in bipartiten Graphen. Sei G = (A ⊎ B, E) ein bipartiter Graph mit |A| = |B| = n. (a) F¨ullen Sie die L¨ucken “. . . . . . . . . . . . . . ” in unten stehendem Algorithmus so aus, dass er ein maximales Matching in G ﬁndet. (3 Punkte) function Maximal Matching(G): M := . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . while . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . do: k :=. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Finde eine inklusionsmaximale Menge S von . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . for all P aus S do M = . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . return M (b) Geben Sie an, wie oft der Algorithmus die while-Schleife h¨ochstens durchl¨auft, Ihre Antwort sollte in O-Notation bestm¨oglich sein. Begr¨unden Sie Ihre Antwort kurz. (3 Punkte) (c) Sei M die Ausgabe unseres Algorithmus. Wir bezeichnen mit A′ ⊆ A und B′ ⊆ B die Menge der Knoten aus G, die nicht von M ¨uberdeckt werden. Zeigen Sie, dass |A′| = |B′|. Folgern Sie, dass f¨ur jedes Paar a ∈ A′ und b ∈ B′ gilt, dass deg(a) + deg(b) ≤ |A| − |A′|. (4 Punkte) 10 Aufgabe 6 – R¨uchw¨artsanalyse Hinweis: Diese Aufgabe ist aufwendiger als die vorherigen. Wir raten Ihnen, diese Aufgabe erst zu lesen und zu bearbeiten, wenn Sie mit dem Rest der Klausur fertig sind. Eines der geometrischen Probleme, die Sie in diesem Kurs kennen gelernt haben, ist die Berechnung des kleinsten umschliessenden Kreises C(P ) einer Punktemenge P . In dieser Aufgabe wollen wir einen alternativen Ansatz f¨ur dieses Problem betrachten. Sie k¨onnen f¨ur alle in dieser Aufgabe vorkommenden Punktemengen annehmen, dass sie in allgemeiner Lage sind. Sei P eine Menge mit n Punkten in der Ebene und sei (p1, p2, . . . , pn) eine uniform zuf¨allige Reihenfolge von P . (a) Geben Sie die bestm¨ogliche obere Schranke, als eine Funktion von n, die Wahrscheinlichkeit angibt, dass pn ausserhalb von C({p1, . . . , pn−1}) liegt. (2 Punkte) Wir betrachten das folgende Hilfsproblem. Seien P und H zwei endliche Punktemengen, wobei |H| = 0, 1, 2 oder 3. Wir deﬁnieren C(P, H) als den kleinsten umschliessenden Kreis von P , der H auf seinem Rand hat. Wir merken an, dass ein solcher Kreis nicht immer existieren muss, und wenn er es tut, dass er nicht notwendigerweise identisch ist mit dem kleinsten umschliessenden Kreis von P ∪ H. (b) Nehmen Sie an, dass ein Algorithmus existiert, der C(Q, {x}), f¨ur jede g¨ultige Kombination einer Punktmenge Q und einem Punkt x in erwarteter Laufzeit O(|Q|) berechnet. Beschreiben Sie, wie man C({p1, . . . , pn}) mithilfe von C({p1, . . . , pn−1}) berechnen kann. Be- schreiben Sie einen Algorithmus der als Eingabe {p1, . . . pn} bekommt und C({p1, . . . , pn}) in erwarteter Zeit O(n) berechnet. (2 Punkte) Hinweis: Zu der Beschreibung eines Algorithmus geh¨ort wie immer auch ein Korrektheitsbe- weis. 11 (c) Um den Beweis abzuschliessen, sind wir an dem in b) benutzten Algorithmus interessiert. Be- schreiben Sie einen randomisierten Algorithmus, der C(Q, {x}) mit Erfolgswahrscheinlichkeit 1 und erwarteter Laufzeit O(|Q|) berechnet. (2 Punkte) Hinweis: F¨ur diese Aufgabe d¨urfen Sie die unten stehend geometrische Aussagen ohne Beweis benutzen. (1) F¨ur drei Punkte p1, p2, p3 ∈ P gibt es einen eindeutigen Kreis mit {p1, p2, p3} auf dem Rand. (2) Wenn f¨ur eine Punktemenge P ein (nicht notwendigerweise kleinster) umschliessenden Kreis C mit H auf dem Rand existiert, dann existiert C(P, H) und ist eindeutig. (3) F¨ur Punktemengen P und H gibt es h¨ochstens drei Punkte p ∈ P sodass C(P \\ {p}, H) ̸= C(P, H). Alle diese Punkte liegen auf dem Rand von C(P, H). 12 Zus¨atzlicher Platz f¨ur Notizen. Wenn Sie auf den folgenden Seiten L¨osungen aufschreiben, die gewertet werden sollen, dann merken Sie das unbedingt bei der jeweiligen Aufgabe an. 131415 Bitte drehen Sie die Klausur noch nicht um. Warten Sie bis wir den Beginn der Klausur ansagen! 16","libVersion":"0.3.2","langs":""}