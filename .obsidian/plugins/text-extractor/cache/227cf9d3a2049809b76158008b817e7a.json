{"path":"sem2a/DDCA/UE/e/report/DDCA-u02-report.pdf","text":"1 You have to submit this report via Moodle. Use a zip file or tarball that contains the report and any other required material. Only one member from each group should submit the report. All members of the group will get the same grade. The name of the submitted file should be Lab2_LastName1_LastName2.zip (or .tar), where LastName1 and LastName2 are the last names of the members of the group. Note 1: Please include all the required material. No links/shortcuts are accepted. Note 2: The deadline for the report is a hard deadline and it will not be extended. Exercise 1. Decoder In this exercise, you will design a Decoder module and implement it using built-in logic gates (e.g., AND, OR, NOT, ...) in Verilog. Here is the description of a 2-input Decoder: • The 2-input decoder has 2 inputs and 4 outputs. • For any given input, exactly one of the decoder’s outputs is 1; all other outputs are 0. • The single output that is logically 1 is the output that corresponds to the input pattern applied to the circuit. For example, the first output of the decoder will be 1 when the input is ‘00’. Map the inputs to two switches on the board, and map outputs to 4 LEDs on the board. Map your design to the FPGA and check the correctness of your design. Include your Verilog codes files and the constraint file in your report submission. To receive full points, be sure to instantiate logic gates as described in slides 24 to 31 of the supplemental PDF for Lab 2. You will not receive full points if you implement this exercise using Verilog’s bitwise operators. Design of Digital Circuits: Lab Report Lab 2: Mapping Your Circuit to an FPGA Date Grade Names Lab session / lab room 2 Exercise 2. Multiplexer (a) Design a multiplexer with these features: • The multiplexer should select one of 2 inputs and connect it to its output. • The selection of which input is routed to the output is controlled by a 1-bit control input. We call this multiplexer a 2:1 MUX. (b) Use several instances of your 2:1 MUX to design a 4:1 MUX. Map your design to your FPGA board, with input and output ports of your choice, and check the functionality of your circuit. Include your Verilog files and constraint file in your submission.","libVersion":"0.3.2","langs":""}