{"path":"sem2/DDCA/PV/exams/AuW-exam-FS19.pdf","text":"ETH Z¨urich Institute of Theoretical Computer Science Prof. Angelika Steger Dr. Anders Martinsson Frederik Benzing, Asier Mujika, Miloˇs Truji´c FS 2019 Algorithmen und Wahrscheinlichkeit Pr¨ufung Schlagen Sie die Klausur erst auf Anweisung der Aufsicht auf ! Kandidat/in: Name: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Vorname: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Stud.-Nr.: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Ich bezeuge mit meiner Unterschrift, dass ich die Pr¨ufung unter regul¨aren Bedingungen ablegen kann und dass ich die unten stehenden allgemeinen Bemerkungen gelesen und verstanden habe. Unterschrift: . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Allgemeine Bemerkungen und Hinweise: • Diese Pr¨ufung besteht mit diesem Deckblatt aus 6 beidseitig bedruckten Aufgabenbl¨attern mit insgesamt 4 Aufgaben. Am Ende der Klausur ﬁnden Sie ein leeres Blatt f¨ur Notizen. Ausserdem liegt eine Formelsammlung an Ihrem Platz. • Die Pr¨ufung dauert 90 Minuten. • Falls Sie w¨ahrend der Pr¨ufung in irgendeiner Weise gest¨ort oder beeintr¨achtigt werden, melden Sie dies sofort der Aufsichtsperson. Sp¨atere Klagen werden nicht akzeptiert. • Schreiben Sie nicht mit Bleistift und nicht mit roter oder gr¨uner Farbe. • Alle Mobiltelefone und sonstigen elektronischen Ger¨ate m¨ussen vollst¨andig ausgeschaltet sein und im Gep¨ack verstaut werden. • Pro Aufgabe ist h¨ochstens eine g¨ultige Version eines L¨osungsversuchs zul¨assig. Streichen Sie ung¨ulti- ge L¨osungsversuche klar durch. • Abschreiben und sonstige Versuche des Betrugs f¨uhren zum sofortigem Ausschluss von der Pr¨ufung und k¨onnen rechtliche Folgen haben. • Wenn Sie zus¨atzliches Papier (kein eigenes!) verwenden, dann versehen Sie jedes Blatt mit Ihrem Namen. • Vergessen Sie nicht, dieses Deckblatt zu unterschreiben. • Sie d¨urfen Ihre L¨osungen auf Deutsch oder Englisch verfassen. Viel Erfolg! Aufgabe 1 (14 Punkte) 2 (8 Punkte) 3 (10 Punkte) 4 (12 Punkte) Σ (44 Punkte) Punkte 1. Korrektur 2. Korrektur Aufgabe 1 – Gemischte Aufgaben Kreuzen Sie f¨ur jede der folgenden Aussagen an, ob sie wahr oder falsch ist und begr¨unden Sie Ihre Antwort. Falls die Aussage falsch ist, kann die Begr¨undung auch ein Gegenbeispiel sein. Beachten Sie: Erkl¨aren Sie Ihre Begr¨undungen/Gegenbeispiele genau. Punkte werden nur ver- geben, sofern die Antwort nicht nur richtig sondern auch klar und korrekt begr¨undet ist. (a) Jeder 2-Kanten-zusammenh¨angende Graph G is auch 2-Knoten-zusammenh¨angend. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) (b) F¨ur jeden zusammenh¨angenden Graphen G mit n Knoten gilt: Gibt es in G einen Kreis mit k Knoten, k < n, so gibt es in G auch einen Pfad mit k + 1 Knoten. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) (c) Jedes kardinalit¨atsmaximale Matching ist auch ein inklusionsmaximales Matching. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) (d) Sei X ≥ 0 eine nicht-negative Zufallsvariable mit Erwartungswert E[X] = 10. Dann gilt Pr[X ≥ 20] ≤ 1 2 . WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (2 Punkte) (e) Sei G ein Graph mit n ≥ 3 Knoten und sei deg(v) ≥ 1 2 n f¨ur alle v ∈ V . Dann ist G zusam- menh¨angend. WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (3 Punkte) (f) F¨ur eine endliche Punktmenge S in der Ebene (d.h. S ⊂ R2) bezeichne h(S) die Anzahl der Ecken von conv(S). Falls Q, P endliche Punktmengen in der Ebene sind und Q ⊆ P , dann gilt h(Q) ≤ h(P ). WAHR □ FALSCH □ Begr¨undung/Gegenbeispiel: (3 Punkte) Aufgabe 2 – Maximaler Fluss Gesucht ist ein eﬃzienter Algorithmus der folgendes Problem l¨ost: Gegeben ist ein Netzwerk N = (V, A, c, s, t) und ein Fluss f . Falls der Fluss maximal ist, soll der Algorithmus ausgeben “Fluss ist bereits maximal”. Ansonsten soll der Algorithmus einen Fluss ausgeben, dessen Wert strikt gr¨osser als der von f ist. Sie d¨urfen annehmen, dass es in N keine entgegengerichteten Kanten gibt. F¨ullen Sie die L¨ucken “. . . . . . . . . . . . . . ” in unten stehendem Algorithmus so aus, dass er obiges Problem l¨ost. (8 Punkte) Konstruiere ein Netzwerk N ′ = (V ′, A ′, c ′, s, t) mit V ′ = . . . . . . for all (x, y) ∈ A do: Falls f (x, y) > 0 f¨uge eine Kante e =. . . . . . . . . . . . . . . . . mit Kapazit¨at c′(e) =. . . . . . . . . . . . . . . . . zu A′ hinzu. Falls f (x, y) < c(x, y) f¨uge eine Kante e =. . . . . . . . . . . . . . . . . mit Kapazit¨at c′(e) =. . . . . . . . . . . . . . . . . zu A′ hinzu. if Es existiert ein . . . . . -Pfad P in . . . . . . . . . . . . . . . . . . . . . . then: Sei ε das Minimum von . . . . . . . . . . . . . . . . . ¨uber alle e ∈. . . . . . . . . . . . . . . . . Deﬁniere einen Fluss f ′ mit: f ′(x, y) = . . . . . . . . . . . . . . . . . falls (x, y) in . . . . . . . . . . . enthalten ist f ′(x, y) = . . . . . . . . . . . . . . . . . falls (y, x) in . . . . . . . . . . . enthalten ist f ′(x, y) = . . . . . . . . . . . . . . . . . sonst. return f ′ else return “Fluss ist bereits maximal” Aufgabe 3 – M¨unz-Experiment Wir betrachten folgendes Experiment: Wir haben 10 faire M¨unzen, die von eins bis zehn numme- riert sind. F¨ur jedes i = 1, . . . , 10, nehmen wir die i-te M¨unze und werfen sie so oft, bis sie Kopf und Zahl jeweils mindestens einmal gezeigt hat. (a) Sei X1 die Anzahl W¨urfe, die wir die erste M¨unze w¨ahrend des ersten Experiments werfen. Zeigen Sie E[X1] = 3 und Var[X1] = 2. (4 Punkte) (b) Sie X die gesamte Anzahl M¨unzw¨urfe (aller zehn M¨unzen) w¨ahrend des Experiments. Berech- nen Sie E[X] und Var(X). (2 Punkte) (c) Finden Sie eine m¨oglichste gute obere Schranke f¨ur die Wahrscheinlichkeit, dass es w¨ahrend des Experiments mindestens 40 M¨unzw¨urfe gibt. (4 Punkte) Hinweis: Sie d¨urfen ohne Begr¨undung annehmen, dass eine Zufallsvariable, die der geometrischen Verteilung Geom(p) folgt, Erwartungswert 1/p und Varianz 1 p2 − 1 p hat. Auch wenn Sie eine Teilaufgabe nicht l¨osen k¨onnen, d¨urfen Sie deren Aussage f¨ur einen m¨oglichen Beweis anderer Teilaussagen verwenden. (a): (b): (c): Aufgabe 4 – Zuf¨allige Matchings Sei k ≥ 2 und sei G = (V, E) ein k-regul¨arer Graph mit n Knoten. Beachten Sie, dass der Graph genau m = nk 2 Kanten hat. Wir betrachten folgenden Algorithmus um ein Matching M in G zu erstellen: 1. Markiere jede Kante in G unabh¨angig von allen anderen Kanten mit Wahrscheinlichkeit p, wobei 0 ≤ p ≤ 1 gegeben (und ﬁx) ist. 2. Solange ein Knoten v existiert, der mehr als eine inzidente, markierte Kante hat: Wir ent- fernen die Markierung einer beliebigen, zu v inzidenten, markierten Kante. 3. Wenn keine solchen Knoten mehr existieren, bezeichnen wir die verbliebene Menge der mar- kierten Kanten mit M und geben M aus. Analysieren Sie diesen Algorithmus anhand der folgenden Teilaufgaben: (a) Sei X die Anzahl Kanten, die im ersten Schritt des obigen Algorithmus markiert wurde. Bestimmen Sie E[X]. (3 Punkte) (b) Sei Y die Anzahl (ungeordneter) Paare von Kanten {e1, e2} ⊂ E, so dass (i) e1 ̸= e2 (ii) beide Kanten, e1 und e2 markiert wurden, und (iii) die Kanten e1 und e2 einen gemeinsamen Endpunkt haben. Berechnen Sie E[Y ]. (4 Punkte) (c) Verwenden Sie die vorherigen Teilaufgaben um zu zeigen, dass G ein Matching mit mindestens n 8 Kanten enth¨alt. Begr¨unden Sie jeden Ihrer Schritte genau. (5 Punkte) Hinweis: F¨ur (c) kann es n¨utzlich sein, den Parameter p zu optimieren. (a): (b): (b) Forts.: (c) Zus¨atzlicher Platz f¨ur Notizen. Wenn Sie hier L¨osungen aufschreiben, die gewertet werden sollen, dann merken Sie das unbedingt bei der jeweiligen Aufgabe an.","libVersion":"0.3.2","langs":""}